{"version":3,"file":"static/js/5715.70c923fa.chunk.js","mappings":"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","sources":["components/Blog/ContentEditor.jsx","components/Blog/SimpleBreadcrumb.jsx","pages/BlogTutorial/Details/TutorialDetails.jsx"],"sourcesContent":["import \"../../assets/scss/styles/editors.css\";\nimport {CKEditor} from \"@ckeditor/ckeditor5-react\";\nimport FullEditor from \"@blowstack/ckeditor5-full-free-build\";\nimport {baseURL} from \"../../helpers/url\";\nimport useAuth from \"../../hooks/useAuth\";\nimport {useEffect, useState} from \"react\";\nimport {useSearchParams} from \"react-router-dom\";\n\nconst ContentEditor = (props) => {\n    const {data, setData, editorData, setLoading, setReadMode, readMode, readOnly} = props;\n    const {auth} = useAuth();\n    const [searchParams] = useSearchParams();\n    const mode = searchParams.get('mode') !== \"edit\";\n\n    const [imageId, setImageID] = useState([]);\n    const [changeData, setChangeData] = useState(false);\n    const [editorImage, setEditorImage] = useState([]);\n\n    // const [fakeLoading, setFakeLoading] = useState(true);\n\n\n    function uploadAdapter(loader) {\n        setChangeData(false);\n        return {\n            upload: () => {\n                return new Promise((resolve, reject) => {\n                    const body = new FormData();\n                    setLoading(true);\n                    loader.file.then((file) => {\n                        body.append(\"image\", file);\n                        let headers = new Headers();\n                        headers.append(\"Authorization\", `Bearer ${auth?.token?.access}`);\n                        fetch(`${baseURL.blog_image_upload}`, {\n                            method: \"post\",\n                            body: body\n                        })\n                            .then((res) => res.json())\n                            .then((res) => {\n                                // console.log(res);\n                                setLoading(false);\n                                resolve({\n                                    default: res.url\n                                });\n                                setImageID((prev) => [\n                                    ...prev,\n                                    {id: res.image_id, url: res.url}\n                                ])\n                            })\n                            .catch((err) => {\n                                reject(err);\n                            });\n                    });\n                });\n            }\n        };\n    }\n\n    function uploadPlugin(editor) {\n        editor.plugins.get(\"FileRepository\").createUploadAdapter = (loader) => {\n            return uploadAdapter(loader);\n        };\n    }\n\n    const editorConfig = {\n        toolbar: {\n            items: [\n                \"undo\", \"redo\",\n                \"fontsize\", \"fontColor\", \"fontBackgroundColor\", \"|\",\n                \"heading\", \"|\", \"alignment\", \"|\",\n                \"bold\", \"italic\", \"|\", \"link\", \"|\",\n                \"bulletedList\", \"numberedList\",\n                \"insertTable\", \"mergeTableCells\", \"|\",\n                \"insertImage\", \"codeBlock\", \"|\",\n                \"code\", \"HorizontalLine\",\n                \"SpecialCharacters\", \"ImageResize\",\n                \"pageBreak\",\n            ],\n            shouldNotGroupWhenFull: false\n        },\n        removePlugins: ['Title'],\n        extraPlugins: [uploadPlugin],\n    }\n\n    useEffect(() => {\n        if (setData) {\n            setData((prev) => {\n                return {\n                    ...prev,\n                    image_ids: imageId\n                }\n            })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [imageId, editorImage])\n\n\n    // For clearing image from the array\n    useEffect(() => {\n        if (changeData && imageId) {\n            const updatedItem = editorData?.image_ids?.filter(item => {\n                return editorImage.includes(item.url);\n            }).map((item) => {\n                return item;\n            });\n            setImageID(updatedItem);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [editorImage, changeData])\n\n    // SetEditMode\n    useEffect(() => {\n        if (setReadMode) {\n            setReadMode(mode);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [mode]);\n\n    // useEffect(() => {\n    //     setTimeout(function () {\n    //         setFakeLoading(false);\n    //     }, 1000)\n    // }, [fakeLoading])\n\n    return (\n        <>\n            {/*{fakeLoading ? <div>Please wait...</div> : ''}*/}\n            <CKEditor\n                editor={FullEditor}\n                config={editorConfig}\n                data={data ? data : \"\"}\n                then={response => {\n                    console.log(response);\n                }}\n                onReady={editor => {\n\n                    // console.log('ready editor')\n                    // console.log(editor.config._config.plugins.map(item => item.pluginName))\n                    // console.log(Array.from(editor.ui.componentFactory.names()));\n                    // console.log('isReadOnly', editor.isReadOnly)\n                    // editor.ui.view.editable.element.style.minHeight = \"180px\"\n                    const toolbarContainer = editor.ui.view.stickyPanel;\n                    editor.isReadOnly = readMode ? readMode : readOnly;\n\n                    if (editor.isReadOnly) {\n                        editor.ui.view.top.remove(toolbarContainer);\n                        editor.ui.view.editable.element.classList.add('p-0');\n                        editor.ui.view.editable.element.classList.add('border-0');\n                    }\n                }}\n                onChange={(event, editor) => {\n                    setChangeData(false);\n                    // console.log('event', event)\n                    const data = editor.getData();\n\n                    editor.model.document.on('change:data', () => {\n                        setChangeData(true);\n                    });\n                    const avlImg = Array.from(new DOMParser().parseFromString(editor.getData(), 'text/html')\n                        .querySelectorAll('img'))\n                        .map(img => img.getAttribute('src'))\n\n                    setEditorImage(avlImg);\n\n                    if (setData) {\n                        setData((prev) => {\n                            return {\n                                ...prev,\n                                content: data\n                            }\n                        })\n                    }\n\n                }}\n                onFocus={(event, editor) => {\n                    // console.log('focus')\n                    // editor.ui.view.editable.element.style.minHeight = \"180px\"\n                }}\n                onBlur={(event, editor) => {\n                    // editor.ui.view.editable.element.style.minHeight = \"180px\"\n                    // console.log('blurred')\n                }}\n            />\n        </>\n\n    )\n}\nContentEditor.propTypes = {};\nexport default ContentEditor;","import {Breadcrumb, BreadcrumbItem} from \"reactstrap\";\nimport {Link} from \"react-router-dom\";\nimport {routeUrls} from \"../../helpers/url\";\n\nconst SimpleBreadcrumb = (props) => {\n    const {page, title} = props;\n    return (\n        <Breadcrumb>\n            <BreadcrumbItem>\n                <Link to={routeUrls.home}>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n                <Link to={`/${page?.toLowerCase()}`} className=\"text-capitalize\"> {page ? page : ''} </Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>\n                {title ? title : ''}\n            </BreadcrumbItem>\n        </Breadcrumb>\n    )\n}\nexport default SimpleBreadcrumb;","import \"../../../assets/scss/component/tutorialdetail.scss\";\nimport {Col, Container, Row} from \"reactstrap\";\nimport {useEffect, useState} from \"react\";\nimport {Link, useParams} from \"react-router-dom\";\nimport axios from \"../../../api/axios\";\nimport {baseURL, routeUrls} from \"../../../helpers/url\";\nimport useAuth from \"../../../hooks/useAuth\";\nimport SimpleBreadcrumb from \"../../../components/Blog/SimpleBreadcrumb\";\nimport ContentEditor from \"../../../components/Blog/ContentEditor\";\n\nconst TutorialDetails = () => {\n    const [tutorial, setTutorial] = useState();\n    const {slug} = useParams();\n    const {auth} = useAuth();\n    const admin = auth?.user?.is_superuser;\n\n\n    const getTutorial = async () => {\n        await axios.get(`${baseURL.get_single_blog}${slug}/`, {\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        }).then(response => {\n            setTutorial(response?.data?.data);\n        }).catch(error => {\n            console.log('error', error)\n        })\n    }\n\n    useEffect(() => {\n        getTutorial().then(r => r)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return (\n        <>\n            <div className=\"tutorial-details_page position-relative\">\n                <div className=\"common-banner\"></div>\n                <section className=\"tutorial-detail-main\">\n                    <Container>\n                        <div className=\"breadcrumb-main\">\n                            <SimpleBreadcrumb page=\"Tutorials\" title={tutorial?.title}/>\n                        </div>\n                        <div className=\"mb-4 mt-3 d-flex align-items-center justify-content-between\">\n                            <h2 className=\"mb-0\">{tutorial?.title}</h2>\n                            {admin &&\n                                <Link\n                                    to={tutorial ? `/${routeUrls.dashboard}/${routeUrls.dashTutorial.list}/${slug}/edit` : ''}\n                                    className=\"btn btn-primary px-4 btn-sm\">\n                                    Edit\n                                </Link>\n                            }\n                        </div>\n                        <Row>\n                            <Col md={12}>\n                                <div className=\"card border-0 shadow-sm\">\n                                    <div className=\"card-body p-5\">\n                                        <ContentEditor data={tutorial?.content} readOnly={true}/>\n                                    </div>\n                                </div>\n                            </Col>\n                        </Row>\n                    </Container>\n                </section>\n            </div>\n        </>\n    )\n}\n\nexport default TutorialDetails;"],"names":["props","data","setData","editorData","setLoading","setReadMode","readMode","readOnly","auth","useAuth","useSearchParams","mode","get","useState","imageId","setImageID","changeData","setChangeData","editorImage","setEditorImage","editorConfig","toolbar","items","shouldNotGroupWhenFull","removePlugins","extraPlugins","editor","plugins","createUploadAdapter","loader","upload","Promise","resolve","reject","body","FormData","file","then","append","Headers","token","access","fetch","baseURL","method","res","json","default","url","prev","id","image_id","catch","err","uploadAdapter","useEffect","image_ids","updatedItem","filter","item","includes","map","CKEditor","FullEditor","config","response","console","log","onReady","toolbarContainer","ui","view","stickyPanel","isReadOnly","top","remove","editable","element","classList","add","onChange","event","getData","model","document","on","avlImg","Array","from","DOMParser","parseFromString","querySelectorAll","img","getAttribute","content","onFocus","onBlur","page","title","to","routeUrls","toLowerCase","className","active","tutorial","setTutorial","slug","useParams","admin","user","is_superuser","getTutorial","axios","headers","error","r","md"],"sourceRoot":""}