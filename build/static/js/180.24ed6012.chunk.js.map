{"version":3,"file":"static/js/180.24ed6012.chunk.js","mappings":"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","sources":["components/Common/BlurImage.jsx","components/ReactCountryFlag.jsx","components/Shared/CardImageCarousel.jsx","pages/Observation/ObservationListRow.jsx","pages/Observation/ObservationListView.jsx","../node_modules/react-country-flag/src/index.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/react-loading-skeleton/dist/index.mjs"],"sourcesContent":["import {useEffect, useRef, useState} from 'react';\nimport Skeleton from 'react-loading-skeleton'\n\nconst BlurImage = (props) => {\n    const {preview, image, alt, bgColor = 'transparent', handleClick, homepage, loaderLoading} = props;\n    const [loading, setLoading] = useState(true);\n    const loadingImageRef = useRef(null);\n\n\n    const waitForImageToLoad = (imageElement) => {\n        return new Promise(resolve => {\n            imageElement.onload = resolve\n        })\n    }\n    useEffect(() => {\n        setLoading(true);\n        if (image) {\n            waitForImageToLoad(loadingImageRef.current).then(() => {\n                setLoading(false);\n                loaderLoading(false);\n            });\n        }\n    }, [image]);\n\n\n    const style = {\n        minHeight: \"217px\",\n        overflow: \"hidden\"\n    }\n    return (\n        <>\n            <div className=\"shadow-sm drop-shadow-lg h-100 loader-wrap-img\" style={style}>\n                {loading &&\n                    <div className=\"loadingImage\">\n                        <Skeleton count={1} height=\"100%\"/>\n                    </div>\n                }\n                <img\n                    style={{\n                        width: '100%',\n                        background: bgColor,\n                        objectFit: 'cover',\n                        height: '100%',\n                        minHeight: '217px'\n                    }}\n                    src={preview}\n                    alt={alt}\n                    ref={loadingImageRef}\n                    className={`${homepage ? 'img-fluid isLoadingImg card-img no-cursor' : 'isLoadingImg img-fluid'}`}\n                    onClick={handleClick}\n                />\n            </div>\n        </>\n\n    );\n};\n\nexport default BlurImage;","import ReactCountryFlag from \"react-country-flag\";\nconst ReactCountryFlags = ({country}) => {\n    return(\n\n        <ReactCountryFlag\n            countryCode={country}\n            svg\n            style={{\n                width: '1.5em',\n                height: '1.5em',\n            }}\n            title={country}\n        />\n    );\n}\nexport default ReactCountryFlags;","import {Swiper, SwiperSlide} from \"swiper/react\";\nimport {Navigation} from \"swiper\";\nimport 'swiper/css';\nimport 'swiper/css/navigation';\nimport BlurImage from \"../Common/BlurImage\";\n\nconst CardImageCarousel = (props) => {\n    const {carouselData, handleClick, handleIndex, detail, loaderLoading} = props;\n\n    return (\n        <>\n            <Swiper navigation={true} modules={[Navigation]}>\n                {carouselData.length > 0 && carouselData.map((item, id) => {\n                    return (\n                        <SwiperSlide key={id}>\n                            <BlurImage\n                                preview={(detail) ? item?.image : (item.compressed_image) ? item.compressed_image : item?.image}\n                                image={(detail) ? item?.image : (item.compressed_image) ? item.compressed_image : item?.image}\n                                handleClick={(e) => {\n                                    handleClick ? handleClick(handleIndex) : e.preventDefault()\n                                }}\n                                loaderLoading={loaderLoading}\n                                alt={item?.name}\n                            >\n                            </BlurImage>\n                        </SwiperSlide>\n                    )\n                })\n                }\n            </Swiper>\n        </>\n    )\n}\nexport default CardImageCarousel;","import { Badge, CardSubtitle, CardTitle, FormGroup } from \"reactstrap\";\nimport { Icon } from \"@iconify/react\";\nimport moment from 'moment';\nimport {createRef, useEffect} from \"react\";\nimport CardImageCarousel from \"../../components/Shared/CardImageCarousel\";\n    import ReactCountryFlags from \"../../components/ReactCountryFlag\";\n\nconst ObservationListRow = (props) => {\n    const { cardItems, cardData, allChecked, setCheckedIds, index, getAllChecked, checkedIds, handleClick, loadMore} = props;\n    const childInput = createRef();\n\n    const setChecked = (id) => {\n        if(allChecked && loadMore){\n            return id;\n        }\n        else {\n            return !!(checkedIds.includes(id)) ;\n        }\n    }\n\n    const handleChecked = (e, id) => {\n        let checked = e.target.checked;\n        if(checked){\n            if(checkedIds.length > 0){\n                setCheckedIds([...checkedIds,id]);\n            }\n            else{\n                setCheckedIds([id]);\n            }\n        } else {\n            let ids = [...checkedIds];\n            ids = ids.filter((item,index)=> {\n                return item !== id;\n            })\n            setCheckedIds(ids);\n        }\n    }\n\n    useEffect(()=> {\n         getAllChecked(childInput.current);\n    }, [allChecked, loadMore]);\n\n    return (\n        <>\n            <th valign=\"middle\" className=\"check-box\">\n                <FormGroup check className=\"mb-0\">\n                    <input type=\"checkbox\"\n                           data-id={cardItems.id}\n                           id={cardItems.id}\n                           ref={childInput}\n                           name= {`is_other_${cardItems.id}`}\n                           className=\"me-0 form-check-input\"\n                           checked={setChecked(cardItems.id)}\n                           disabled={!!allChecked}\n                           onChange={(e) => handleChecked(e, cardItems.id)}\n                    />\n                </FormGroup>\n            </th>\n            <td valign=\"middle\" className=\"observationCard-box\">\n                <div className=\"h-100 position-relative\">\n                    { cardItems?.image_type === 3 && <div className=\"multiple-image_icon\"><Icon icon=\"codicon:list-filter\" color=\"black\" /></div>}\n                    {cardItems?.is_verified && <div className=\"verify-card\"><Icon icon=\"mdi:check-decagram\" color=\"#27ae60\" width=\"13\" height=\"13\" /></div>}\n                    { cardItems?.image_type === 3 ?\n                    <CardImageCarousel handleClick={handleClick} handleIndex={index} carouselData={cardItems?.images} />\n                    : <img\n                            alt=\"Card cap\"\n                            src={(cardData.compressed_image) ? cardData?.compressed_image : cardData?.image}\n                            className=\"img-fluid card-img\"\n                            onClick={(e) => {\n                                 handleClick(index);\n                            }}\n                        />\n                        }\n                </div>\n            </td>\n            <td valign=\"middle\" className=\"observationType-box\">\n                <div className=\"observation_type d-flex align-items-start justify-content-start flex-wrap flex-column\">\n                    {cardItems?.category_data?.map((item, index) => {\n                        let image = `/assets/images/category/${item?.name?.toLowerCase().replaceAll(\" \", \"\")}.png`;\n                        return (\n                            <div key={index} className=\"mb-2\">\n                                <i className=\"fst-normal rounded-circle me-2 d-inline-block\">\n                                    <img src={image} alt={item?.name} className=\"rounded-circle w-100 h-100\" />\n                                </i>\n                                <span>{item?.name}</span>\n                            </div>\n                        )\n                    })}\n                </div>\n            </td>\n            <td valign=\"middle\" className=\"location-box\">\n                <div className=\"observation_country\">\n                    <ReactCountryFlags country={cardData?.country_code} className=\"me-2\" />\n                    <span className=\"ms-1\">{cardData?.location}</span>\n                </div>\n            </td>\n            <td valign=\"middle\" className=\"date-time-box\">\n                <div className=\"card_desc\">\n                    <CardTitle className=\"font-bold\">{(cardData?.obs_date_time_as_per_utc) ? moment.utc(moment(cardData?.obs_date_time_as_per_utc).utc()).format(\"MMM DD, YYYY\") : (cardData?.obs_date) ? cardData?.obs_date : null }</CardTitle>\n                    <CardSubtitle className=\"d-flex align-items-center\">{(cardData?.obs_date_time_as_per_utc) ? moment.utc(moment(cardData?.obs_date_time_as_per_utc).utc()).format(\"hh:mm:ss A\"): (cardData?.obs_time) ? cardData?.obs_time : null} <Badge className=\"bg-black text-white ms-1\">{(cardData?.obs_date_time_as_per_utc)  ? 'UTC': (cardData?.obs_time) ?  \"UTC\" : ''}</Badge></CardSubtitle>\n                </div>\n            </td>\n            <td valign=\"middle\"><h6 className=\"mb-0 text-center\">{cardData?.azimuth}</h6></td>\n            <td valign=\"middle\"><h4 className=\"mb-0 location-value\">{parseFloat(cardData?.latitude).toFixed(1)}</h4></td>\n            <td valign=\"middle\"><h4 className=\"mb-0 location-value\">{parseFloat(cardData?.longitude).toFixed(1)}</h4></td>\n        </>\n    )\n}\nexport default ObservationListRow;","import \"../../assets/scss/component/observationList.scss\";\nimport {useState, useEffect} from \"react\";\nimport { FormGroup, Table } from \"reactstrap\";\nimport ObservationListRow from \"./ObservationListRow\";\nimport useObservationsData from \"../../hooks/useObservationsData\";\n\nconst ObservationListView = (props) => {\n    const { observationList, isObservationDetailModal, setObservationDetailModal, setSelectedObservationId } = props;\n    const [ allChecked, setAllChecked ] = useState(false);\n    const [ checkedIds, setCheckedIds ] = useState([]);\n\n    const {setObservationCSVId} = useObservationsData();\n\n    const handleObservationDetailModal = (id) => {\n        setObservationDetailModal(!isObservationDetailModal);\n        setSelectedObservationId(id);\n    };\n\n\n    const handleAllChecked = (e) => {\n        setAllChecked(e.target.checked);\n    }\n\n    const allCheckedItem = []\n\n    const getAllChecked = (selector) => {\n        let id = parseFloat(selector?.id);\n        return allCheckedItem.push(id);\n    }\n\n    useEffect(()=> {\n        if (allChecked) {\n            setCheckedIds(allCheckedItem)\n        }\n        else {\n            setCheckedIds([]);\n        }\n    }, [allChecked, observationList?.length]);\n\n\n\n\n    useEffect(()=> {\n        setObservationCSVId((prev) => {\n            return {\n                ...prev,\n                data: {\n                    observation: checkedIds\n                }\n            }\n        })\n    }, [checkedIds, setObservationCSVId])\n\n    return(\n        <>\n            <div className=\"table-responsive mb-4\">\n                <Table className=\"list-view\" borderless>\n                    <thead>\n                        <tr>\n                            <th valign=\"middle\" className=\"check-box\">\n                                <FormGroup className=\"mb-0\" check>\n                                    <input\n                                        type=\"checkbox\"\n                                        name=\"all_csv\"\n                                        className=\"me-0 form-check-input\"\n                                        onChange={(e) => handleAllChecked(e) } />\n                                </FormGroup>\n                            </th>\n                            <th valign=\"middle\">Observation</th>\n                            <th valign=\"middle\">Type</th>\n                            <th valign=\"middle\">Location</th>\n                            <th valign=\"middle\">Date/Time</th>\n                            <th valign=\"middle\" className=\"text-center\">Azimuth</th>\n                            <th valign=\"middle\">Lat</th>\n                            <th valign=\"middle\">Lon</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {observationList.length > 0 && observationList?.map((cardItems, index)=>{\n                            return(\n                                <tr key={index}>\n                                    <ObservationListRow\n                                        index={index}\n                                        cardItems={cardItems}\n                                        cardData={cardItems?.images[0]}\n                                        allChecked={allChecked}\n                                        setAllChecked={setAllChecked}\n                                        getAllChecked={getAllChecked}\n                                        setCheckedIds={setCheckedIds}\n                                        checkedIds={checkedIds}\n                                        loadMore={observationList?.length}\n                                        handleClick={handleObservationDetailModal}\n                                    />\n                                </tr>\n                            )\n                        })\n                        }\n                    </tbody>\n                </Table>\n            </div>\n        </>\n    )\n}\n\nexport default ObservationListView;","import * as React from 'react';\n\nconst DEFAULT_CDN_URL =\n  'https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/4.1.4/flags/4x3/';\nconst DEFAULT_CDN_SUFFIX = 'svg';\n\n// offset between uppercase ascii and regional indicator symbols\nconst OFFSET = 127397;\n\ninterface EmojiProps extends React.HTMLAttributes<HTMLSpanElement> {\n  cdnSuffix?: string;\n  cdnUrl?: string;\n  countryCode: string;\n  style?: React.CSSProperties;\n  svg?: false;\n}\n\ninterface ImgProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  cdnSuffix?: string;\n  cdnUrl?: string;\n  countryCode: string;\n  style?: React.CSSProperties;\n  svg?: true;\n}\n\nexport type ReactCountryFlagProps = EmojiProps | ImgProps;\n\nexport const ReactCountryFlag = ({\n  cdnSuffix = DEFAULT_CDN_SUFFIX,\n  cdnUrl = DEFAULT_CDN_URL,\n  countryCode,\n  style,\n  svg = false,\n  ...props\n}: ReactCountryFlagProps) => {\n  if (typeof countryCode !== 'string') {\n    return null;\n  }\n\n  if (svg) {\n    const flagUrl = `${cdnUrl}${countryCode.toLowerCase()}.${cdnSuffix}`;\n\n    return (\n      <img\n        {...props}\n        src={flagUrl}\n        style={{\n          display: 'inline-block',\n          width: '1em',\n          height: '1em',\n          verticalAlign: 'middle',\n          ...style,\n        }}\n      />\n    );\n  }\n\n  const emoji = countryCode\n    .toUpperCase()\n    .replace(/./g, char => String.fromCodePoint(char.charCodeAt(0) + OFFSET));\n\n  return (\n    <span\n      role=\"img\"\n      {...props}\n      style={{\n        display: 'inline-block',\n        fontSize: '1em',\n        lineHeight: '1em',\n        verticalAlign: 'middle',\n        ...style,\n      }}\n    >\n      {emoji}\n    </span>\n  );\n};\n\nexport default ReactCountryFlag;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {\n    const style = {};\n    if (direction === 'rtl')\n        style['--animation-direction'] = 'reverse';\n    if (typeof duration === 'number')\n        style['--animation-duration'] = `${duration}s`;\n    if (!enableAnimation)\n        style['--pseudo-element-display'] = 'none';\n    if (typeof width === 'string' || typeof width === 'number')\n        style.width = width;\n    if (typeof height === 'string' || typeof height === 'number')\n        style.height = height;\n    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')\n        style.borderRadius = borderRadius;\n    if (circle)\n        style.borderRadius = '50%';\n    if (typeof baseColor !== 'undefined')\n        style['--base-color'] = baseColor;\n    if (typeof highlightColor !== 'undefined')\n        style['--highlight-color'] = highlightColor;\n    return style;\n}\nfunction Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {\n    var _a, _b, _c;\n    const contextStyleOptions = React.useContext(SkeletonThemeContext);\n    const propsStyleOptions = { ...originalPropsStyleOptions };\n    // DO NOT overwrite style options from the context if `propsStyleOptions`\n    // has properties explicity set to undefined\n    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n        if (typeof value === 'undefined') {\n            delete propsStyleOptions[key];\n        }\n    }\n    // Props take priority over context\n    const styleOptions = {\n        ...contextStyleOptions,\n        ...propsStyleOptions,\n        circle,\n    };\n    // `styleProp` has the least priority out of everything\n    const style = {\n        ...styleProp,\n        ...styleOptionsToCssProperties(styleOptions),\n    };\n    let className = 'react-loading-skeleton';\n    if (customClassName)\n        className += ` ${customClassName}`;\n    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n    const elements = [];\n    const countCeil = Math.ceil(count);\n    for (let i = 0; i < countCeil; i++) {\n        let thisStyle = style;\n        if (countCeil > count && i === countCeil - 1) {\n            // count is not an integer and we've reached the last iteration of\n            // the loop, so add a \"fractional\" skeleton.\n            //\n            // For example, if count is 3.5, we've already added 3 full\n            // skeletons, so now we add one more skeleton that is 0.5 times the\n            // original width.\n            const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n            const fractionalPart = count % 1;\n            const fractionalWidth = typeof width === 'number'\n                ? width * fractionalPart\n                : `calc(${width} * ${fractionalPart})`;\n            thisStyle = { ...thisStyle, width: fractionalWidth };\n        }\n        const skeletonSpan = (React.createElement(\"span\", { className: className, style: thisStyle, key: i }, \"\\u200C\"));\n        if (inline) {\n            elements.push(skeletonSpan);\n        }\n        else {\n            // Without the <br />, the skeleton lines will all run together if\n            // `width` is specified\n            elements.push(React.createElement(React.Fragment, { key: i },\n                skeletonSpan,\n                React.createElement(\"br\", null)));\n        }\n    }\n    return (React.createElement(\"span\", { className: containerClassName, \"data-testid\": containerTestId, \"aria-live\": \"polite\", \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation }, Wrapper\n        ? elements.map((el, i) => React.createElement(Wrapper, { key: i }, el))\n        : elements));\n}\n\nfunction SkeletonTheme({ children, ...styleOptions }) {\n    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));\n}\n\nexport { SkeletonTheme, Skeleton as default };\n"],"names":["props","preview","image","alt","bgColor","handleClick","homepage","loaderLoading","useState","loading","setLoading","loadingImageRef","useRef","useEffect","imageElement","current","Promise","resolve","onload","then","className","style","minHeight","overflow","count","height","width","background","objectFit","src","ref","onClick","country","countryCode","svg","title","carouselData","handleIndex","detail","navigation","modules","Navigation","length","map","item","id","compressed_image","e","preventDefault","name","cardItems","cardData","allChecked","setCheckedIds","index","getAllChecked","checkedIds","loadMore","childInput","createRef","valign","check","type","checked","includes","disabled","onChange","target","ids","filter","handleChecked","image_type","icon","color","is_verified","CardImageCarousel","images","category_data","toLowerCase","replaceAll","ReactCountryFlag","country_code","location","obs_date_time_as_per_utc","moment","utc","format","obs_date","obs_time","azimuth","parseFloat","latitude","toFixed","longitude","observationList","isObservationDetailModal","setObservationDetailModal","setSelectedObservationId","setAllChecked","setObservationCSVId","useObservationsData","handleObservationDetailModal","allCheckedItem","selector","push","prev","data","observation","borderless","handleAllChecked","cdnSuffix","DEFAULT_CDN_SUFFIX","cdnUrl","DEFAULT_CDN_URL","_ref$svg","flagUrl","React","display","verticalAlign","emoji","toUpperCase","replace","String","fromCodePoint","char","charCodeAt","role","fontSize","lineHeight","_objectWithoutProperties","source","excluded","key","i","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call","SkeletonThemeContext","Skeleton","_a","_b","_c","Wrapper","wrapper","customClassName","containerClassName","containerTestId","circle","styleProp","originalPropsStyleOptions","contextStyleOptions","propsStyleOptions","entries","styleOptions","baseColor","highlightColor","borderRadius","direction","duration","enableAnimation","styleOptionsToCssProperties","inline","elements","countCeil","Math","ceil","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","el"],"sourceRoot":""}