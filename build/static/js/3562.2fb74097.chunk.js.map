{"version":3,"file":"static/js/3562.2fb74097.chunk.js","mappings":"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","sources":["components/Shared/LoadMore.jsx","hooks/useObservations.js","hooks/useObservationsData.js","helpers/dashboard.js","pages/Dashboard/Dashboard.jsx","pages/Observation/Observations.jsx"],"sourcesContent":["import { Button} from 'reactstrap';\n\nexport const LoadMore = (props) => {\n    const {handleLoadMore} = props;\n    return (\n        <Button className='gray-outline-btn d-block mx-auto px-4 fw-normal' onClick={()=> handleLoadMore()}>Load more</Button>\n    )\n};","import {useContext, useDebugValue} from \"react\";\nimport {ObservationContext} from \"../pages/Observation/Observations\";\n\nconst useObservations = () => {\n    const { observationImages } = useContext(ObservationContext);\n    // useDebugValue(observationSteps, observationSteps => observationSteps ? 'Steps set' : \"Steps not set\")\n    useDebugValue(observationImages, observationImages => observationImages?.data ? 'Images set' : \"Images not set\")\n    return useContext(ObservationContext);\n}\n\nexport default useObservations;","import {useContext, useDebugValue} from \"react\";\nimport {observationViewContext} from \"../layouts/PersistLogin\";\n\nconst useObservationsData = () => {\n    const { observationListData } = useContext(observationViewContext);\n    useDebugValue(observationListData, observationListData => observationListData ? 'List data set' : \"Listing data not set\")\n    return useContext(observationViewContext);\n}\n\nexport default useObservationsData;","export const dashboardHelper = {\n    filterState: {\n        isCountryOpen:false,\n        isTypeOpen:false,\n        isStatusOpen:false,\n        isRateOpen:false,\n        isFOVOpen:false,\n        isLensTypeOpen:false,\n    },\n    horizontal: {\n        country: {\n            name:'',\n            code:''\n        },\n        type:'',\n        status:'',\n    },\n    vertical: {\n        from_obs_data: null,\n        to_obs_data: null,\n        obs_start_date: null,\n        obs_end_date: null,\n        obs_start_time: null,\n        obs_end_time: null,\n        camera_type: \"\",\n        fps: \"\",\n        iso: \"\",\n        fov: \"\",\n        shutter_speed: \"\",\n        lens_type: \"\",\n    },\n    nextPageUrl: '/observation/dashboard/?country=&category=&status='\n}","import \"../../assets/scss/component/dashboard.scss\";\nimport {lazy, Suspense, useEffect, useState} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nimport useAuth from \"../../hooks/useAuth\";\nimport useObservationsData from \"../../hooks/useObservationsData\";\n\nimport useObservations from \"../../hooks/useObservations\";\nimport {LoadMore} from \"../../components/Shared/LoadMore\";\n\nimport axios from \"../../api/axios\";\nimport moment from \"moment\";\nimport {dashboardHelper} from \"../../helpers/dashboard\";\nimport {baseURL} from \"../../helpers/url\";\n\nconst NotFound = lazy(() =>\n    import(\"../../components/Common/NotFound\")\n);\nconst FilterSelectMenu = lazy(() =>\n    import(\"../../components/Shared/FilterSelectMenu\")\n);\nconst AdvancedFilter = lazy(() =>\n    import(\"../../components/Shared/AdvancedFilter\")\n);\nconst ObservationDetailPage = lazy(() =>\n    import(\"../Observation/ObservationListPage\")\n);\nconst ObservationListView = lazy(() =>\n    import(\"../Observation/ObservationListView\")\n);\nconst ObservationDetails = lazy(() =>\n    import(\"../Observation/ObservationDetails\")\n);\n\nconst Dashboard = () => {\n    const navigate = useNavigate();\n    const {auth} = useAuth();\n    const [isObservationDetailModal, setObservationDetailModal] = useState(false);\n    const [selectedObservationId, setSelectedObservationId] = useState();\n    const {setObservationData, setObservationSteps, setObservationImages} = useObservations();\n    const [filterShow, setFilterShow] = useState(true);\n    const [listView, setListView] = useState(false);\n    const [gridView, setGridView] = useState(true);\n\n    const [searchCountry, setSearchCountry] = useState(\"\");\n    const [isFilterOpen, setIsFilterOpen] = useState(dashboardHelper.filterState);\n    const [selectedFilterHorizontal, setSelectedFilterHorizontal] = useState(\n        dashboardHelper.horizontal\n    );\n    const [selectedFilterVertical, setSelectedFilterVertical] = useState(\n        dashboardHelper.vertical\n    );\n    const {observationListData, setObservationListData} = useObservationsData();\n    const [nextPageUrl, setNextPageUrl] = useState(dashboardHelper.nextPageUrl);\n    const [filterReset, setFilterReset] = useState(false);\n    const [loadedState, setLoadedState] = useState({loading: true, hasData: true});\n\n    const getObservationData = async (\n        reset = false,\n        country = `${selectedFilterHorizontal?.country?.code}`,\n        category = `${selectedFilterHorizontal?.type}`,\n        status = `${selectedFilterHorizontal?.status}`\n    ) => {\n        if (auth?.user?.is_superuser) {\n            let url;\n            if (reset === true || !nextPageUrl) {\n                url = `${baseURL.api}/observation/dashboard/?country=${country}&category=${category}&status=${status}&page=1`;\n            } else {\n                url = process.env.NODE_ENV === \"development\" ? nextPageUrl : nextPageUrl.replace('http', 'https');\n\n            }\n\n            if (selectedFilterVertical.obs_start_date !== null) {\n                if (selectedFilterVertical.obs_start_time !== null) {\n                    selectedFilterVertical.from_obs_data = moment(\n                        selectedFilterVertical.obs_start_date +\n                        \" \" +\n                        selectedFilterVertical.obs_start_time\n                    ).format(\"DD/MM/Y H:mm\");\n                } else {\n                    selectedFilterVertical.from_obs_data = moment(\n                        selectedFilterVertical.obs_start_date + \" 00:00\"\n                    ).format(\"DD/MM/Y HH:mm\");\n                }\n            }\n            if (selectedFilterVertical.obs_end_date !== null) {\n                if (selectedFilterVertical.obs_end_time !== null) {\n                    selectedFilterVertical.to_obs_data = moment(\n                        selectedFilterVertical.obs_end_date +\n                        \" \" +\n                        selectedFilterVertical.obs_end_time\n                    ).format(\"DD/MM/Y HH:mm\");\n                } else {\n                    selectedFilterVertical.to_obs_data = moment(\n                        selectedFilterVertical.obs_end_date + \" 23:59\"\n                    ).format(\"DD/MM/Y HH:mm\");\n                }\n            }\n\n            await axios.post(url, selectedFilterVertical, {\n                headers: {\n                    \"Content-type\": \"application/json\",\n                    Authorization: `Bearer ${auth?.token?.access}`,\n                },\n            }).then((response) => {\n                const resData = response?.data;\n                setFilterReset(false);\n                if (resData?.results?.data !== undefined) {\n                    if (resData?.next) {\n                        setNextPageUrl(response?.data?.next);\n                    } else {\n                        setNextPageUrl(null);\n                    }\n                    let records = resData?.results?.data;\n                    let prevData;\n\n                    if (observationListData?.list?.length > 0 && reset === false) {\n                        prevData = [...observationListData?.list];\n                        prevData = [...prevData, ...records];\n                    } else {\n                        prevData = resData?.results?.data;\n                    }\n                    setObservationListData((prev) => {\n                        return {\n                            ...prev,\n                            list: prevData,\n                        };\n                    });\n                    // Assign loading\n                    setLoadedState((prev) => {\n                        return {\n                            ...prev,\n                            loading: false,\n                            hasData: resData?.results?.data?.length > 0\n                        }\n                    })\n\n                } else {\n                    setNextPageUrl(null);\n                    setObservationListData({list: [], active: {}});\n                }\n                // setObservationList(success?.data?.results?.data)\n            }).catch((error) => {\n                console.log(error.response);\n            });\n        }\n    };\n\n    const handleLoadMoreData = () => {\n        getObservationData(false).then(r => r);\n    };\n\n    const handleObservationDetailModal = (id) => {\n        setObservationDetailModal(!isObservationDetailModal);\n        setSelectedObservationId(id);\n    };\n    const cleaningUpObservationDataForDraftSaving = async (data) => {\n        setObservationImages([]);\n        setObservationData([]);\n        await updateStateForDraft(data);\n        return true;\n    };\n    const updateStateForDraft = (data) => {\n        setObservationSteps((prev) => {\n            return {\n                ...prev,\n                total: 3,\n                active: 1,\n                mode: {\n                    update: true,\n                    ...data,\n                },\n            };\n        });\n    };\n\n    const handleObservationEdit = (data) => {\n        cleaningUpObservationDataForDraftSaving(data).then((r) => r);\n        setObservationDetailModal(false);\n        setTimeout(function () {\n            navigate(\"/observations/update\");\n        }, 100);\n    };\n    const handleFilterOpen = () => {\n        setFilterShow(!filterShow);\n    };\n    const handleListView = () => {\n        setListView(true);\n        setGridView(false);\n    };\n    const handleGridView = () => {\n        setGridView(true);\n        setListView(false);\n    };\n    const findCountry = (e) => {\n        let value = e.target.value.toLowerCase();\n        setSearchCountry(value);\n    };\n\n    const handleFilterValue = (value, type) => {\n        if (type === \"status\") {\n            value = value.toLowerCase();\n            getObservationData(\n                true,\n                selectedFilterHorizontal.country?.code,\n                selectedFilterHorizontal.type,\n                value\n            ).then(r => r);\n        }\n\n        if (type === \"category\") {\n            getObservationData(\n                true,\n                selectedFilterHorizontal.country?.code,\n                value,\n                selectedFilterHorizontal.status\n            ).then(r => r);\n        }\n\n        if (type === \"country\") {\n            getObservationData(\n                true,\n                value.code,\n                selectedFilterHorizontal.type,\n                selectedFilterHorizontal.status\n            ).then(r => r);\n        }\n        if (type === \"filter\") {\n            getObservationData(\n                true,\n                selectedFilterHorizontal.country.code,\n                selectedFilterHorizontal.type,\n                selectedFilterHorizontal.status\n            ).then(r => r);\n        }\n    };\n\n    //  Handle Filtered Input\n    const handleFilterInput = (e) => {\n        let name = e.target.name,\n            value = e.target.value;\n\n        // console.log(name, value);\n        setSelectedFilterVertical({\n            ...selectedFilterVertical,\n            [name]: value,\n        });\n    };\n\n    //  Reset Filters\n    const resetFilters = () => {\n        setFilterReset(true);\n        setSelectedFilterHorizontal(dashboardHelper.horizontal);\n        setSelectedFilterVertical(dashboardHelper.vertical);\n    };\n\n    useEffect(() => {\n        getObservationData(true, \"\", \"\", \"\").then(r => r);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [filterReset]);\n\n    useEffect(() => {\n        setObservationListData((prev) => {\n            return {\n                ...prev,\n                activeType: \"\",\n                list: []\n            }\n        })\n        getObservationData(true, \"\", \"\", \"\").then(r => r);\n\n        if (window.innerWidth < 768) {\n            setFilterShow(false);\n        }\n        console.clear();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        setObservationListData((prev) => {\n            return {\n                ...prev,\n                active: observationListData?.list?.[selectedObservationId],\n            };\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isObservationDetailModal]);\n\n    return (\n        <>\n            <Suspense fallback={<div></div>}>\n                <FilterSelectMenu\n                    dashboardFilter={true}\n                    galleryFilter={true}\n                    filterShow={filterShow}\n                    handleFilterOpen={handleFilterOpen}\n                    handleListView={handleListView}\n                    handleGridView={handleGridView}\n                    listView={listView}\n                    gridView={gridView}\n                    isFilterOpen={isFilterOpen}\n                    setIsFilterOpen={setIsFilterOpen}\n                    selectedFilterHorizontal={selectedFilterHorizontal}\n                    setSelectedFilterHorizontal={setSelectedFilterHorizontal}\n                    searchCountry={searchCountry}\n                    findCountry={findCountry}\n                    handleFilterValue={handleFilterValue}\n                />\n            </Suspense>\n\n            <div className=\"observation-dashboard_content\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-12\">\n                            <div className=\"set-dash-content\">\n                                {filterShow && (\n                                    <Suspense fallback={<div></div>}>\n                                        <AdvancedFilter\n                                            selectedFilterVertical={selectedFilterVertical}\n                                            setSelectedFilterVertical={setSelectedFilterVertical}\n                                            handleFilterValue={handleFilterValue}\n                                            handleFilterOpen={handleFilterOpen}\n                                            isFilterOpen={isFilterOpen}\n                                            setIsFilterOpen={setIsFilterOpen}\n                                            resetFilters={resetFilters}\n                                            handleFilterInput={handleFilterInput}\n                                        />\n                                    </Suspense>\n                                )}\n\n                                <div\n                                    className={`dashboard-card overflow-hidden ${\n                                        filterShow ? \"sm-card\" : \"maximize-dash-content\"\n                                    }`}\n                                >\n                                    {listView ? (\n                                        <Suspense fallback={<div></div>}>\n                                            <ObservationListView\n                                                observationList={observationListData?.list}\n                                                isObservationDetailModal={isObservationDetailModal}\n                                                setObservationDetailModal={setObservationDetailModal}\n                                                setSelectedObservationId={setSelectedObservationId}\n                                            />\n                                            {nextPageUrl && observationListData?.list.length > 0 && (\n                                                <LoadMore handleLoadMore={handleLoadMoreData}/>\n                                            )}\n                                        </Suspense>\n                                    ) : (\n                                        <Suspense fallback={<div></div>}>\n                                            <ObservationDetailPage\n                                                observationList={observationListData?.list}\n                                                isObservationDetailModal={isObservationDetailModal}\n                                                setObservationDetailModal={setObservationDetailModal}\n                                                setSelectedObservationId={setSelectedObservationId}\n                                            />\n                                            {nextPageUrl && observationListData?.list.length > 0 && (\n                                                <LoadMore handleLoadMore={handleLoadMoreData}/>\n                                            )}\n                                        </Suspense>\n                                    )}\n\n                                    {!loadedState?.hasData &&\n                                        <Suspense fallback={''}>\n                                            <NotFound/>\n                                        </Suspense>\n                                    }\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n            <Suspense fallback={<div></div>}>\n                <ObservationDetails\n                    data={observationListData?.active}\n                    modalClass=\"observation-details_modal\"\n                    open={isObservationDetailModal}\n                    handleClose={handleObservationDetailModal}\n                    handleContinueEdit={handleObservationEdit}\n                    activeType={\n                        observationListData?.active?.is_verified\n                            ? \"verified\"\n                            : observationListData?.active?.is_reject\n                                ? \"denied\"\n                                : observationListData?.active?.is_submit\n                                    ? \"unverified\"\n                                    : \"draft\"\n                    }\n                    handleApproveRejectEvent={getObservationData}\n                    refreshData={getObservationData}\n                />\n            </Suspense>\n        </>\n    );\n};\n\nexport default Dashboard;\n","import { Outlet } from \"react-router-dom\";\nimport {createContext, useEffect, useState} from \"react\";\nimport { cameraSettingFields } from \"../../helpers/url\";\n\nexport const ObservationContext = createContext({});\n\nconst Observations = () => {\n    const [observationType, setObservationType] = useState({\n        image_type: 1\n    });\n\n    const [observationSteps, setObservationSteps] = useState({\n        total: 3,\n        active: 1,\n        mode: {\n            update: false\n        }\n    });\n    const [observationImages, setObservationImages] = useState([]);\n    const [cameraDetails, setCameraDetails] = useState(cameraSettingFields);\n    const [observationCategory, setObservationCategory] = useState([]);\n    const [observationData, setObservationData] = useState({});\n\n    useEffect(()=> {\n        let data = (observationImages?.data) ? [...observationImages?.data] : []\n        setObservationData({\n            // is_draft: observationSteps?.is_draft ? 1 : 0,\n            image_type: observationType?.image_type,\n            map_data: data,\n            elevation_angle: null,\n            video_url : ''\n        })\n    }, [observationImages?.data, observationSteps?.is_draft, observationType?.image_type])\n\n    return(\n        <ObservationContext.Provider value={\n            {\n                observationType,\n                setObservationType,\n                observationSteps,\n                setObservationSteps,\n                observationImages,\n                setObservationImages,\n                observationCategory,\n                setObservationCategory,\n                observationData,\n                setObservationData,\n                cameraDetails, \n                setCameraDetails\n            }\n        }>\n            <Outlet />\n        </ObservationContext.Provider>\n    )\n}\n\nexport default Observations;"],"names":["LoadMore","props","handleLoadMore","className","onClick","observationImages","useContext","ObservationContext","useDebugValue","data","observationListData","observationViewContext","dashboardHelper","isCountryOpen","isTypeOpen","isStatusOpen","isRateOpen","isFOVOpen","isLensTypeOpen","country","name","code","type","status","from_obs_data","to_obs_data","obs_start_date","obs_end_date","obs_start_time","obs_end_time","camera_type","fps","iso","fov","shutter_speed","lens_type","NotFound","lazy","FilterSelectMenu","AdvancedFilter","ObservationDetailPage","ObservationListView","ObservationDetails","navigate","useNavigate","auth","useAuth","useState","isObservationDetailModal","setObservationDetailModal","selectedObservationId","setSelectedObservationId","useObservations","setObservationData","setObservationSteps","setObservationImages","filterShow","setFilterShow","listView","setListView","gridView","setGridView","searchCountry","setSearchCountry","isFilterOpen","setIsFilterOpen","selectedFilterHorizontal","setSelectedFilterHorizontal","selectedFilterVertical","setSelectedFilterVertical","useObservationsData","setObservationListData","nextPageUrl","setNextPageUrl","filterReset","setFilterReset","loading","hasData","loadedState","setLoadedState","getObservationData","reset","category","user","is_superuser","url","replace","baseURL","moment","format","axios","headers","Authorization","token","access","then","response","resData","undefined","results","next","prevData","records","list","length","prev","active","catch","error","console","log","handleLoadMoreData","r","cleaningUpObservationDataForDraftSaving","updateStateForDraft","total","mode","update","handleFilterOpen","handleFilterValue","value","toLowerCase","useEffect","activeType","window","innerWidth","clear","Suspense","fallback","dashboardFilter","galleryFilter","handleListView","handleGridView","findCountry","e","target","resetFilters","handleFilterInput","observationList","modalClass","open","handleClose","id","handleContinueEdit","setTimeout","is_verified","is_reject","is_submit","handleApproveRejectEvent","refreshData","createContext","image_type","observationType","setObservationType","observationSteps","cameraSettingFields","cameraDetails","setCameraDetails","observationCategory","setObservationCategory","observationData","map_data","elevation_angle","video_url","is_draft","Provider"],"sourceRoot":""}