{"version":3,"file":"static/js/487.a5a426ba.chunk.js","mappings":"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","sources":["components/Account/CameraSetting.jsx","components/Shared/EquipmentForm.jsx"],"sourcesContent":["import {UncontrolledAlert, Button, FormGroup, Row} from \"reactstrap\";\nimport axios from \"../../api/axios\";\nimport {useEffect, useState, useRef} from \"react\";\nimport {baseURL, cameraSettingFields} from \"../../helpers/url\";\nimport EquipmentForm from '../Shared/EquipmentForm'\nimport useAuth from \"../../hooks/useAuth\";\n\nconst CameraSetting = (props) => {\n    const {setAuth, auth} = useAuth();\n    const {cameraDetails, user, isDetailExist} = props;\n    const scrollToRef = (ref) => window.scrollTo(0, ref.current.offsetTop)   \n    const myRef = useRef(null);\n    const executeScroll = () => {\n        scrollToRef(myRef);\n    }\n    const [updateSetting, setUpdateSetting] = useState(cameraSettingFields);\n    const [updatedData, setUpdateData] = useState();\n    const [success, setSuccess] = useState();\n    const [error, setError] = useState();\n    const handleInput = (e) => {\n        let name = e.target.name,\n            value = e.target.value;\n            setUpdateSetting({\n            ...updateSetting,\n            [name]:value,\n        })\n    }\n\n\n\n    useEffect(()=> {\n        setUpdateSetting(cameraDetails)\n    }, [cameraDetails])\n\n    const resetToExistingCameraDetails = () => {\n        setSuccess('');\n        setError('');\n      if (isDetailExist) {\n          setUpdateSetting(cameraDetails);\n          setSuccess({\n              reset: 'Existing camera details restored successfully',\n              status: 200\n          })\n      } else {\n          setError({\n              reset: 'Nothing to restore',\n              status: 200\n          });\n      }\n\n      executeScroll();\n    }\n\n    const handleCameraUpdate = async (e) => {\n        e.preventDefault();\n        setSuccess('');\n        setError('');\n\n        if (isDetailExist) {\n            await axios.patch(baseURL.api + '/users/camera_setting/', updateSetting, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${user?.token?.access}`\n                },\n                withCredentials: true,\n            }).then((response) => {\n                setUpdateData(response.data);\n                setSuccess({\n                    updated: 'Camera settings updated successfully',\n                    status: response?.status\n                })\n                executeScroll();\n            }).catch((error) => {\n                setError({\n                    data: error?.response.data,\n                    status: error?.response?.status\n                })\n                executeScroll();\n            })\n        } else  {\n            await axios.post(baseURL.api+'/users/camera_setting/', updateSetting, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${user?.token?.access}`\n                },\n                withCredentials: true,\n            }).then((response) => {\n                setSuccess({\n                    status: 201,\n                    data: response.data,\n                    created: 'Camera settings added successfully.'\n                })\n                setAuth((prev)=> {\n                    return {\n                        user: {\n                            ...prev,\n                            camera: updatedData\n                        }\n                    }\n                })\n                executeScroll();\n            }).catch((error) => {\n                setError(error.response)\n                executeScroll();\n            })\n            executeScroll();\n        }\n    }\n\n\n    useEffect(()=> {\n        setAuth((prev)=> {\n            return {\n                user: {\n                    ...prev,\n                    camera: updatedData\n                }\n            }\n        })\n    }, [updatedData])\n\n    return(\n        <>\n            {success && (success?.status === 200 || success?.status === 201) &&\n                <UncontrolledAlert color=\"success\" data-dismiss=\"alert\" dismissible=\"true\">\n                    {success?.updated &&\n                        success?.updated\n                    }\n                    {success?.created &&\n                        success?.created\n                    }\n                    {success?.reset &&\n                        success?.reset\n                    }\n                </UncontrolledAlert>\n            }\n\n            {error && error?.reset &&\n                <UncontrolledAlert color=\"danger\" data-dismiss=\"alert\" dismissible=\"true\">\n                    {error?.reset &&\n                        error?.reset\n                    }\n                </UncontrolledAlert>\n            }\n                    <form onSubmit={handleCameraUpdate} ref={myRef}>\n                        <Row>\n                         <EquipmentForm handleInput1={handleInput} updateSetting={updateSetting} error={error}/>\n                     </Row>\n\n                <FormGroup className=\"profile-bottom-btn \">\n                    <Button className=\"discard-btn\" type=\"button\" onClick={resetToExistingCameraDetails}>Discard</Button>\n                    <Button className=\"save-btn\" type=\"submit\" disabled={!(updateSetting.aperture && updateSetting.focal_length && updateSetting.camera_type)}>Save Changes</Button>\n                </FormGroup>\n            </form>\n        </>\n    )\n}\nexport default CameraSetting;","import {FormGroup, Input, Col} from \"reactstrap\";\n\nconst EquipmentForm = (props) => {\n    const {handleInput1, updateSetting, error} = props;\n    return (\n        <>\n            <Col md=\"12\">\n                <FormGroup>\n                    <label>Camera Type<span className=\"required\">Required</span></label>\n                    <Input\n                        type=\"text\"\n                        name=\"camera_type\"\n                        placeholder=\"Canon\"\n                        // required\n                        value={updateSetting?.camera_type}\n                        onChange={(e) => handleInput1(e)}/>\n                    <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b>Canon</span>\n                    {error?.data?.camera_type &&\n                        <span className=\"text-danger small\">{error?.data?.camera_type}</span>\n                    }\n                </FormGroup>\n                <div className=\"border-line\"/>\n            </Col>\n            <Col md=\"12\">\n                <FormGroup>\n                    <h6>Lens Information</h6>\n                </FormGroup>\n            </Col>\n            <Col md=\"6\">\n                <FormGroup>\n                    <label>Focal Length<span className=\"required\">Required</span></label>\n                    <Input\n                        type=\"number\"\n                        maxLength={10}\n                        name=\"focal_length\"\n                        value={updateSetting?.focal_length}\n                        placeholder=\"35 mm\"\n                        // required\n                        onChange={(e) => handleInput1(e)}\n                    />\n                    <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b>35 mm</span>\n                    {error?.data?.focal_length &&\n                        <span className=\"text-danger small\">{error?.data?.focal_length}</span>\n                    }\n                </FormGroup>\n            </Col>\n            <Col md=\"6\">\n                <FormGroup>\n                    <label>Aperture<span className=\"required\">Required</span></label>\n                    <Input\n                        type=\"number\"\n                        name=\"aperture\"\n                        // required\n                        value={updateSetting?.aperture ? updateSetting?.aperture : updateSetting?.aperture === null ?? ''}\n                        placeholder=\"1.4\"\n                        onChange={(e) => handleInput1(e)}\n                    />\n                    <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b>1.4</span>\n                    {error?.data?.aperture &&\n                        <span className=\"text-danger small\">{error?.data?.aperture}</span>\n                    }\n                </FormGroup>\n            </Col>\n            <Col md=\"12\">\n                <div className=\"border-line\"/>\n                <FormGroup>\n                    <h6>Camera Settings</h6>\n                </FormGroup>\n            </Col>\n            <Col md=\"6\">\n                <FormGroup>\n                    <label>ISO</label>\n                    <Input\n                        type=\"number\"\n                        name=\"iso\"\n                        value={updateSetting?.iso}\n                        placeholder=\"100\"\n                        onChange={(e) => handleInput1(e)}\n                    />\n                    <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b>100</span>\n                </FormGroup>\n            </Col>\n            <Col md=\"6\">\n                <FormGroup>\n                    <label>Shutter Speed (exposure time)</label>\n                    <Input\n                        type=\"text\"\n                        name=\"shutter_speed\"\n                        value={updateSetting?.shutter_speed}\n                        placeholder=\"1/15\"\n                        maxLength={10}\n                        onChange={(e) => handleInput1(e)}\n                    />\n                    <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b>1/15</span>\n                </FormGroup>\n            </Col>\n            <Col md=\"6\">\n                <FormGroup>\n                    <label>Frame Rate (frames per second)</label>\n                    <Input type=\"number\" name=\"fps\" value={updateSetting?.fps} placeholder=\"24\"\n                           onChange={(e) => handleInput1(e)}/>\n                </FormGroup>\n            </Col>\n            <Col md=\"12\">\n                <div className=\"border-line\"/>\n                <FormGroup>\n                    <h6>How do you generally keep track of time?</h6>\n                    <Input\n                        type=\"text\"\n                        name=\"question_field_one\"\n                        value={updateSetting?.question_field_one}\n                        placeholder=\"Camera Time\"\n                        onChange={(e) => handleInput1(e)}\n                    />\n                    <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b>Camera Time</span>\n                </FormGroup>\n            </Col>\n            <Col md=\"12\">\n                <div className=\"border-line\"/>\n                <FormGroup>\n                    <h6>\n                        Do you use any special equipment attached to\n                        your camera (such as a filter)?\n                    </h6>\n                    <Input\n                        type=\"text\"\n                        name=\"question_field_two\"\n                        value={updateSetting?.question_field_two}\n                        placeholder=\"Polarizing Filter\"\n                        onChange={(e) => handleInput1(e)}\n                    />\n                    <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b>Polarizing Filter</span>\n                </FormGroup>\n            </Col>\n        </>\n    )\n}\nexport default EquipmentForm;"],"names":["props","useAuth","setAuth","cameraDetails","auth","user","isDetailExist","myRef","useRef","executeScroll","ref","window","scrollTo","current","offsetTop","useState","cameraSettingFields","updateSetting","setUpdateSetting","updatedData","setUpdateData","success","setSuccess","error","setError","useEffect","handleCameraUpdate","e","preventDefault","axios","baseURL","headers","token","access","withCredentials","then","response","data","updated","status","catch","created","prev","camera","color","dismissible","reset","onSubmit","handleInput1","name","target","value","className","type","onClick","disabled","aperture","focal_length","camera_type","md","placeholder","onChange","maxLength","iso","shutter_speed","fps","question_field_one","question_field_two"],"sourceRoot":""}