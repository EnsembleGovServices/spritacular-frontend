{"version":3,"file":"static/js/568.a70d9b7c.chunk.js","mappings":"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","sources":["components/Shared/LoadMore.jsx","hooks/useObservationsData.js","pages/Page/Gallery.jsx"],"sourcesContent":["import { Button} from 'reactstrap';\r\n\r\nexport const LoadMore = (props) => {\r\n    const {handleLoadMore} = props;\r\n    return (\r\n        <Button className='gray-outline-btn d-block mx-auto px-4 fw-normal' onClick={()=> handleLoadMore()}>Load more</Button>\r\n    )\r\n};","import {useContext, useDebugValue} from \"react\";\r\nimport {observationViewContext} from \"../layouts/PersistLogin\";\r\n\r\nconst useObservationsData = () => {\r\n    const { observationListData } = useContext(observationViewContext);\r\n    useDebugValue(observationListData, observationListData => observationListData ? 'List data set' : \"Listing data not set\")\r\n    return useContext(observationViewContext);\r\n}\r\n\r\nexport default useObservationsData;","import \"../../assets/scss/component/myObservation.scss\";\r\nimport \"../../assets/scss/component/gallery.scss\";\r\nimport {lazy, Suspense, useEffect, useState} from \"react\";\r\nimport {Container, UncontrolledAlert} from \"reactstrap\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport axios from \"../../api/axios\";\r\nimport {baseURL, routeUrls} from \"../../helpers/url\";\r\nimport {LoadMore} from \"../../components/Shared/LoadMore\";\r\nimport useObservationsData from \"../../hooks/useObservationsData\";\r\n\r\nconst NotFound = lazy(() =>\r\n    import(\"../../components/Common/NotFound\")\r\n);\r\nconst ObservationDetails = lazy(() =>\r\n    import(\"../Observation/ObservationDetails\")\r\n);\r\nconst FilterSelectMenu = lazy(() =>\r\n    import(\"../../components/Shared/FilterSelectMenu\")\r\n);\r\nconst ObservationDetailPage = lazy(() =>\r\n    import(\"../Observation/ObservationListPage\")\r\n);\r\n\r\nconst Gallery = () => {\r\n    const {auth} = useAuth();\r\n    const [isObservationDetailModal, setObservationDetailModal] = useState(false);\r\n    const [selectedObservationId, setSelectedObservationId] = useState();\r\n    const [searchCountry, setSearchCountry] = useState(\"\");\r\n    const [isFilterOpen, setIsFilterOpen] = useState({\r\n        isCountryOpen: false,\r\n        isTypeOpen: false,\r\n        isStatusOpen: false,\r\n    });\r\n    const [selectedFilterHorizontal, setSelectedFilterHorizontal] = useState({\r\n        country: {name: \"\", code: \"\"},\r\n        type: \"\",\r\n        status: \"\",\r\n    });\r\n    const {observationListData, setObservationListData} = useObservationsData();\r\n    const [loadedState, setLoadedState] = useState({loading: true, hasData: false});\r\n    const [showNoData, setShowNoData] = useState(false);\r\n    const activeTypeData = observationListData?.active?.is_verified ? \"verified\" : observationListData?.active?.is_reject ? \"denied\" : observationListData?.active?.is_submit ? \"unverified\" : \"draft\"\r\n\r\n    const [nextPageUrl, setNextPageUrl] = useState(\r\n        `${baseURL.api}/observation/gallery/?country=&category=&status=`\r\n    );\r\n    const normalUser = auth?.user?.is_user;\r\n\r\n    const findCountry = (e) => {\r\n        let value = e.target.value.toLowerCase();\r\n        setSearchCountry(value);\r\n    };\r\n\r\n    const handleLoadMoreData = () => {\r\n        getObservationType(\r\n            false,\r\n            selectedFilterHorizontal.country?.code,\r\n            selectedFilterHorizontal.type,\r\n            selectedFilterHorizontal.status\r\n        );\r\n    };\r\n    const getObservationType = async (\r\n        reset = false,\r\n        country = `${selectedFilterHorizontal.country?.code}`,\r\n        category = `${selectedFilterHorizontal.type}`,\r\n        status = `${selectedFilterHorizontal.status}`\r\n    ) => {\r\n        let url;\r\n        if (reset === true || !nextPageUrl) {\r\n            url = `${baseURL.api}/observation/gallery/?country=${country}&category=${category}&status=${status}&page=1`;\r\n        } else {\r\n            url = process.env.NODE_ENV === \"development\" ? nextPageUrl : nextPageUrl.replace('http', 'https');\r\n        }\r\n\r\n        const headers = {};\r\n        headers[\"Content-Type\"] = \"application/json\";\r\n        if (auth?.user) {\r\n            headers[\"Authorization\"] = `Bearer ${auth?.token?.access}`;\r\n        }\r\n        await axios.get(url, {headers: headers}).then((success) => {\r\n            if (success?.data?.results?.data !== undefined) {\r\n                if (success?.data?.next) {\r\n                    setNextPageUrl(success?.data?.next);\r\n                } else {\r\n                    setNextPageUrl(null);\r\n                }\r\n                let records = success?.data?.results?.data;\r\n                let prevData;\r\n\r\n                if (observationListData?.list?.length > 0 && reset === false) {\r\n                    prevData = [...observationListData?.list];\r\n                    prevData = [...prevData, ...records];\r\n                } else {\r\n                    prevData = success?.data?.results?.data;\r\n                }\r\n                setObservationListData((prev) => {\r\n                    return {\r\n                        ...prev,\r\n                        list: prevData,\r\n                    };\r\n                });\r\n                setLoadedState((prev) => {\r\n                    return {\r\n                        ...prev,\r\n                        loading: false,\r\n                        hasData: success?.data?.results?.data?.length > 0\r\n                    }\r\n                });\r\n            } else {\r\n                setNextPageUrl(null);\r\n                setObservationListData({list: [], active: {}});\r\n            }\r\n        })\r\n            .catch((error) => {\r\n                setLoadedState((prev) => {\r\n                    return {\r\n                        ...prev,\r\n                        loading: false,\r\n                    }\r\n                });\r\n                console.log(error.response);\r\n            });\r\n    };\r\n\r\n    const handleObservationDetailModal = (id) => {\r\n        setObservationDetailModal(!isObservationDetailModal);\r\n        setSelectedObservationId(id);\r\n    };\r\n\r\n    const handleFilterValue = (value, type) => {\r\n        setObservationListData([]);\r\n        // setLoadMore(pageSize);\r\n        if (type === \"status\") {\r\n            value = value.toLowerCase();\r\n            getObservationType(\r\n                true,\r\n                selectedFilterHorizontal.country?.code,\r\n                selectedFilterHorizontal.type,\r\n                value\r\n            );\r\n        } else if (type === \"category\") {\r\n            getObservationType(\r\n                true,\r\n                selectedFilterHorizontal.country?.code,\r\n                value,\r\n                selectedFilterHorizontal.status\r\n            );\r\n        } else if (type === \"country\") {\r\n            getObservationType(\r\n                true,\r\n                value.code,\r\n                selectedFilterHorizontal.type,\r\n                selectedFilterHorizontal.status\r\n            );\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        if (isFilterOpen.isCountryOpen === false) {\r\n            setSearchCountry(\"\");\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [isFilterOpen.isCountryOpen]);\r\n    useEffect(() => {\r\n        setObservationListData((prev) => {\r\n            return {\r\n                ...prev,\r\n                active: observationListData?.list?.[selectedObservationId],\r\n            };\r\n        });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [isObservationDetailModal]);\r\n    useEffect(() => {\r\n        setObservationListData((prev) => {\r\n            return {\r\n                ...prev,\r\n                activeType: \"\",\r\n                list: []\r\n            }\r\n        })\r\n        getObservationType(true, \"\", \"\", \"\").then(r => r);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setShowNoData(loadedState?.hasData);\r\n    }, [loadedState?.hasData])\r\n\r\n    return (\r\n        <>\r\n            <Suspense fallback={<div></div>}>\r\n                <FilterSelectMenu\r\n                    galleryFilter={true}\r\n                    isFilterOpen={isFilterOpen}\r\n                    setIsFilterOpen={setIsFilterOpen}\r\n                    selectedFilterHorizontal={selectedFilterHorizontal}\r\n                    setSelectedFilterHorizontal={setSelectedFilterHorizontal}\r\n                    searchCountry={searchCountry}\r\n                    findCountry={findCountry}\r\n                    handleFilterValue={handleFilterValue}\r\n                />\r\n            </Suspense>\r\n\r\n            <Container className=\"pt-5\">\r\n                {normalUser && (\r\n                    <UncontrolledAlert\r\n                        color=\"danger\"\r\n                        data-dismiss=\"alert\"\r\n                        dismissible=\"true\"\r\n                        className=\"text-center mb-5\"\r\n                    >\r\n                        Would you like to help us sift through observations and endorse\r\n                        their validity?\r\n                        <Link\r\n                            to={\"/\" + routeUrls.quiz.home}\r\n                            className=\"btn btn-outline-primary\"\r\n                        >\r\n                            Get Trained\r\n                        </Link>\r\n                    </UncontrolledAlert>\r\n                )}\r\n\r\n                {loadedState?.hasData ? (\r\n                    <div className=\"gallery-page\">\r\n                        <h4 className=\"text-black fw-bold\">Recent Observations</h4>\r\n                        <div>\r\n                            <Suspense fallback={<div></div>}>\r\n                                <ObservationDetailPage\r\n                                    observationList={observationListData?.list}\r\n                                    isObservationDetailModal={isObservationDetailModal}\r\n                                    setObservationDetailModal={setObservationDetailModal}\r\n                                    setSelectedObservationId={setSelectedObservationId}\r\n                                />\r\n                                {observationListData?.list?.length > 0 && nextPageUrl &&\r\n                                    <LoadMore handleLoadMore={handleLoadMoreData}/>\r\n                                }\r\n                            </Suspense>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    showNoData ? (\r\n                        <Suspense fallback={''}>\r\n                            <NotFound/>\r\n                        </Suspense>\r\n                    ) : ('')\r\n                )}\r\n\r\n            </Container>\r\n\r\n\r\n            <ObservationDetails\r\n                data={observationListData?.active}\r\n                activeType={activeTypeData}\r\n                modalClass=\"observation-details_modal\"\r\n                open={isObservationDetailModal}\r\n                handleClose={handleObservationDetailModal}\r\n                handleApproveRejectEvent={getObservationType}\r\n                refreshData={getObservationType}\r\n            />\r\n        </>\r\n    );\r\n};\r\nexport default Gallery;\r\n"],"names":["LoadMore","props","handleLoadMore","className","onClick","observationListData","useContext","observationViewContext","useDebugValue","NotFound","lazy","ObservationDetails","FilterSelectMenu","ObservationDetailPage","auth","useAuth","useState","isObservationDetailModal","setObservationDetailModal","selectedObservationId","setSelectedObservationId","searchCountry","setSearchCountry","isCountryOpen","isTypeOpen","isStatusOpen","isFilterOpen","setIsFilterOpen","country","name","code","type","status","selectedFilterHorizontal","setSelectedFilterHorizontal","useObservationsData","setObservationListData","loading","hasData","loadedState","setLoadedState","showNoData","setShowNoData","activeTypeData","active","is_verified","is_reject","is_submit","baseURL","nextPageUrl","setNextPageUrl","normalUser","user","is_user","getObservationType","reset","category","url","replace","headers","token","access","axios","then","success","undefined","data","results","next","prevData","records","list","length","prev","catch","error","console","log","response","useEffect","activeType","r","Suspense","fallback","galleryFilter","findCountry","e","value","target","toLowerCase","handleFilterValue","color","dismissible","to","routeUrls","observationList","modalClass","open","handleClose","id","handleApproveRejectEvent","refreshData"],"sourceRoot":""}