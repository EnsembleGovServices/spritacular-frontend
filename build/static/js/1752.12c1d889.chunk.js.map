{"version":3,"file":"static/js/1752.12c1d889.chunk.js","mappings":"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","sources":["components/Common/NotFound.jsx","components/Shared/LoadMore.jsx","helpers/observation.js","hooks/useObservations.js","pages/Observation/MyObservations.jsx","pages/Observation/Observations.jsx"],"sourcesContent":["import Images from \"../../static/images\";\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div className=\"data-not-found\">\r\n            <img\r\n                src={Images.NoDataFound}\r\n                alt=\"No data found\"\r\n                className=\"mb-3\"\r\n            />\r\n            <p>\r\n                <b className=\"text-secondary fw-bold\">Opps!</b> No Data Found\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import { Button} from 'reactstrap';\r\n\r\nexport const LoadMore = (props) => {\r\n    const {handleLoadMore} = props;\r\n    return (\r\n        <Button className='gray-outline-btn d-block mx-auto px-4 fw-normal' onClick={()=> handleLoadMore()}>Load more</Button>\r\n    )\r\n};","export const Tabs = {\r\n    ObservationImages : \"ObservationImages\",\r\n    DateTimeLocation : \"DateTimeLocation\",\r\n    EquipmentDetails : \"EquipmentDetails\",\r\n}\r\n\r\nexport const MultiImageTabs = {\r\n    MultipleImages: \"MultipleImages\",\r\n    ImageSequence: \"ImageSequence\"\r\n}\r\n\r\nexport const imageDetails = {\r\n    Details : \"Details\",\r\n    Equipment : \"Equipment\",\r\n    Comments : \"Comments\",\r\n}\r\n\r\nexport const obvType = {\r\n    default: \"verified\",\r\n    verified : \"verified\",\r\n    unverified: \"unverified\",\r\n    denied: \"denied\",\r\n    draft: \"draft\"\r\n}\r\n\r\nexport const masonryConfig = (selector, width, gutter, fit=false, transition) => {\r\n    return {\r\n        columnWidth: width,\r\n        gutter: gutter,\r\n        itemSelector: selector,\r\n        fitWidth: false,\r\n        transitionDuration: transition,\r\n    }\r\n}\r\n\r\nexport const uploadImageDefaultState = (random, baseImage, item, userLocation) => {\r\n    return {\r\n        id : random,\r\n        sameAsFirstMap: false,\r\n        sameAsFirstDate: false,\r\n        image : baseImage,\r\n        lastModified: item?.lastModified,\r\n        name: item?.name,\r\n        item: item,\r\n        latitude: userLocation ? userLocation.latitude : 28.5204,\r\n        longitude: userLocation ? userLocation.longitude : 25.8567,\r\n        location: 'Pune, Maharashtra, India',\r\n        country_code: 'IN',\r\n        obs_date: null,\r\n        obs_time: null,\r\n        timezone: 'Africa/Abidjan',\r\n        azimuth: 360,\r\n        time_accuracy:'',\r\n        is_precise_azimuth:0,\r\n        category_map: {\r\n            category: [],\r\n            is_other: false,\r\n            other_value: ''\r\n        }\r\n    }\r\n}\r\n\r\nexport const directionValue = [\r\n    {name: 'N', angle: 360, default : true},\r\n    {name: 'NE', angle: 45, default : false},\r\n    {name: 'E', angle: 90, default : false},\r\n    {name: 'SE', angle: 135, default : false},\r\n    {name: 'S', angle: 180, default : false},\r\n    {name: 'SW', angle: 235, default : false},\r\n    {name: 'W', angle: 270, default : false},\r\n    {name: 'NW', angle: 315, default : false},\r\n]\r\n\r\nexport const getdirectionDegree = (key) => {\r\n    \r\n    let degree;\r\n    switch (key) {\r\n        case 'N':\r\n            degree = 360;\r\n            break;\r\n        case 'NE':\r\n            degree = 45;\r\n            break;\r\n        case 'E':\r\n            degree = 90;\r\n            break;\r\n        case 'SE':\r\n            degree = 135;\r\n            break;\r\n        case 'S':\r\n            degree = 180;\r\n            break;\r\n        case 'SW':\r\n            degree = 235;\r\n            break;\r\n        case 'W':\r\n            degree = 270;\r\n            break;\r\n        case 'NW':\r\n            degree = 315;\r\n            break;\r\n    \r\n        default:\r\n            degree = key;\r\n            break;\r\n    }\r\n    return degree\r\n}\r\n\r\nexport const getdirectionAngle = (key) => {\r\n    \r\n    let angle;\r\n    switch (key) {\r\n        case 360:\r\n            angle = 'N';\r\n            break;\r\n        case 45:\r\n            angle = 'NE';\r\n            break;\r\n        case 90:\r\n            angle = 'E';\r\n            break;\r\n        case 135:\r\n            angle = 'SE';\r\n            break;\r\n        case 180:\r\n            angle = 'S';\r\n            break;\r\n        case 235:\r\n            angle = 'SW';\r\n            break;\r\n        case 270:\r\n            angle = 'W';\r\n            break;\r\n        case 315:\r\n            angle = 'NW';\r\n            break;\r\n    \r\n        default:\r\n            angle = 'N';\r\n            break;\r\n    }\r\n    return angle\r\n}","import {useContext, useDebugValue} from \"react\";\r\nimport {ObservationContext} from \"../pages/Observation/Observations\";\r\n\r\nconst useObservations = () => {\r\n    const { observationImages } = useContext(ObservationContext);\r\n    // useDebugValue(observationSteps, observationSteps => observationSteps ? 'Steps set' : \"Steps not set\")\r\n    useDebugValue(observationImages, observationImages => observationImages?.data ? 'Images set' : \"Images not set\")\r\n    return useContext(ObservationContext);\r\n}\r\n\r\nexport default useObservations;","import \"../../assets/scss/component/myObservation.scss\";\r\nimport {Col, Container, Row} from \"reactstrap\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {Icon} from \"@iconify/react\";\r\nimport axios from \"../../api/axios\";\r\n\r\nimport {lazy, Suspense, useEffect, useState} from \"react\";\r\n\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport useObservationsData from \"../../hooks/useObservationsData\";\r\n//Todo should not be used two context for same thing\r\nimport useObservations from \"../../hooks/useObservations\";\r\n\r\nimport {LoadMore} from \"../../components/Shared/LoadMore\";\r\nimport {obvType} from \"../../helpers/observation\";\r\nimport {baseURL, routeUrls} from \"../../helpers/url\";\r\nimport Images from \"./../../static/images\";\r\nimport Loader from \"../../components/Shared/Loader\";\r\nimport NotFound from \"../../components/Common/NotFound\";\r\n\r\nconst ObservationDetails = lazy(() => import(\"./ObservationDetails\"));\r\nconst ObservationDetailPage = lazy(() => import(\"./ObservationDetailPage\"));\r\nconst InitialUploadObservations = lazy(() =>\r\n    import(\"../InitialUploadObservations\")\r\n);\r\n\r\nconst MyObservations = () => {\r\n    const {auth} = useAuth();\r\n    const {setObservationData, setObservationSteps, setObservationImages} =\r\n        useObservations();\r\n    const {observationListData, setObservationListData} = useObservationsData();\r\n    const [isObservationDetailModal, setObservationDetailModal] = useState(false);\r\n    const [isLoaded, setIsLoaded] = useState(true);\r\n    const [activeType, setActiveType] = useState(\"verified\");\r\n    const [selectedObservationId, setSelectedObservationId] = useState();\r\n    const navigate = useNavigate();\r\n    const [nextPageUrl, setNextPageUrl] = useState(\r\n        \"/observation/observation_collection/?type=\"\r\n    );\r\n    const [isActiveTypeChangeFinished, setActiveTypeChangeFinished] =\r\n        useState(false);\r\n\r\n    const handleObservationEdit = (data) => {\r\n        cleaningUpObservationDataForDraftSaving(data).then((r) => r);\r\n        setObservationDetailModal(false);\r\n        setTimeout(function () {\r\n            navigate(\"/observations/update\");\r\n        }, 100);\r\n    };\r\n\r\n    const cleaningUpObservationDataForDraftSaving = async (data) => {\r\n        setObservationImages([]);\r\n        setObservationData([]);\r\n        await updateStateForDraft(data);\r\n        return true;\r\n    };\r\n\r\n    const updateStateForDraft = (data) => {\r\n        setObservationSteps((prev) => {\r\n            return {\r\n                ...prev,\r\n                total: 3,\r\n                active: 1,\r\n                mode: {\r\n                    update: true,\r\n                    ...data,\r\n                },\r\n            };\r\n        });\r\n    };\r\n\r\n    const getObservationData = (reset = false, value = \"verified\") => {\r\n        setActiveType(value);\r\n        let url;\r\n        if (reset === true || !nextPageUrl) {\r\n            url = \"/observation/observation_collection/?type=\" + value + \"&page=1\";\r\n        } else {\r\n            url = nextPageUrl;\r\n        }\r\n        axios\r\n            .get(baseURL.api + url, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${auth?.token?.access}`,\r\n                },\r\n            })\r\n            .then((success) => {\r\n                let data = success?.data?.results;\r\n                if (success?.data?.next) {\r\n                    setNextPageUrl(success?.data?.next);\r\n                } else {\r\n                    setNextPageUrl(null);\r\n                }\r\n\r\n                let records = data?.data;\r\n                let prevData;\r\n\r\n                if (observationListData?.list && !reset) {\r\n                    prevData = [...observationListData.list];\r\n                    prevData = [...prevData, ...records];\r\n                } else {\r\n                    prevData = data?.data;\r\n                }\r\n\r\n                // Global State\r\n                setObservationListData((prev) => {\r\n                    return {\r\n                        ...prev,\r\n                        list: prevData,\r\n                        count: {\r\n                            verified: data?.verified_count,\r\n                            unverified: data?.unverified_count,\r\n                            denied: data?.denied_count,\r\n                            draft: data?.draft_count,\r\n                            total:\r\n                                data?.verified_count +\r\n                                data?.unverified_count +\r\n                                data?.denied_count +\r\n                                data?.draft_count,\r\n                        },\r\n                    };\r\n                });\r\n\r\n                setIsLoaded(false);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.response);\r\n            });\r\n    };\r\n\r\n    const handleObservationDetailModal = (id) => {\r\n        setObservationDetailModal(!isObservationDetailModal);\r\n        setSelectedObservationId(id);\r\n    };\r\n\r\n    const handleTypeOfObservation = (type) => {\r\n        setActiveTypeChangeFinished(true);\r\n        setActiveType(type);\r\n\r\n        setObservationListData((prev) => {\r\n            return {\r\n                ...prev,\r\n                list: [],\r\n            };\r\n        });\r\n\r\n        getObservationData(true, type);\r\n\r\n        setTimeout(function () {\r\n            setActiveTypeChangeFinished(false);\r\n        }, 300);\r\n    };\r\n\r\n    const handleLoadMore = () => {\r\n        getObservationData(false, activeType);\r\n    };\r\n\r\n    const listCount = observationListData?.count;\r\n\r\n    useEffect(() => {\r\n        setObservationListData((prev) => {\r\n            return {\r\n                ...prev,\r\n                active: observationListData?.list?.[selectedObservationId],\r\n                activeType: activeType\r\n            };\r\n        });\r\n    }, [isObservationDetailModal, activeType]);\r\n\r\n    useEffect(() => {\r\n        getObservationData(true, \"verified\");\r\n        setIsLoaded(false);\r\n    }, [isLoaded]);\r\n\r\n\r\n    return listCount?.total > 0 ? (\r\n        <section className=\"my-observation-data\">\r\n            {/*Filter*/}\r\n            <Container>\r\n                <div className=\"filtered-data_wrapper\">\r\n                    <Row>\r\n                        <Col sm={12} md={8} lg={6} className=\"order-2 order-md-1\">\r\n                            <div\r\n                                className=\"d-flex align-items-center justify-content-start h-100 text-truncate overflow-auto mb-3 mb-md-0\">\r\n                <span\r\n                    className={\r\n                        activeType === obvType.verified\r\n                            ? \"filter-link active\"\r\n                            : \"filter-link \"\r\n                    }\r\n                    onClick={() => handleTypeOfObservation(obvType.verified)}\r\n                >\r\n                  Verified ({observationListData?.count?.verified})\r\n                </span>\r\n                                <span\r\n                                    className={\r\n                                        activeType === obvType.unverified\r\n                                            ? \"filter-link active\"\r\n                                            : \"filter-link \"\r\n                                    }\r\n                                    onClick={() => handleTypeOfObservation(obvType.unverified)}\r\n                                >\r\n                  Unverified ({observationListData?.count?.unverified})\r\n                </span>\r\n                                <span\r\n                                    className={\r\n                                        activeType === obvType.denied\r\n                                            ? \"filter-link active\"\r\n                                            : \"filter-link \"\r\n                                    }\r\n                                    onClick={() => handleTypeOfObservation(obvType.denied)}\r\n                                >\r\n                  Denied ({observationListData?.count?.denied})\r\n                </span>\r\n                                <span\r\n                                    className={\r\n                                        activeType === obvType.draft\r\n                                            ? \"filter-link active\"\r\n                                            : \"filter-link \"\r\n                                    }\r\n                                    onClick={() => handleTypeOfObservation(obvType.draft)}\r\n                                >\r\n                  Drafts ({observationListData?.count?.draft})\r\n                </span>\r\n                            </div>\r\n                        </Col>\r\n                        <Col sm={12} md={4} lg={6} className=\"text-end order-1 order-md-2\">\r\n                            <div\r\n                                className=\"d-flex align-items-center justify-content-end h-100  flex-wrap flex-lg-nowrap mb-2 mb-md-0\">\r\n                                <Link\r\n                                    to={\"/\" + routeUrls.observationsAdd}\r\n                                    className=\"btn btn-secondary ms-2 ms-xl-4 shadow-none\"\r\n                                >\r\n                                    <Icon\r\n                                        icon=\"heroicons-outline:upload\"\r\n                                        width=\"16\"\r\n                                        height=\"20\"\r\n                                    />\r\n                                    Upload Observations\r\n                                </Link>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Container>\r\n\r\n            {/*Data block*/}\r\n\r\n            <Container>\r\n                {isActiveTypeChangeFinished ? (\r\n                    <Loader/>\r\n                ) : observationListData?.list?.length > 0 ? (\r\n                    <Suspense fallback={<div>Please wait...</div>}>\r\n                        <ObservationDetailPage\r\n                            activeType={activeType}\r\n                            observationList={observationListData?.list}\r\n                            isObservationDetailModal={isObservationDetailModal}\r\n                            setObservationDetailModal={setObservationDetailModal}\r\n                            setSelectedObservationId={setSelectedObservationId}\r\n                        />\r\n                    </Suspense>\r\n                ) : (\r\n                    <NotFound/>\r\n                )}\r\n\r\n                {nextPageUrl && <LoadMore handleLoadMore={handleLoadMore}/>}\r\n            </Container>\r\n\r\n            <Suspense fallback={<div>Please wait...</div>}>\r\n                <ObservationDetails\r\n                    data={observationListData?.active}\r\n                    activeType={activeType}\r\n                    modalClass=\"observation-details_modal\"\r\n                    open={isObservationDetailModal}\r\n                    handleClose={handleObservationDetailModal}\r\n                    handleContinueEdit={handleObservationEdit}\r\n                    handleApproveRejectEvent={getObservationData}\r\n                    refreshData={getObservationData}\r\n                />\r\n            </Suspense>\r\n        </section>\r\n    ) : (\r\n        <Suspense fallback={<div>Please wait...</div>}>\r\n            <InitialUploadObservations count={listCount}/>\r\n        </Suspense>\r\n    );\r\n};\r\nexport default MyObservations;","import { Outlet } from \"react-router-dom\";\r\nimport {createContext, useEffect, useState} from \"react\";\r\nimport { cameraSettingFields } from \"../../helpers/url\";\r\n\r\nexport const ObservationContext = createContext({});\r\n\r\nconst Observations = () => {\r\n    const [observationType, setObservationType] = useState({\r\n        image_type: 1\r\n    });\r\n\r\n    const [observationSteps, setObservationSteps] = useState({\r\n        total: 3,\r\n        active: 1,\r\n        mode: {\r\n            update: false\r\n        }\r\n    });\r\n    const [observationImages, setObservationImages] = useState([]);\r\n    const [cameraDetails, setCameraDetails] = useState(cameraSettingFields);\r\n    const [observationCategory, setObservationCategory] = useState([]);\r\n    const [observationData, setObservationData] = useState({});\r\n\r\n    useEffect(()=> {\r\n        let data = (observationImages?.data) ? [...observationImages?.data] : []\r\n        setObservationData({\r\n            // is_draft: observationSteps?.is_draft ? 1 : 0,\r\n            image_type: observationType?.image_type,\r\n            map_data: data,\r\n            elevation_angle: null,\r\n            video_url : ''\r\n        })\r\n    }, [observationImages?.data, observationSteps?.is_draft, observationType?.image_type])\r\n\r\n    return(\r\n        <ObservationContext.Provider value={\r\n            {\r\n                observationType,\r\n                setObservationType,\r\n                observationSteps,\r\n                setObservationSteps,\r\n                observationImages,\r\n                setObservationImages,\r\n                observationCategory,\r\n                setObservationCategory,\r\n                observationData,\r\n                setObservationData,\r\n                cameraDetails, \r\n                setCameraDetails\r\n            }\r\n        }>\r\n            <Outlet />\r\n        </ObservationContext.Provider>\r\n    )\r\n}\r\n\r\nexport default Observations;"],"names":["className","src","Images","alt","LoadMore","props","handleLoadMore","onClick","Tabs","ObservationImages","DateTimeLocation","EquipmentDetails","MultiImageTabs","MultipleImages","ImageSequence","imageDetails","Details","Equipment","Comments","obvType","default","verified","unverified","denied","draft","uploadImageDefaultState","random","baseImage","item","userLocation","id","sameAsFirstMap","sameAsFirstDate","image","lastModified","name","latitude","longitude","location","country_code","obs_date","obs_time","timezone","azimuth","time_accuracy","is_precise_azimuth","category_map","category","is_other","other_value","directionValue","angle","getdirectionDegree","key","degree","getdirectionAngle","observationImages","useContext","ObservationContext","useDebugValue","data","ObservationDetails","lazy","ObservationDetailPage","InitialUploadObservations","auth","useAuth","useObservations","setObservationData","setObservationSteps","setObservationImages","useObservationsData","observationListData","setObservationListData","useState","isObservationDetailModal","setObservationDetailModal","isLoaded","setIsLoaded","activeType","setActiveType","selectedObservationId","setSelectedObservationId","navigate","useNavigate","nextPageUrl","setNextPageUrl","isActiveTypeChangeFinished","setActiveTypeChangeFinished","cleaningUpObservationDataForDraftSaving","updateStateForDraft","prev","total","active","mode","update","getObservationData","url","reset","value","axios","baseURL","headers","Authorization","token","access","then","success","results","next","prevData","records","list","count","verified_count","unverified_count","denied_count","draft_count","catch","error","console","log","response","handleTypeOfObservation","type","setTimeout","listCount","useEffect","sm","md","lg","to","routeUrls","icon","width","height","length","Suspense","fallback","observationList","modalClass","open","handleClose","handleContinueEdit","r","handleApproveRejectEvent","refreshData","createContext","image_type","observationType","setObservationType","observationSteps","cameraSettingFields","cameraDetails","setCameraDetails","observationCategory","setObservationCategory","observationData","map_data","elevation_angle","video_url","is_draft","Provider"],"sourceRoot":""}