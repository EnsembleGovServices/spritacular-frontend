{"version":3,"file":"static/js/7267.13f78606.chunk.js","mappings":"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","sources":["pages/Observation/ObservationDetails.jsx"],"sourcesContent":["import \"../../assets/scss/component/observationDetails.scss\";\nimport {lazy, Suspense, useEffect, useRef, useState} from \"react\";\nimport {\n    Badge,\n    Button,\n    Col,\n    Modal,\n    ModalBody,\n    ModalHeader,\n    Nav,\n    NavItem,\n    NavLink,\n    Row,\n    Spinner,\n    TabContent,\n    TabPane,\n} from \"reactstrap\";\n\nimport {Icon} from \"@iconify/react\";\nimport Tippy from \"@tippyjs/react\";\nimport useObservationsData from \"../../hooks/useObservationsData\";\n\nimport Images from \"./../../static/images\";\nimport {imageDetails} from \"../../helpers/observation\";\nimport Loader from \"../../components/Shared/Loader\";\nimport axios from \"../../api/axios\";\nimport {baseURL, routeUrls} from \"../../helpers/url\";\nimport useAuth from \"../../hooks/useAuth\";\nimport {PropTypes} from \"prop-types\";\nimport {useLocation} from \"react-router-dom\";\n\nconst ObservationMoreDetails = lazy(() => import(\"../../components/Observation/ObservationDetails/ObservationMoreDetails\"));\nconst ObservationMoreEquipementDetails = lazy(() => import(\"../../components/Observation/ObservationDetails/ObservationMoreEquipementDetails\"));\nconst Comments = lazy(() => import(\"../../components/Observation/ObservationDetails/Comments\"));\nconst CardImageCarousel = lazy(() => import(\"../../components/Shared/CardImageCarousel\"));\n\nconst ObservationDetails = (props) => {\n    const {auth} = useAuth();\n    const location = useLocation();\n    const {\n        modalClass,\n        open,\n        handleClose,\n        data,\n        activeType,\n        handleContinueEdit,\n        handleApproveRejectEvent,\n        refreshData\n    } = props;\n\n    const [activeTab, setActiveImageTab] = useState(imageDetails.Details);\n    const {observationComments, setObservationListData, observationListData} = useObservationsData();\n    const obvDetailsModal = useRef(null);\n    const [isImageNull, setIsImageNull] = useState(true);\n\n    const intervalRef = useRef();\n\n    // Toggle Tabs\n    const toggleImageDetailsTab = (tab) => {\n        if (activeTab !== tab) {\n            setActiveImageTab(tab);\n        }\n    };\n\n    useEffect(() => {\n        setActiveImageTab(imageDetails.Details);\n    }, [open, data?.id]);\n\n    // Fetch image for observation for null checking\n\n    const checkNulledImage = async () => {\n        return await axios\n            .post(\n                baseURL.api + \"/observation/get_observation_details/\" + data?.id + \"/\",\n                null,\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `Bearer ${auth?.token?.access}`,\n                    },\n                }\n            )\n            .then((response) => {\n                setIsImageNull(response?.data?.data?.includes(null));\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    };\n\n    useEffect(() => {\n        if (open && data?.id && isImageNull && auth?.user?.id) {\n            intervalRef.current = setInterval(() => {\n                checkNulledImage().then((r) => r);\n            }, 1000);\n\n            return () => {\n                clearInterval(intervalRef.current);\n            };\n        } else if (open && data?.id && isImageNull && !auth?.user?.id) {\n            setTimeout(function () {\n                setIsImageNull(false);\n            }, 1000)\n        }\n    }, [data?.id, isImageNull, open, auth?.user]);\n\n    useEffect(() => {\n        if (!isImageNull && location.pathname === `/${routeUrls.myObservations}`) {\n            refreshData(true, activeType);\n        }\n\n    }, [isImageNull, location]);\n\n\n    useEffect(() => {\n        if (!isImageNull) {\n            observationListData?.list?.filter(item => {\n                return item.id === observationListData?.active?.id\n            }).map(item => {\n                return setObservationListData((prev) => {\n                    return {\n                        ...prev,\n                        active: item\n                    }\n                })\n            })\n        }\n    }, [observationListData.list])\n\n    return (\n        <>\n            <Modal\n                className={modalClass ? modalClass : \"\"}\n                isOpen={open}\n                backdrop={true}\n                keyboard={false}\n                scrollable={false}\n                size=\"xl\"\n                toggle={handleClose}\n                ref={obvDetailsModal}\n            >\n                <ModalHeader className=\"d-flex justify-content-between align-items-center w-100\">\n                    <div>\n                        <Button\n                            className=\"close-icon bg-transparent rounded-0 border-0 shadow-none p-0 me-3\"\n                            onClick={() => handleClose()}\n                        >\n                            <img src={Images.Modalcloseicon} alt=\"close-icon\"/>\n                        </Button>\n                        {data?.category_data?.[0] ? data?.category_data?.[0]?.name : null}\n                        <Badge\n                            className={`text-uppercase ${\n                                activeType === \"verified\" ? \"badge-success\" : \"\"\n                            }`}\n                        >\n                            {activeType === \"verified\" && (\n                                <Icon\n                                    icon=\"mdi:check-decagram\"\n                                    color=\"#27ae60\"\n                                    className=\"me-1\"\n                                    width=\"13\"\n                                    height=\"13\"\n                                />\n                            )}\n                            {activeType}\n                        </Badge>\n                    </div>\n\n                    {activeType === \"draft\" && (\n                        <div>\n                            <Button\n                                variant=\"primary\"\n                                onClick={() =>\n                                    handleContinueEdit({id: data?.id, type: activeType})\n                                }\n                            >\n                                Continue Editing\n                            </Button>\n                        </div>\n                    )}\n                </ModalHeader>\n                <ModalBody>\n                    <Row>\n                        <Col md={6}>\n                            <div className=\"mb-4 mb-md-0 h-100\">\n                                <div className=\"preview-detail mb-3 mb-md-2\">\n                                    {!(data?.image_type === 3) &&\n                                        (data?.images?.length === 0 ? (\n                                            <img\n                                                src={Images.NotAvailable}\n                                                alt=\"No available\"\n                                                className=\"object-contain img-fluid\"\n                                            />\n                                        ) : !isImageNull ? (\n                                            <img\n                                                src={data?.images?.[0]?.image}\n                                                alt=\"card details\"\n                                                className=\"img-fluid\"\n                                            />\n                                        ) : (\n                                            <div\n                                                className=\"d-flex flex-column h-100 align-items-center justify-content-center bg-gradient bg-light\">\n                                                <Spinner color=\"primary\" size=\"20px\"/>\n                                                <h5 className=\"mt-3\">Processing image...</h5>\n                                            </div>\n                                        ))}\n                                    {data?.image_type === 3 && (\n                                        <Suspense fallback={<Loader fixContent={true}/>}>\n                                            <CardImageCarousel\n                                                carouselData={data?.images}\n                                                detail={true}\n                                            />\n                                        </Suspense>\n                                    )}\n                                </div>\n                                <Row>\n                                    <Col\n                                        sm={6}\n                                        className=\"justify-content-start d-flex align-items-center mb-2 mb-sm-0\"\n                                    >\n                                        <div className=\"d-flex card-user_details align-items-center overflow-hidden\">\n                                            <i className=\"profile-icon rounded-circle\">\n                                                <img\n                                                    width=\"100%\"\n                                                    height=\"100%\"\n                                                    src={\n                                                        data?.user_data?.profile_image\n                                                            ? data?.user_data?.profile_image\n                                                            : Images.DefaultProfile\n                                                    }\n                                                    alt=\"Profile\"\n                                                    className=\"rounded-circle\"\n                                                />\n                                            </i>\n                                            <h5 className=\"pe-2 mb-0 text-truncate fw-normal text-black\">\n                                                {data?.user_data?.first_name +\n                                                    \" \" +\n                                                    data?.user_data?.last_name}\n                                            </h5>\n                                        </div>\n                                    </Col>\n                                    <Col\n                                        sm={6}\n                                        className=\"justify-content-end d-flex align-items-center\"\n                                    >\n                                        <div className=\"observation_type d-flex align-items-center\">\n                                            {data?.category_data?.length > 0 &&\n                                                data?.category_data?.map((item, index) => {\n                                                    return (\n                                                        <i\n                                                            id={item?.name?.toLowerCase().replaceAll(\" \", \"\")}\n                                                            className=\"rounded-circle bg-white ms-2 cursor-pointer\"\n                                                            key={index}\n                                                        >\n                                                            <Tippy\n                                                                animation=\"perspective\"\n                                                                content={item?.name}\n                                                            >\n                                                                <img\n                                                                    src={`/assets/images/category/${item?.name\n                                                                        ?.toLowerCase()\n                                                                        .replaceAll(\" \", \"\")}.png`}\n                                                                    alt={item?.name}\n                                                                />\n                                                            </Tippy>\n                                                        </i>\n                                                    );\n                                                })}\n                                        </div>\n                                    </Col>\n                                </Row>\n                            </div>\n                        </Col>\n                        <Col md={6}>\n                            <Nav tabs>\n                                <NavItem>\n                                    <NavLink\n                                        className={\n                                            activeTab === imageDetails.Details ? \"active\" : \"\"\n                                        }\n                                        onClick={() => {\n                                            toggleImageDetailsTab(imageDetails.Details);\n                                        }}\n                                    >\n                                        Details\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink\n                                        className={\n                                            activeTab === imageDetails.Equipment ? \"active\" : \"\"\n                                        }\n                                        onClick={() => {\n                                            toggleImageDetailsTab(imageDetails.Equipment);\n                                        }}\n                                    >\n                                        Equipment\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink\n                                        className={\n                                            activeTab === imageDetails.Comments ? \"active\" : \"\"\n                                        }\n                                        onClick={() => {\n                                            toggleImageDetailsTab(imageDetails.Comments);\n                                        }}\n                                    >\n                                        Comments{\" \"}\n                                        {observationComments?.comment_count === 0\n                                            ? \"\"\n                                            : `(${observationComments?.comment_count})`}\n                                    </NavLink>\n                                </NavItem>\n                            </Nav>\n                            <TabContent activeTab={activeTab}>\n                                <TabPane tabId={imageDetails.Details}>\n                                    <Suspense fallback={<div>please wait...</div>}>\n                                        <ObservationMoreDetails\n                                            handlePopup={handleClose}\n                                            approveRejectEvent={handleApproveRejectEvent}\n                                            obvCommentCount={observationComments?.comment_count}\n                                            data={data}\n                                            activeType={activeType}\n                                        />\n                                    </Suspense>\n                                </TabPane>\n                                <TabPane tabId={imageDetails.Equipment}>\n                                    <Suspense fallback={<div>please wait...</div>}>\n                                        <ObservationMoreEquipementDetails\n                                            obvCommentCount={observationComments?.comment_count}\n                                            data={data?.camera_data}\n                                        />\n                                    </Suspense>\n                                </TabPane>\n                                <TabPane tabId={imageDetails.Comments}>\n                                    <Suspense fallback={<div>please wait...</div>}>\n                                        <Comments obvId={data?.id}/>\n                                    </Suspense>\n                                </TabPane>\n                            </TabContent>\n                        </Col>\n                    </Row>\n                </ModalBody>\n            </Modal>\n        </>\n    );\n};\n\nObservationDetails.propTypes = {\n    hasNulledImage: PropTypes.func,\n    refreshData: PropTypes.func\n};\n\nexport default ObservationDetails;\n"],"names":["ObservationMoreDetails","lazy","ObservationMoreEquipementDetails","Comments","CardImageCarousel","props","auth","useAuth","location","useLocation","modalClass","open","handleClose","data","activeType","handleContinueEdit","handleApproveRejectEvent","refreshData","useState","imageDetails","activeTab","setActiveImageTab","useObservationsData","observationComments","setObservationListData","observationListData","obvDetailsModal","useRef","isImageNull","setIsImageNull","intervalRef","toggleImageDetailsTab","tab","useEffect","id","checkNulledImage","axios","baseURL","headers","Authorization","token","access","then","response","includes","catch","error","console","log","user","current","setInterval","r","clearInterval","setTimeout","pathname","routeUrls","list","filter","item","active","map","prev","className","isOpen","backdrop","keyboard","scrollable","size","toggle","ref","onClick","src","Images","alt","category_data","name","icon","color","width","height","variant","type","md","image_type","images","length","image","Suspense","fallback","Loader","fixContent","carouselData","detail","sm","user_data","profile_image","first_name","last_name","index","toLowerCase","replaceAll","animation","content","tabs","comment_count","tabId","handlePopup","approveRejectEvent","obvCommentCount","camera_data","obvId"],"sourceRoot":""}