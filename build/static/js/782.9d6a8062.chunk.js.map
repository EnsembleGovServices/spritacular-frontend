{"version":3,"file":"static/js/782.9d6a8062.chunk.js","mappings":"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","sources":["components/Observation/ObservationDetails/NoComments.jsx","components/Observation/ObservationDetails/NotLoggedForComment.jsx","components/Observation/ObservationDetails/Comments.jsx"],"sourcesContent":["import '../../../assets/scss/component/no-comments.scss';\nimport Images from \"../../../static/images\";\n\nconst NoComments = () => {\n    return (\n        <div className=\"no-comments\">\n            <div className=\"no-com-content\">\n                <img className=\"img-fluid\" src={Images.commentImage} alt=\"noComments\"/>\n                <h4 className=\"title\">No comments yet</h4>\n                <p className=\"text\">Be the first to comment on this observation.</p>\n            </div>\n        </div>\n    )\n}\nexport default NoComments;","import '../../../assets/scss/component/not-logged-for-comment.scss';\nimport Images from \"../../../static/images\";\nimport React, {useState} from \"react\";\n\nimport LoginPopup from \"../../Popup/LoginPopup\";\nimport RegisterPopup from \"../../Popup/RegisterPopup\";\n\nconst NotLoggedForComment = () => {\n    const [isLoginModal, setIsLoginModal] = useState(false);\n    const [isRegisterModal, setIsRegisterModal] = useState(false);\n\n    const handleLoginModal = () => {\n        setIsLoginModal(!isLoginModal);\n        setIsRegisterModal(false);\n    };\n    const handleRegisterModal = () => {\n        setIsRegisterModal(!isRegisterModal);\n    };\n    return (\n        <>\n            <div className=\"not-logged-for-comment\">\n                <div className=\"nlfc-content\">\n                    <img className=\"img-fluid\" src={Images.notLoggedIn} alt=\"noComments\"/>\n                    <h6 className=\"title\">You need to be logged in for commenting on this observation</h6>\n                    <div className=\"mt-4 btn-wrap\">\n                        <button onClick={() => handleLoginModal()} type=\"button\"\n                                className=\"btn btn-outline-primary px-4 my-2\">Login\n                        </button>\n                        <button onClick={() => handleRegisterModal()} type=\"button\"\n                                className=\"btn btn-primary px-4 my-2 ms-3\">Register\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n            {isLoginModal &&\n                <LoginPopup\n                    open={isLoginModal}\n                    handleClose={handleLoginModal}\n                />\n            }\n\n            {isRegisterModal && (\n                <RegisterPopup\n                    open={isRegisterModal}\n                    handleClose={handleRegisterModal}\n                    handleLoginModal={handleLoginModal}\n                    modalClass=\"registerModal\"\n                />\n            )}\n        </>\n    )\n}\nexport default NotLoggedForComment;","import {useEffect, useRef, useState} from \"react\";\nimport {baseURL} from \"../../../helpers/url\";\nimport axios from \"../../../api/axios\";\nimport moment from \"moment\";\nimport useAuth from \"../../../hooks/useAuth\";\nimport {Button, FormGroup} from \"reactstrap\";\nimport \"../../../assets/scss/component/comments.scss\";\nimport {Icon} from '@iconify/react';\nimport useObservationsData from \"../../../hooks/useObservationsData\";\nimport Images from './../../../static/images';\nimport NoComments from \"./NoComments\";\nimport NotLoggedForComment from \"./NotLoggedForComment\";\n\nconst Comments = (props) => {\n    const {auth} = useAuth();\n    const {obvId} = props;\n    const [comments, setComments] = useState([]);\n    const [message, setMessage] = useState();\n    const [signal, setSignal] = useState(false);\n    const commentBox = useRef(null);\n    const {observationComments, setObservationComments} = useObservationsData();\n    const user = auth?.user?.id;\n    const isComment = observationComments?.comments?.length;\n\n    const getComments = async () => {\n        await axios.get(baseURL.api + '/observation/comment/' + obvId + '/')\n            .then((response) => {\n                setComments(response?.data);\n                setObservationComments((prev) => {\n                    return {\n                        ...prev,\n                        comments: response?.data?.data\n                    }\n                })\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    };\n\n    const sendComment = async (e) => {\n        e.preventDefault();\n        setSignal(false);\n        await axios.post(baseURL.api + '/observation/comment/' + obvId + '/', {text: message}, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${auth?.token?.access}`\n            }\n        })\n            .then((response) => {\n                setSignal(true);\n                commentBox.current.value = \"\";\n                setMessage(\"\")\n            })\n            .catch((error) => {\n                setSignal(true);\n            })\n    }\n\n    const handleCommentText = (e) => {\n        const value = e.target.value;\n        setMessage(value);\n    }\n\n    const showMessages = () => {\n        return observationComments?.comments?.filter(item => item?.is_active).map((item, index) => {\n            return (\n                <li key={index} className=\"d-flex align-items-center w-100\">\n                    <i className=\"profile-icon rounded-circle me-0\"><img\n                        src={item?.user_data?.profile_image ? item?.user_data?.profile_image : Images.DefaultProfile}\n                        width='100%' height='100%' alt=\"Profile\" className=\"rounded-circle\"/></i>\n                    <div className=\"commentor_details d-flex justify-content-between align-items-start\">\n                        <div className=\"comment-profile_details\">\n                            <h6 className=\"mb-1 text-truncate text-black\">{item?.user_data?.first_name} {item?.user_data?.last_name}</h6>\n                            <p className=\"mb-0 fw-normal\">{item?.text}</p>\n                        </div>\n                        <span className=\"comment-time fw-normal\">{moment(`${item?.created_on}`).format('DD-MMM')}</span>\n                    </div>\n                </li>\n            )\n        })\n    }\n\n    useEffect(() => {\n        if (user) {\n            commentBox.current.focus = true;\n            getComments().then(r => r);\n        }\n    }, [signal])\n\n    useEffect(() => {\n        setObservationComments((prev) => {\n            return {\n                ...prev,\n                comment_count: comments?.data ? comments?.data?.length : 0\n            }\n        })\n\n    }, [comments])\n\n    useEffect(() => {\n        getComments().then(r => r);\n    }, [])\n\n    return (\n        <>\n            <div className={`comment-wrapper position-relative ${!user ? 'non-logged' : ''}`}>\n                {!user &&\n                    <div className={`p-0 m-0 ${isComment ? 'hasComments' : 'hasNoComments'}`}>\n                        <NotLoggedForComment/>\n                    </div>\n                }\n\n                {isComment ? (\n                    <ul className=\"comment-area not-logged-list p-0 m-0\">\n                        {showMessages()}\n                    </ul>\n                ) : (\n                    (!isComment && user ? <ul className=\"comment-area p-0 m-0\"><NoComments/></ul> : '')\n                )}\n\n\n                {user &&\n                    <form onSubmit={sendComment}>\n                        <FormGroup\n                            className=\"typing-area d-flex justify-content-between align-items-center start-0 bottom-0\">\n                            <input\n                                className=\"form-control\"\n                                type=\"text\"\n                                name=\"text\"\n                                ref={commentBox}\n                                placeholder=\"Write here..\"\n                                onChange={(e) => handleCommentText(e)}\n                            />\n                            <Button disabled={message?.length === 0}\n                                    className=\"send-btn shadow-none border-0 position-absolute end-0 pe-3\"><Icon\n                                icon=\"bi:send\" color={message?.length === 0 ? '#ccc' : '#900'}/></Button>\n                        </FormGroup>\n                    </form>\n                }\n            </div>\n        </>\n    )\n}\n\nexport default Comments;"],"names":["className","src","Images","alt","useState","isLoginModal","setIsLoginModal","isRegisterModal","setIsRegisterModal","handleLoginModal","handleRegisterModal","onClick","type","LoginPopup","open","handleClose","RegisterPopup","modalClass","props","auth","useAuth","obvId","comments","setComments","message","setMessage","signal","setSignal","commentBox","useRef","useObservationsData","observationComments","setObservationComments","user","id","isComment","length","getComments","axios","baseURL","then","response","data","prev","catch","error","console","log","sendComment","e","preventDefault","text","headers","token","access","current","value","useEffect","focus","r","comment_count","filter","item","is_active","map","index","user_data","profile_image","width","height","first_name","last_name","moment","created_on","format","showMessages","onSubmit","name","ref","placeholder","onChange","target","handleCommentText","disabled","icon","color"],"sourceRoot":""}