{"version":3,"file":"static/js/286.ca83e82e.chunk.js","mappings":"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","sources":["components/Auth/Login.jsx","hooks/useObservationsData.js","pages/Auth/LoginPage.jsx"],"sourcesContent":["import {Button, Form, FormGroup, FormText, Input} from \"reactstrap\";\nimport axios from \"../../api/axios\";\nimport {baseURL} from \"../../helpers/url\";\nimport {useEffect, useState} from \"react\";\nimport useAuth from \"../../hooks/useAuth\";\nimport {useLocation, useNavigate} from \"react-router-dom\";\nimport {routeUrls} from '../../helpers/url';\nimport useObservationsData from \"../../hooks/useObservationsData\";\n\nconst Login = (props) => {\n    const {cp} = props;\n    const {setAuth, persist, setPersist} = useAuth();\n    const navigate = useNavigate();\n    const location = useLocation();\n    const from = location.state?.from?.pathname || routeUrls.home;\n    const {categoryList, setCategoryList} = useObservationsData();\n\n    const [user, setUser] = useState({\n        email: \"\",\n        password: \"\"\n    });\n    const [error, setError] = useState('');\n\n    const handleInput = (e) => {\n        e.preventDefault();\n        let name = e.target.name,\n            value = e.target.value;\n        setUser({\n            ...user,\n            [name]: value\n        })\n    }\n\n    const handleLogin = async (e) => {\n        e.preventDefault();\n        await axios.post(baseURL.token, user)\n            .then((response) => {\n                let superuser = response?.data?.is_superuser,\n                    user = response?.data?.is_user;\n                setPersist(prev => !prev);\n                setError('');\n                setAuth({\n                    token: {\n                        access: response?.data?.access,\n                        refresh: response?.data?.refresh,\n                    },\n                    user: response?.data\n                })\n                fetchCategory(response?.data?.access).then(r => r);\n                if (superuser) {\n                    navigate(`/${routeUrls.dashboard}`, {replace: true});\n                } else if (user) {\n                    navigate(`/${routeUrls.home}`, {replace: true});\n                }\n\n                // toast.success('Logged in successfully', toastConfig());\n                localStorage.setItem('refresh', response?.data?.refresh);\n                localStorage.removeItem('camera');\n            })\n            .catch((error) => {\n                if (!error?.response) {\n                    console.log(error?.message)\n                    setError(prev => {\n                        return {\n                            ...prev,\n                            server: error?.message\n                        }\n                    });\n                } else if (error?.response) {\n                    setError({\n                        'status': error.response.status,\n                        'message': error.response.statusText,\n                        'data': error.response.data\n                    });\n                } else if (error?.response?.status === 401) {\n                    console.log('unauthorized')\n                } else {\n                    console.log(error?.response?.statusText)\n                }\n            })\n    }\n\n    const fetchCategory = async (token) => {\n        await axios.get(baseURL.api + '/observation/get_category_list/', {\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        })\n            .then((response) => {\n                setAuth(prev => {\n                    return {\n                        ...prev,\n                        categoryList: response?.data\n                    }\n                });\n            })\n            .catch((error) => {\n                console.log(error)\n            })\n    }\n\n    useEffect(() => {\n        localStorage.setItem(\"persist\", persist);\n    }, [persist])\n\n    return (\n        <>\n            {error?.data &&\n                <p className=\"text-danger small mb-4 fw-bolder\">{error?.data?.detail}</p>\n            }\n            {error?.server &&\n                <p className=\"text-danger text-center small mb-4 fw-bolder\">{error?.server}</p>\n            }\n            <Form onSubmit={handleLogin}>\n                <FormGroup>\n                    <Input\n                        type=\"email\"\n                        name=\"email\"\n                        placeholder=\"Email address\"\n                        autoComplete=\"off\"\n                        required\n                        onChange={(e) => handleInput(e)}\n                    />\n                </FormGroup>\n                <FormGroup>\n                    <Input\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        required\n                        onChange={(e) => handleInput(e)}\n                    />\n                </FormGroup>\n                <FormText className=\"forgot-password\">\n                    <Button type=\"button\" onClick={() => cp()}>Forgot Password?</Button>\n                </FormText>\n                <FormGroup>\n                    <Button type=\"submit\" className=\"modal-btn\" disabled={!(user?.email && user?.password)}>\n                        Login\n                    </Button>\n                </FormGroup>\n            </Form>\n        </>\n    )\n}\nexport default Login;","import {useContext, useDebugValue} from \"react\";\nimport {observationViewContext} from \"../layouts/PersistLogin\";\n\nconst useObservationsData = () => {\n    const { observationListData } = useContext(observationViewContext);\n    useDebugValue(observationListData, observationListData => observationListData ? 'List data set' : \"Listing data not set\")\n    return useContext(observationViewContext);\n}\n\nexport default useObservationsData;","import Login from \"../../components/Auth/Login\";\nimport { Container } from \"reactstrap\";\nimport useAuth from \"../../hooks/useAuth\";\nimport { Navigate, useLocation } from \"react-router-dom\";\nimport \"../../assets/scss/component/modal.scss\";\nimport { routeUrls } from './../../helpers/url';\n\nconst LoginPage = () => {\n  const { auth, persist } = useAuth();\n  const location = useLocation();\n\n  if (auth && persist) {\n    return <Navigate to={routeUrls.home} state={{ from: location }} replace />;\n  }\n  return (\n    <section className=\"min-vh-100 d-flex align-items-center justify-content-center\">\n      <Container>\n        <div className=\"common-modal modal-content-page\">\n          <div className=\"modal-content \">\n            <div className=\"modal-body\">\n              <Login />\n            </div>\n          </div>\n        </div>\n      </Container>\n    </section>\n  );\n};\nexport default LoginPage;\n"],"names":["props","cp","useAuth","setAuth","persist","setPersist","navigate","useNavigate","useLocation","state","from","pathname","routeUrls","useObservationsData","categoryList","setCategoryList","useState","email","password","user","setUser","error","setError","handleInput","e","preventDefault","name","target","value","handleLogin","axios","baseURL","then","response","superuser","data","is_superuser","is_user","prev","token","access","refresh","fetchCategory","r","replace","localStorage","setItem","removeItem","catch","status","statusText","console","log","message","server","headers","useEffect","className","detail","onSubmit","type","placeholder","autoComplete","required","onChange","onClick","disabled","observationListData","useContext","observationViewContext","useDebugValue","auth","location","to"],"sourceRoot":""}