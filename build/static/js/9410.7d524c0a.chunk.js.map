{"version":3,"file":"static/js/9410.7d524c0a.chunk.js","mappings":"gLAsEA,IAlEsB,SAACA,GACnB,IACIC,EASAD,EATAC,SACAC,EAQAF,EARAE,YACAC,EAOAH,EAPAG,SACAC,EAMAJ,EANAI,kBACAC,EAKAL,EALAK,MACAC,EAIAN,EAJAM,MACAC,EAGAP,EAHAO,aACAC,EAEAR,EAFAQ,iBACAC,EACAT,EADAS,WAEJ,OACI,iBAAKC,UAAU,oBAAf,WACI,iBACIA,UAAS,+BAA0BJ,EAAQ,wBAA0B,GAA5D,YAAkEG,EAAa,kBAAoB,IADhH,WAEI,gBAAKC,UAAU,kBAAf,UACI,UAAC,KAAD,YACI,SAAC,KAAD,CAAOC,QAAQ,aAAf,UACI,iBAAKD,UAAU,cAAf,WACI,SAAC,KAAD,CAAME,KAAK,eAAeC,MAAM,UAAUC,MAAM,KAAKC,OAAO,QAC5D,uBAAIP,EAAmB,gCAAkC,4CACxDP,IAAY,iBAAMS,UAAU,aAAhB,kCACZR,IACG,yBACI,iFAShB,SAAC,KAAD,CACIc,KAAK,OACLC,KAAK,OACLC,GAAG,aACHC,OAAO,mCACPhB,SAAUA,EACViB,SAAU,SAACC,GAAD,OAAOjB,EAAkBiB,YAIzC,OAALhB,QAAK,IAALA,OAAA,EAAAA,EAAOiB,SACJ,kBAAMZ,UAAU,gDAAhB,iBAAiEL,QAAjE,IAAiEA,OAAjE,EAAiEA,EAAOiB,MAAxE,QAEE,OAALjB,QAAK,IAALA,OAAA,EAAAA,EAAOkB,QACJ,iBAAMb,UAAU,gDAAhB,gBAAiEL,QAAjE,IAAiEA,OAAjE,EAAiEA,EAAOkB,QAEtE,OAALlB,QAAK,IAALA,OAAA,EAAAA,EAAOmB,aACJ,iBAAMd,UAAU,8CAAhB,gBAA+DL,QAA/D,IAA+DA,OAA/D,EAA+DA,EAAOmB,eAG7EhB,IACG,gBAAKE,UAAS,UAAKF,EAAmB,cAAgB,IAAtD,UACI,oBAAQiB,QAAS,SAACJ,GAAD,OAAOd,EAAac,IAC7BX,UAAS,oBADjB,WAEI,SAAC,KAAD,CAAME,KAAK,2BAA2BE,MAAM,KAAKC,OAAO,OAF5D,+B,8ICRpB,UA3CkC,SAACf,GAC/B,IAAOsB,EAAStB,EAATsB,MACDI,GAAWC,EAAAA,EAAAA,MACjB,GAAwEC,EAAAA,EAAAA,KAAjEC,EAAP,EAAOA,qBAAsBC,EAA7B,EAA6BA,oBAAqBC,EAAlD,EAAkDA,mBAClD,GAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAwBA,OAfAC,EAAAA,EAAAA,YAAU,WACNL,EAAoB,CAChBM,MAAO,EACPC,OAAQ,EACRC,KAAM,CACFC,QAAQ,EACRrB,IAAI,KAIZW,EAAqB,IACrBE,EAAmB,QACpB,CAACE,EAAWF,EAAoBF,EAAsBC,IAIpC,KAAZ,OAALR,QAAK,IAALA,OAAA,EAAAA,EAAOc,QACH,oBACI1B,UAAU,aADd,UAEI,SAAC,KAAD,WACI,SAAC,IAAD,CACIH,aA5BC,SAACc,GAGlB,OAFAA,EAAEmB,iBACFN,GAAa,GACNR,EAAS,IAAMe,EAAAA,GAAAA,kBA0BNjC,kBAAkB,QAI7B,K","sources":["components/Shared/UploadImageUI.jsx","pages/InitialUploadObservations.jsx"],"sourcesContent":["import \"../../assets/scss/component/initialUploadobservations.scss\";\r\nimport {FormGroup, Input, Label} from \"reactstrap\";\r\nimport {Icon} from \"@iconify/react/dist/iconify\";\r\n\r\nconst UploadImageUI = (props) => {\r\n    const {\r\n        maxLimit,\r\n        imageFormat,\r\n        multiple,\r\n        handleUploadImage,\r\n        error,\r\n        small,\r\n        handleObvAdd,\r\n        defaultUploadBox,\r\n        blogUpload\r\n    } = props;\r\n    return (\r\n        <div className=\"position-relative\">\r\n            <div\r\n                className={`upload-image_wrapper ${small ? \"small-upload_box mb-5\" : ''} ${blogUpload ? 'blog-upload-box' : ''}`}>\r\n                <div className=\"upload-ob-inner\">\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"UploadFile\">\r\n                            <div className=\"upload-info\">\r\n                                <Icon icon=\"bx:image-alt\" color=\"#737e96\" width=\"42\" height=\"42\"/>\r\n                                <p>{defaultUploadBox ? 'Upload your first observation' : 'Drag and drop images or click to upload'}</p>\r\n                                {maxLimit && <span className=\"text-black\">Max. Image Size: 5MB</span>}\r\n                                {imageFormat &&\r\n                                    <ul>\r\n                                        <li>\r\n                                            Common Image File Formats (JPEG or\r\n                                            JPG, PNG)\r\n                                        </li>\r\n                                    </ul>\r\n                                }\r\n\r\n                            </div>\r\n                        </Label>\r\n                        <Input\r\n                            type=\"file\"\r\n                            name=\"file\"\r\n                            id=\"UploadFile\"\r\n                            accept=\"image/jpg, image/jpeg, image/png\"\r\n                            multiple={multiple}\r\n                            onChange={(e) => handleUploadImage(e)}\r\n                        />\r\n                    </FormGroup>\r\n                </div>\r\n                {error?.count &&\r\n                    <span className=\"text-danger d-block small my-1 d-inline-block\">{error?.count} </span>\r\n                }\r\n                {error?.size &&\r\n                    <span className=\"text-danger d-block small my-1 d-inline-block\">{error?.size}</span>\r\n                }\r\n                {error?.duplicate &&\r\n                    <span className=\"text-info d-block small my-1 d-inline-block\">{error?.duplicate}</span>\r\n                }\r\n            </div>\r\n            {defaultUploadBox &&\r\n                <div className={`${defaultUploadBox ? 'mark-center' : ''}`}>\r\n                    <button onClick={(e) => handleObvAdd(e)}\r\n                            className={`btn btn-secondary`}>\r\n                        <Icon icon=\"heroicons-outline:upload\" width=\"25\" height=\"22\"/>\r\n                        Upload Observation\r\n                    </button>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default UploadImageUI;","import \"../assets/scss/component/initialUploadobservations.scss\";\r\nimport {Container, Form, FormGroup, Label} from \"reactstrap\";\r\nimport {Icon} from \"@iconify/react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {routeUrls} from '../helpers/url';\r\nimport useObservations from \"../hooks/useObservations\";\r\nimport {useEffect, useState} from \"react\";\r\nimport UploadImageUI from \"../components/Shared/UploadImageUI\";\r\n\r\nconst InitialUploadObservations = (props) => {\r\n    const {count} = props;\r\n    const navigate = useNavigate();\r\n    const {setObservationImages, setObservationSteps, setObservationData} = useObservations();\r\n    const [isCleanUp, setIsCleanUp] = useState(false);\r\n\r\n    const handleObvAdd = (e) => {\r\n        e.preventDefault();\r\n        setIsCleanUp(true);\r\n        return navigate('/' + routeUrls.observationsAdd);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setObservationSteps({\r\n            total: 3,\r\n            active: 1,\r\n            mode: {\r\n                update: true,\r\n                id: false\r\n            },\r\n\r\n        })\r\n        setObservationImages([])\r\n        setObservationData(null)\r\n    }, [isCleanUp, setObservationData, setObservationImages, setObservationSteps])\r\n\r\n\r\n    return (\r\n        count?.total === 0 ? (\r\n            <section\r\n                className=\"center_box\">\r\n                <Container>\r\n                    <UploadImageUI\r\n                        handleObvAdd={handleObvAdd}\r\n                        defaultUploadBox={true}\r\n                    />\r\n                </Container>\r\n            </section>\r\n        ) : ('')\r\n    );\r\n};\r\n\r\nexport default InitialUploadObservations;\r\n"],"names":["props","maxLimit","imageFormat","multiple","handleUploadImage","error","small","handleObvAdd","defaultUploadBox","blogUpload","className","htmlFor","icon","color","width","height","type","name","id","accept","onChange","e","count","size","duplicate","onClick","navigate","useNavigate","useObservations","setObservationImages","setObservationSteps","setObservationData","useState","isCleanUp","setIsCleanUp","useEffect","total","active","mode","update","preventDefault","routeUrls"],"sourceRoot":""}