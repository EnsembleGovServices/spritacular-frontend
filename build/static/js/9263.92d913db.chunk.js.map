{"version":3,"file":"static/js/9263.92d913db.chunk.js","mappings":"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","sources":["hooks/useObservations.js","pages/Observation/Observations.jsx","pages/Profile.jsx"],"sourcesContent":["import {useContext, useDebugValue} from \"react\";\r\nimport {ObservationContext} from \"../pages/Observation/Observations\";\r\n\r\nconst useObservations = () => {\r\n    const { observationImages } = useContext(ObservationContext);\r\n    // useDebugValue(observationSteps, observationSteps => observationSteps ? 'Steps set' : \"Steps not set\")\r\n    useDebugValue(observationImages, observationImages => observationImages?.data ? 'Images set' : \"Images not set\")\r\n    return useContext(ObservationContext);\r\n}\r\n\r\nexport default useObservations;","import { Outlet } from \"react-router-dom\";\r\nimport {createContext, useEffect, useState} from \"react\";\r\nimport { cameraSettingFields } from \"../../helpers/url\";\r\n\r\nexport const ObservationContext = createContext({});\r\n\r\nconst Observations = () => {\r\n    const [observationType, setObservationType] = useState({\r\n        image_type: 1\r\n    });\r\n\r\n    const [observationSteps, setObservationSteps] = useState({\r\n        total: 3,\r\n        active: 1,\r\n        mode: {\r\n            update: false\r\n        }\r\n    });\r\n    const [observationImages, setObservationImages] = useState([]);\r\n    const [cameraDetails, setCameraDetails] = useState(cameraSettingFields);\r\n    const [observationCategory, setObservationCategory] = useState([]);\r\n    const [observationData, setObservationData] = useState({});\r\n\r\n    useEffect(()=> {\r\n        let data = (observationImages?.data) ? [...observationImages?.data] : []\r\n        setObservationData({\r\n            // is_draft: observationSteps?.is_draft ? 1 : 0,\r\n            image_type: observationType?.image_type,\r\n            map_data: data,\r\n            elevation_angle: null,\r\n            video_url : ''\r\n        })\r\n    }, [observationImages?.data, observationSteps?.is_draft, observationType?.image_type])\r\n\r\n    return(\r\n        <ObservationContext.Provider value={\r\n            {\r\n                observationType,\r\n                setObservationType,\r\n                observationSteps,\r\n                setObservationSteps,\r\n                observationImages,\r\n                setObservationImages,\r\n                observationCategory,\r\n                setObservationCategory,\r\n                observationData,\r\n                setObservationData,\r\n                cameraDetails, \r\n                setCameraDetails\r\n            }\r\n        }>\r\n            <Outlet />\r\n        </ObservationContext.Provider>\r\n    )\r\n}\r\n\r\nexport default Observations;","import {\r\n  Container,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport {Suspense, lazy, useEffect} from 'react';\r\nimport classnames from \"classnames\";\r\nimport {useState} from \"react\";\r\nimport useAuth from \"../hooks/useAuth\";\r\nimport \"../assets/scss/component/camerasettings.scss\";\r\nimport ImageUpload from \"../components/Upload/ImageUpload\";\r\nimport {cameraSettingFields} from \"../helpers/url\";\r\nimport ReactCountryFlags from \"../components/ReactCountryFlag\";\r\nimport useObservations from \"../hooks/useObservations\";\r\n\r\nconst UpdateProfile = lazy(()=> import('../components/Account/UpdateProfile'))\r\nconst CameraSetting = lazy(()=> import('../components/Account/CameraSetting'))\r\nconst ChangePassword = lazy(()=> import('../components/Account/ChangePassword'))\r\n\r\n\r\nconst Profile = () => {\r\n  const { auth } = useAuth();\r\n  const [user, setUser] = useState(auth?.user);\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n  // const [cameraDetails, setCameraDetails] = useState(cameraSettingFields);\r\n  const {\r\n    cameraDetails, \r\n    setCameraDetails\r\n} = useObservations();\r\n  const [isDetailExist, setIsDetailExist] = useState(false);\r\n\r\n  const toggleTab = (tab) => {\r\n    if (activeTab !== tab) {\r\n      if(tab === '2'){\r\n        fetchCameraDetails().then(r => r);\r\n      }\r\n      setActiveTab(tab);\r\n    }\r\n  };\r\n  const fetchCameraDetails = async () => {\r\n    if (auth?.user?.camera) {\r\n      setIsDetailExist(true);\r\n      setCameraDetails(auth?.user?.camera);\r\n    } else {\r\n      setIsDetailExist(false);\r\n    }\r\n  }\r\n  \r\n\r\n\r\n  useEffect(()=> {\r\n    setUser(auth?.user);\r\n    if (auth?.user?.camera) {\r\n      setIsDetailExist(true);\r\n    }\r\n  }, [auth])\r\n\r\n  return (\r\n    <>\r\n      <section className=\"common-banner\">\r\n        <Container>\r\n          <div className=\"banner-inner\" />\r\n        </Container>\r\n      </section>\r\n      <section className=\"setting-main\">\r\n        <div className=\"setting-inner\">\r\n          <Container>\r\n            <Row>\r\n              <Col md={4}>\r\n                <div className=\"profile-left-tab\">\r\n                  <div className=\"profile-info\">\r\n                    <div className=\"profile-img\">\r\n                      <ImageUpload user={user} token={auth?.token?.access}/>\r\n                    </div>\r\n                    <div className=\"profile-data text-center\">\r\n                      <h5>{user?.first_name} {user?.last_name}</h5>\r\n                      <p>{user?.email}</p>\r\n                      <div className=\"d-flex align-items-center justify-content-center\">\r\n                        <ReactCountryFlags country={user?.country_code} />\r\n                        <span>{user?.location}</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <Nav tabs className=\"flex-column\">\r\n                    <NavItem>\r\n                      <NavLink\r\n                        className={classnames({ active: activeTab === \"1\" })}\r\n                        onClick={() => {\r\n                          toggleTab(\"1\");\r\n                        }}\r\n                      >\r\n                        Update Profile\r\n                      </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                      <NavLink\r\n                        className={classnames({ active: activeTab === \"2\" })}\r\n                        onClick={() => {\r\n                          toggleTab(\"2\");\r\n                        }}\r\n                      >\r\n                        Camera Settings\r\n                      </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                      <NavLink\r\n                        className={classnames({ active: activeTab === \"3\" })}\r\n                        onClick={() => {\r\n                          toggleTab(\"3\");\r\n                        }}\r\n                      >\r\n                        Change Password\r\n                      </NavLink>\r\n                    </NavItem>\r\n                  </Nav>\r\n                </div>\r\n              </Col>\r\n              <Col md={8}>\r\n                <div className=\"profile-right-tab\">\r\n                  <TabContent activeTab={activeTab}>\r\n                    <TabPane tabId=\"1\">\r\n                      <Row>\r\n                        <Col sm=\"12\">\r\n                          <h4>Update Profile</h4>\r\n                        </Col>\r\n\r\n                        <Col md=\"12\">\r\n                          <Suspense fallback={<div>Loading...</div>}>\r\n                            <UpdateProfile user={auth} />\r\n                          </Suspense>\r\n                        </Col>\r\n                      </Row>\r\n                    </TabPane>\r\n                    <TabPane tabId=\"2\">\r\n                      <Row>\r\n                        <Col sm=\"12\">\r\n                          <h4>Camera Settings</h4>\r\n                        </Col>\r\n                        <Col md=\"12\">\r\n                          <Suspense fallback={<div>Loading...</div>}>\r\n                            <CameraSetting cameraDetails={cameraDetails} user={auth} isDetailExist={isDetailExist}/>\r\n                          </Suspense>\r\n                        </Col>\r\n                      </Row>\r\n                     \r\n                    </TabPane>\r\n                    <TabPane tabId=\"3\">\r\n                      <Row>\r\n                        <Col sm=\"12\">\r\n                          <h4>Change Password</h4>\r\n                        </Col>\r\n                        <Col md=\"12\">\r\n                          <Suspense fallback={<div>Loading...</div>}>\r\n                            <ChangePassword user={auth} />\r\n                          </Suspense>\r\n                        </Col>\r\n                      </Row>\r\n                    </TabPane>\r\n                  </TabContent>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nexport default Profile;\r\n"],"names":["observationImages","useContext","ObservationContext","useDebugValue","data","createContext","useState","image_type","observationType","setObservationType","total","active","mode","update","observationSteps","setObservationSteps","setObservationImages","cameraSettingFields","cameraDetails","setCameraDetails","observationCategory","setObservationCategory","observationData","setObservationData","useEffect","map_data","elevation_angle","video_url","is_draft","Provider","value","UpdateProfile","lazy","CameraSetting","ChangePassword","auth","useAuth","user","setUser","activeTab","setActiveTab","useObservations","isDetailExist","setIsDetailExist","toggleTab","tab","fetchCameraDetails","then","r","camera","className","md","ImageUpload","token","access","first_name","last_name","email","ReactCountryFlag","country","country_code","location","tabs","classnames","onClick","tabId","sm","Suspense","fallback"],"sourceRoot":""}