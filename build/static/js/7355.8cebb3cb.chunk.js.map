{"version":3,"file":"static/js/7355.8cebb3cb.chunk.js","mappings":"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","sources":["components/ReactCountryFlag.jsx","components/Shared/EquipmentForm.jsx","components/Shared/UploadImageUI.jsx","components/Upload/LazyLoad.js","helpers/observation.js","hooks/useObservations.js","config.jsx","components/MapWrapper.jsx","components/Observation/ObservationCategory.jsx","components/Observation/ObservationLocation.jsx","components/Observation/ObservationUpdateUploadedImages.jsx","components/Observation/ObservationUploadedImg.jsx","components/Observation/ObservationUploadImg.jsx","components/Observation/ObservationImages.jsx","components/Observation/ObservationProgress.jsx","components/Observation/ImagePreview.jsx","components/Popup/DeleteItemConfirmationPopup.jsx","components/Observation/ObservationAfterImageUpload.jsx","components/Observation/EquipmentDetailsForm.jsx","pages/Observation/AddObservation.jsx","pages/Observation/Observations.jsx"],"sourcesContent":["import ReactCountryFlag from \"react-country-flag\";\nconst ReactCountryFlags = ({country}) => {\n    return(\n\n        <ReactCountryFlag\n            countryCode={country}\n            svg\n            style={{\n                width: '1.5em',\n                height: '1.5em',\n            }}\n            title={country}\n        />\n    );\n}\nexport default ReactCountryFlags;","import {FormGroup, Input, Col} from \"reactstrap\";\n\nconst EquipmentForm = (props) => {\n    const {handleInput1, updateSetting, error} = props;\n    return(\n        <>\n         <Col md=\"12\">\n            <FormGroup>\n                <label>Camera Type<span className=\"required\">Required</span></label>\n                <Input  \n                type=\"text\"\n                name=\"camera_type\"\n                placeholder=\"Canon\"\n                // required\n                value={updateSetting?.camera_type} \n                onChange={(e)=>handleInput1(e)} />\n                <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b>Canon</span>\n                {error?.data?.camera_type &&\n                    <span className=\"text-danger small\">{error?.data?.camera_type}</span>\n                }\n            </FormGroup>\n            <div className=\"border-line\" />\n            </Col>\n            <Col md=\"12\">\n            <FormGroup>\n                <h6>Lens Information</h6>\n            </FormGroup>\n            </Col>\n            <Col md=\"6\">\n            <FormGroup>\n                <label>Focal Length<span className=\"required\">Required</span></label>\n                <Input\n                type=\"text\"\n                maxLength={10}\n                name=\"focal_length\"\n                value={updateSetting?.focal_length}\n                placeholder=\"35 mm\"\n                // required\n                onChange={(e)=>handleInput1(e)}\n                />\n                <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b>35 mm</span>\n                {error?.data?.focal_length &&\n                    <span className=\"text-danger small\">{error?.data?.focal_length}</span>\n                }\n            </FormGroup>\n            </Col>\n            <Col md=\"6\">\n            <FormGroup>\n                <label>Aperture<span className=\"required\">Required</span></label>\n                <Input\n                type=\"number\"\n                name=\"aperture\"\n                // required\n                value={updateSetting?.aperture ? updateSetting?.aperture : updateSetting?.aperture === null ?? ''}\n                placeholder=\"1.4\"\n                onChange={(e)=>handleInput1(e)}\n                />\n                <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b>1.4</span>\n                {error?.data?.aperture &&\n                    <span className=\"text-danger small\">{error?.data?.aperture}</span>\n                }\n            </FormGroup>\n            </Col>\n            <Col md=\"12\">\n            <div className=\"border-line\" />\n            <FormGroup>\n                <h6>Camera Settings</h6>\n            </FormGroup>\n            </Col>\n            <Col md=\"6\">\n            <FormGroup>\n                <label>ISO</label>\n                <Input\n                type=\"number\"\n                name=\"iso\"\n                value={updateSetting?.iso}\n                placeholder=\"100\"\n                onChange={(e)=>handleInput1(e)}\n                />\n                <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b>100</span>\n            </FormGroup>\n            </Col>\n            <Col md=\"6\">\n            <FormGroup>\n                <label>Shutter Speed (exposure time)</label>\n                <Input\n                type=\"text\"\n                name=\"shutter_speed\"\n                value={updateSetting?.shutter_speed}\n                placeholder=\"1/15\"\n                maxLength={10}\n                onChange={(e)=>handleInput1(e)}\n                />\n                <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b>1/15</span>\n            </FormGroup>\n            </Col>\n            <Col md=\"6\">\n            <FormGroup>\n                <label>Frame Rate (frames per second)</label>\n                <Input type=\"number\" name=\"fps\" value={updateSetting?.fps} placeholder=\"24\" onChange={(e)=>handleInput1(e)}/>\n            </FormGroup>\n            </Col>\n            <Col md=\"12\">\n            <div className=\"border-line\"/>\n            <FormGroup>\n                <h6>How do you generally keep track of time?</h6>\n                <Input\n                type=\"text\"\n                name=\"question_field_one\"\n                value={updateSetting?.question_field_one}\n                placeholder=\"Camera Time\"\n                onChange={(e)=>handleInput1(e)}\n                />\n                <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b>Camera Time</span>\n            </FormGroup>\n            </Col>\n            <Col md=\"12\">\n            <div className=\"border-line\"/>\n            <FormGroup>\n                <h6>\n                Do you use any special equipment attached to\n                your camera (such as a filter)?\n                </h6>\n                <Input\n                type=\"text\"\n                name=\"question_field_two\"\n                value={updateSetting?.question_field_two}\n                placeholder=\"Polarizing Filter\"\n                onChange={(e)=>handleInput1(e)}\n                />\n                <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b>Polarizing Filter</span>\n            </FormGroup>\n            </Col>\n            </>\n    )\n}\nexport default EquipmentForm;","import \"../../assets/scss/component/initialUploadobservations.scss\";\nimport {FormGroup, Input, Label} from \"reactstrap\";\nimport {Icon} from \"@iconify/react/dist/iconify\";\n\nconst UploadImageUI = (props) => {\n    const {\n        maxLimit,\n        imageFormat,\n        multiple,\n        handleUploadImage,\n        error,\n        small,\n        handleObvAdd,\n        defaultUploadBox,\n        blogUpload\n    } = props;\n    return (\n        <div className=\"position-relative\">\n            <div\n                className={`upload-image_wrapper ${small ? \"small-upload_box mb-5\" : ''} ${blogUpload ? 'blog-upload-box' : ''}`}>\n                <div className=\"upload-ob-inner\">\n                    <FormGroup>\n                        <Label htmlFor=\"UploadFile\">\n                            <div className=\"upload-info\">\n                                <Icon icon=\"bx:image-alt\" color=\"#737e96\" width=\"42\" height=\"42\"/>\n                                <p>{defaultUploadBox ? 'Upload your first observation' : 'Drag and drop images or click to upload'}</p>\n                                {maxLimit && <span className=\"text-black\">Max. Image Size: 5MB</span>}\n                                {imageFormat &&\n                                    <ul>\n                                        <li>\n                                            Common Image File Formats (JPEG or\n                                            JPG, PNG)\n                                        </li>\n                                    </ul>\n                                }\n\n                            </div>\n                        </Label>\n                        <Input\n                            type=\"file\"\n                            name=\"file\"\n                            id=\"UploadFile\"\n                            accept=\"image/jpg, image/jpeg, image/png\"\n                            multiple={multiple}\n                            onChange={(e) => handleUploadImage(e)}\n                        />\n                    </FormGroup>\n                </div>\n                {error?.count &&\n                    <span className=\"text-danger d-block small my-1 d-inline-block\">{error?.count} </span>\n                }\n                {error?.size &&\n                    <span className=\"text-danger d-block small my-1 d-inline-block\">{error?.size}</span>\n                }\n                {error?.duplicate &&\n                    <span className=\"text-info d-block small my-1 d-inline-block\">{error?.duplicate}</span>\n                }\n            </div>\n            {defaultUploadBox &&\n                <div className={`${defaultUploadBox ? 'mark-center' : ''}`}>\n                    <button onClick={(e) => handleObvAdd(e)}\n                            className={`btn btn-secondary`}>\n                        <Icon icon=\"heroicons-outline:upload\" width=\"25\" height=\"22\"/>\n                        Upload Observation\n                    </button>\n                </div>\n            }\n        </div>\n    )\n}\nexport default UploadImageUI;","import {useEffect, useState} from \"react\";\nimport {placeholder} from \"./placeholder\";\n\nconst LazyLoad = (props) => {\n    const {src, alt, imageClass, converted} = props;\n    const [imageSrc, setImageSrc] = useState(null)\n    const [imageRef, setImageRef] = useState('')\n\n    const onLoad = (event) => {\n        event.target.classList.add('loaded')\n    }\n    const onError = (event) => {\n        event.target.classList.add('has-error')\n    }\n\n    useEffect(() => {\n        let observer\n        let didCancel = false\n\n        if (imageRef && imageSrc !== src) {\n            if (IntersectionObserver) {\n                observer = new IntersectionObserver(\n                    (entries) => {\n                        entries.forEach((entry) => {\n                            if (\n                                !didCancel &&\n                                (entry.intersectionRatio > 0 || entry.isIntersecting)\n                            ) {\n                                setImageSrc(src)\n                                observer.unobserve(imageRef)\n                            }\n                        })\n                    },\n                    {\n                        threshold: 0.01,\n                        rootMargin: '75%',\n                    }\n                )\n                observer.observe(imageRef)\n            } else {\n                setImageSrc(src)\n            }\n        }\n        return () => {\n            didCancel = true\n            if (observer && observer.unobserve) {\n                observer.unobserve(imageRef)\n            }\n        }\n    }, [src, imageSrc, imageRef, converted])\n\n    return (\n        <>\n            <img\n                className={imageClass ? imageClass + ' img-fluid' : 'img-fluid'}\n                ref={setImageRef}\n                src={imageSrc}\n                alt={alt}\n                onLoad={onLoad}\n                onError={onError}\n            />\n        </>\n    )\n}\n\nexport default LazyLoad;","export const Tabs = {\n    ObservationImages : \"ObservationImages\",\n    DateTimeLocation : \"DateTimeLocation\",\n    EquipmentDetails : \"EquipmentDetails\",\n}\n\nexport const MultiImageTabs = {\n    MultipleImages: \"MultipleImages\",\n    ImageSequence: \"ImageSequence\"\n}\n\nexport const imageDetails = {\n    Details : \"Details\",\n    Equipment : \"Equipment\",\n    Comments : \"Comments\",\n}\n\nexport const obvType = {\n    default: \"verified\",\n    verified : \"verified\",\n    unverified: \"unverified\",\n    denied: \"denied\",\n    draft: \"draft\"\n}\n\nexport const masonryConfig = (selector, width, gutter, fit=false, transition) => {\n    return {\n        columnWidth: width,\n        gutter: gutter,\n        itemSelector: selector,\n        fitWidth: false,\n        transitionDuration: transition,\n    }\n}\n\nexport const uploadImageDefaultState = (random, baseImage, item, userLocation) => {\n    return {\n        id : random,\n        sameAsFirstMap: false,\n        sameAsFirstDate: false,\n        image : baseImage,\n        lastModified: item?.lastModified,\n        name: item?.name,\n        item: item,\n        latitude: userLocation ? userLocation.latitude : 28.5204,\n        longitude: userLocation ? userLocation.longitude : 25.8567,\n        location: 'Pune, Maharashtra, India',\n        country_code: 'IN',\n        obs_date: null,\n        obs_time: null,\n        timezone: 'Africa/Abidjan',\n        azimuth: 360,\n        time_accuracy:'',\n        is_precise_azimuth:0,\n        category_map: {\n            category: [],\n            is_other: false,\n            other_value: ''\n        }\n    }\n}\n\nexport const directionValue = [\n    {name: 'N', angle: 360, default : true},\n    {name: 'NE', angle: 45, default : false},\n    {name: 'E', angle: 90, default : false},\n    {name: 'SE', angle: 135, default : false},\n    {name: 'S', angle: 180, default : false},\n    {name: 'SW', angle: 235, default : false},\n    {name: 'W', angle: 270, default : false},\n    {name: 'NW', angle: 315, default : false},\n]\n\nexport const getdirectionDegree = (key) => {\n    \n    let degree;\n    switch (key) {\n        case 'N':\n            degree = 360;\n            break;\n        case 'NE':\n            degree = 45;\n            break;\n        case 'E':\n            degree = 90;\n            break;\n        case 'SE':\n            degree = 135;\n            break;\n        case 'S':\n            degree = 180;\n            break;\n        case 'SW':\n            degree = 235;\n            break;\n        case 'W':\n            degree = 270;\n            break;\n        case 'NW':\n            degree = 315;\n            break;\n    \n        default:\n            degree = key;\n            break;\n    }\n    return degree\n}\n\nexport const getdirectionAngle = (key) => {\n    \n    let angle;\n    switch (key) {\n        case 360:\n            angle = 'N';\n            break;\n        case 45:\n            angle = 'NE';\n            break;\n        case 90:\n            angle = 'E';\n            break;\n        case 135:\n            angle = 'SE';\n            break;\n        case 180:\n            angle = 'S';\n            break;\n        case 235:\n            angle = 'SW';\n            break;\n        case 270:\n            angle = 'W';\n            break;\n        case 315:\n            angle = 'NW';\n            break;\n    \n        default:\n            angle = 'N';\n            break;\n    }\n    return angle\n}","import {useContext, useDebugValue} from \"react\";\nimport {ObservationContext} from \"../pages/Observation/Observations\";\n\nconst useObservations = () => {\n    const { observationImages } = useContext(ObservationContext);\n    // useDebugValue(observationSteps, observationSteps => observationSteps ? 'Steps set' : \"Steps not set\")\n    useDebugValue(observationImages, observationImages => observationImages?.data ? 'Images set' : \"Images not set\")\n    return useContext(ObservationContext);\n}\n\nexport default useObservations;","export const ReactVapIdKey = process.env.REACT_VAPID_KEY1\nexport const GoogleMapsAPI = process.env.REACT_APP_GOOGLE_MAP_KEY","/* eslint-disable no-undef */\n\nimport React, { Component } from 'react';\nimport { withGoogleMap, GoogleMap, InfoWindow, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport Autocomplete from 'react-google-autocomplete';\nimport { GoogleMapsAPI } from '../config';\nGeocode.setApiKey(GoogleMapsAPI);\n// Geocode.enableDebug();\n\nclass Map extends Component{\n\n\tconstructor( props ){\n\t\t\n\t\tsuper( props );\n\t\tthis.country = null;\n\t\tthis.address = null;\n\t\tthis.state = {\n\t\t\taddress: '',\n\t\t\tcity: '',\n\t\t\tarea: '',\n\t\t\tstate: '',\n\t\t\tcountryCode: '',\n\t\t\tshort_address: '',\n\t\t\tmapPosition: {\n\t\t\t\tlat: this.props.center.lat,\n\t\t\t\tlng: this.props.center.lng\n\t\t\t},\n\t\t\tmarkerPosition: {\n\t\t\t\tlat: this.props.center.lat,\n\t\t\t\tlng: this.props.center.lng\n\t\t\t}\n\t\t}\n\t}\n\t/**\n\t * Get the current address from the default map position and set those values in the state\n\t */\n\tcomponentDidMount() {\n\t\t\n\t\tGeocode.fromLatLng( this.state.mapPosition.lat , this.state.mapPosition.lng ).then(\n\t\t\tresponse => {\n\t\t\t\tconst address = response.results[0].formatted_address,\n\t\t\t\t      addressArray =  response.results[0].address_components,\n\t\t\t\t      city = this.getCity( addressArray ),\n\t\t\t\t      area = this.getArea( addressArray ),\n\t\t\t\t      state = this.getState( addressArray ),\n\t\t\t\t\t  country = this.getCountry(addressArray)['short_name'],\n\t\t\t\t\t  short_address = [city,state,this.getCountry(addressArray)['long_name']].filter(x => x !== undefined && x !== null ).toString();\n\n\t\t\t\tconsole.log(short_address,'ffdf');\n\t\t\t\tthis.setState( {\n\t\t\t\t\taddress: ( address ) ? address : '',\n\t\t\t\t\tarea: ( area ) ? area : '',\n\t\t\t\t\tcity: ( city ) ? city : '',\n\t\t\t\t\tstate: ( state ) ? state : '',\n\t\t\t\t\tcountry: (country) ? country: '',\n\t\t\t\t\tshort_address: (short_address)? short_address : '',\n\t\t\t\t\tmarkerPosition: {\n\t\t\t\t\t\tlat: this.state.mapPosition.lat,\n\t\t\t\t\t\tlng: this.state.mapPosition.lng\n\t\t\t\t\t},\n\t\t\t\t\tmapPosition: {\n\t\t\t\t\t\tlat: this.state.mapPosition.lat,\n\t\t\t\t\t\tlng: this.state.mapPosition.lng\n\t\t\t\t\t},\n\t\t\t\t\t\n\t\t\t\t} )\n\t\t\t\tthis.country = country;\n\t\t\t\tthis.address = short_address;\n\t\t\t\tif(response){\n\n\t\t\t\t\tthis.props.handleState(false,[this.country,this.address,]);\n\t\t\t\t}\n\t\t\t},\n\t\t\terror => {\n\t\t\t\tconsole.error( error );\n\t\t\t}\n\t\t);\n\t};\n\n\thandleChangeLatLng(newLat,newLng) {\n\t\tnewLat = Number(newLat);\n\t\tnewLng = Number(newLng);\n\t\tGeocode.fromLatLng( newLat , newLng ).then(\n\t\t\tresponse => {\n\t\t\t\tconst address = response.results[0].formatted_address,\n\t\t\t\t      addressArray =  response.results[0].address_components,\n\t\t\t\t      city = this.getCity( addressArray ),\n\t\t\t\t      area = this.getArea( addressArray ),\n\t\t\t\t      state = this.getState( addressArray ),\n\t\t\t\t\t  country = this.getCountry(addressArray)['short_name'],\n\t\t\t\t\t  short_address = [city,state,this.getCountry(addressArray)['long_name']].filter(x => x !== undefined && x !== null ).toString();\n\t\t\t\tthis.setState( {\n\t\t\t\t\taddress: ( address ) ? address : '',\n\t\t\t\t\tarea: ( area ) ? area : '',\n\t\t\t\t\tcity: ( city ) ? city : '',\n\t\t\t\t\tstate: ( state ) ? state : '',\n\t\t\t\t\tcountry: (country) ? country : '',\n\t\t\t\t\tshort_address: (short_address)? short_address: '',\n\t\t\t\t\tmarkerPosition: {\n\t\t\t\t\t\tlat: newLat,\n\t\t\t\t\t\tlng: newLng\n\t\t\t\t\t},\n\t\t\t\t\tmapPosition: {\n\t\t\t\t\t\tlat: newLat,\n\t\t\t\t\t\tlng: newLng\n\t\t\t\t\t},\n\t\t\t\t} )\n\t\t\t\tthis.props.handleState(true,this.state);\n\t\t\t},\n\t\t\terror => {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t);\n\t\t\n\t};\n\t/**\n\t * Component should only update ( meaning re-render ), when the user selects the address, or drags the pin\n\t *\n\t * @param nextProps\n\t * @param nextState\n\t * @return {boolean}\n\t */\n\tshouldComponentUpdate( nextProps, nextState ){\n\n\t\tif (\n\t\t\tthis.state.markerPosition.lat !== this.props.center.lat ||\n\t\t\tthis.state.address !== nextState.address ||\n\t\t\tthis.state.city !== nextState.city ||\n\t\t\tthis.state.area !== nextState.area ||\n\t\t\tthis.state.state !== nextState.state\n\t\t) {\t\t\t\n\n\t\t\treturn true\n\t\t}\n\t\t else if ( this.props.center.lat === nextProps.center.lat ){\n\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\treturn true;\n\t}\n\t/**\n\t * Get the city and set the city input value to the one selected\n\t *\n\t * @param addressArray\n\t * @return {string}\n\t */\n\tgetCity = ( addressArray ) => {\n\t\tlet city = '';\n\t\tfor( let i = 0; i < addressArray.length; i++ ) {\n\t\t\tif ( addressArray[ i ].types[0] && 'administrative_area_level_2' === addressArray[ i ].types[0] ) {\n\t\t\t\tcity = addressArray[ i ].long_name;\n\t\t\t\treturn city;\n\t\t\t}\n\t\t}\n\t};\n\tgetCountry = ( addressArray ) => {\n\t\tlet country = [];\n\t\tcountry['long_name'] = '';\n\t\tcountry['short_name'] = '';\n\t\tfor( let i = 0; i < addressArray.length; i++ ) {\n\t\t\tfor( let i = 0; i < addressArray.length; i++ ) {\n\t\t\t\tif ( addressArray[ i ].types[0] && 'country' === addressArray[ i ].types[0] ) {\n\t\t\t\t\tcountry['long_name'] = addressArray[ i ].long_name;\n\t\t\t\t\tcountry['short_name'] = (addressArray[ i ].short_name) ? addressArray[ i ].short_name: '';\n\t\t\t\t\treturn country;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t/**\n\t * Get the area and set the area input value to the one selected\n\t *\n\t * @param addressArray\n\t * @return {string}\n\t */\n\tgetArea = ( addressArray ) => {\n\t\tlet area = '';\n\t\tfor( let i = 0; i < addressArray.length; i++ ) {\n\t\t\tif ( addressArray[ i ].types[0]  ) {\n\t\t\t\tfor ( let j = 0; j < addressArray[ i ].types.length; j++ ) {\n\t\t\t\t\tif ( 'sublocality_level_1' === addressArray[ i ].types[j] || 'locality' === addressArray[ i ].types[j] ) {\n\t\t\t\t\t\tarea = addressArray[ i ].long_name;\n\t\t\t\t\t\treturn area;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t/**\n\t * Get the address and set the address input value to the one selected\n\t *\n\t * @param addressArray\n\t * @return {string}\n\t */\n\tgetState = ( addressArray ) => {\n\t\tlet state = '';\n\t\tfor( let i = 0; i < addressArray.length; i++ ) {\n\t\t\tfor( let i = 0; i < addressArray.length; i++ ) {\n\t\t\t\tif ( addressArray[ i ].types[0] && 'administrative_area_level_1' === addressArray[ i ].types[0] ) {\n\t\t\t\t\tstate = addressArray[ i ].long_name;\n\t\t\t\t\treturn state;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t/**\n\t * And function for city,state and address input\n\t * @param event\n\t */\n\tonChange = ( event ) => {\n\t\tthis.setState({ [event.target.name]: event.target.value });\n\t};\n\t/**\n\t * This Event triggers when the marker window is closed\n\t *\n\t * @param event\n\t */\n\tonInfoWindowClose = ( event ) => {\n\n\t};\n\n\t/**\n\t * When the marker is dragged you get the lat and long using the functions available from event object.\n\t * Use geocode to get the address, city, area and state from the lat and lng positions.\n\t * And then set those values in the state.\n\t *\n\t * @param event\n\t */\n\tonMarkerDragEnd = ( event ) => {\n\t\tlet newLat = event.latLng.lat(),\n\t\t    newLng = event.latLng.lng();\n\n\t\tGeocode.fromLatLng( newLat , newLng ).then(\n\t\t\tresponse => {\n\t\t\t\tconst address = response.results[0].formatted_address,\n\t\t\t\t      addressArray =  response.results[0].address_components,\n\t\t\t\t      city = this.getCity( addressArray ),\n\t\t\t\t      area = this.getArea( addressArray ),\n\t\t\t\t      state = this.getState( addressArray ),\n\t\t\t\t\t  country = this.getCountry(addressArray)['short_name'],\n\t\t\t\t\t  short_address = [city,state,this.getCountry(addressArray)['long_name']].filter(x => x !== undefined && x !== null ).toString();\n\t\t\t\tthis.setState( {\n\t\t\t\t\taddress: ( address ) ? address : '',\n\t\t\t\t\tarea: ( area ) ? area : '',\n\t\t\t\t\tcity: ( city ) ? city : '',\n\t\t\t\t\tstate: ( state ) ? state : '',\n\t\t\t\t\tcountry: (country) ? country : '',\n\t\t\t\t\tshort_address: (short_address)? short_address : '',\n\t\t\t\t\tmarkerPosition: {\n\t\t\t\t\t\tlat: newLat,\n\t\t\t\t\t\tlng: newLng\n\t\t\t\t\t},\n\t\t\t\t\tmapPosition: {\n\t\t\t\t\t\tlat: newLat,\n\t\t\t\t\t\tlng: newLng\n\t\t\t\t\t},\n\t\t\t\t} )\n\t\t\t\tthis.props.handleState(true,this.state);\n\t\t\t},\n\t\t\terror => {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t);\n\t};\n\n\t/**\n\t * When the user types an address in the search box\n\t * @param place\n\t */\n\tonPlaceSelected = ( place ) => {\n\t\tconst address = place.formatted_address,\n\t\t      addressArray =  place.address_components,\n\t\t      city = this.getCity( addressArray ),\n\t\t      area = this.getArea( addressArray ),\n\t\t      state = this.getState( addressArray ),\n\t\t\t  country = this.getCountry(addressArray)['short_name'],\n\t\t\t  short_address = [city,state,this.getCountry(addressArray)['long_name']].filter(x => x !== undefined && x !== null ).toString(),\n\t\t      latValue = place.geometry.location.lat(),\n\t\t      lngValue = place.geometry.location.lng();\n\t\tthis.setState({\n\t\t\taddress: ( address ) ? address : '',\n\t\t\tarea: ( area ) ? area : '',\n\t\t\tcity: ( city ) ? city : '',\n\t\t\tstate: ( state ) ? state : '',\n\t\t\tcountry: (country) ? country: '',\n\t\t\tshort_address: (short_address)? short_address:'',\n\t\t\tmarkerPosition: {\n\t\t\t\tlat: latValue,\n\t\t\t\tlng: lngValue\n\t\t\t},\n\t\t\tmapPosition: {\n\t\t\t\tlat: latValue,\n\t\t\t\tlng: lngValue\n\t\t\t},\n\t\t})\n\t\tthis.props.handleState(true,this.state);\n\t};\n\n\n\trender(){\n\t\tconst AsyncMap = \n\t\t\twithGoogleMap(\n\t\t\t\tprops => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<GoogleMap google={ this.props.google }\n\t\t\t\t\t\t\t\t   defaultZoom={ this.props.zoom }\n\t\t\t\t\t\t\t\t   defaultCenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\n\t\t\t\t\t\t\t\t   defaultOptions={{\n\t\t\t\t\t\t\t\t\t   disableDefaultUI: true,\n\t\t\t\t\t\t\t\t   }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Marker google={this.props.google}\n\t\t\t\t\t\t\t\t\tname={'Dolores park'}\n\t\t\t\t\t\t\t\t\tdraggable={true}\n\t\t\t\t\t\t\t\t\tonDragEnd={ this.onMarkerDragEnd }\n\t\t\t\t\t\t\t\t\tposition={{ lat: this.state.markerPosition.lat, lng: this.state.markerPosition.lng }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Marker />\n\n\t\t\t\t\t\t\t<div className=\"search-input-container\">\n\t\t\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tclassName={`form-control bg-white ${this.props.searchInputClass}`}\n\t\t\t\t\t\t\t\t\tonPlaceSelected={ this.onPlaceSelected }\n\t\t\t\t\t\t\t\t\ttypes={['(regions)']}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Type address\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<InfoWindow\n\t\t\t\t\t\t\t\t\tonClose={this.onInfoWindowClose}\n\t\t\t\t\t\t\t\t\tposition={{ lat: ( this.state.markerPosition.lat + 0.0018 ), lng: this.state.markerPosition.lng }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<span style={{ padding: 0, margin: 0 }}>{ this.state.short_address }</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</InfoWindow>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t</GoogleMap>\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\t\n\t\t);\n\t\tlet map;\n\t\tif( this.props.center.lat !== undefined ) {\n\t\t\tmap =   <div>\n\t\t\t\t\t<AsyncMap\n\t\t\t\t\t\tgoogleMapURL={`https://maps.googleapis.com/maps/api/js?key=${GoogleMapsAPI}&libraries=places`}\n\t\t\t\t\t\tloadingElement={\n\t\t\t\t\t\t\t<div style={{ height: `100%` }} />\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontainerElement={\n\t\t\t\t\t\t\t<div style={{ height: this.props.height, position: this.props.containerPosition }} />\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmapElement={\n\t\t\t\t\t\t\t<div className={this.props.mapContainer} style={{ height: `100%`, borderRadius: this.props.mapRadius }} />\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t} else {\n\t\t\tmap = <div style={{height: this.props.height}} />\n\t\t}\n\t\treturn( map )\n\t}\n}\nexport default Map","import {Col, FormGroup, PopoverBody, PopoverHeader, Collapse, Button, Row} from \"reactstrap\";\nimport {useEffect, useRef, useState} from \"react\";\nimport useObservations from \"../../hooks/useObservations\";\nimport {Icon} from \"@iconify/react\";\n// import axios from \"../../api/axios\";\n// import {baseURL} from \"../../helpers/url\";\nimport useAuth from \"../../hooks/useAuth\";\nimport Images from \"../../static/images\";\nimport {Swiper, SwiperSlide} from \"swiper/react\";\nimport {Navigation} from \"swiper\";\nimport Tippy from \"@tippyjs/react\";\n\nconst ObservationCategory = (props) => {\n    const {error, obvType} = props;\n    const {auth} = useAuth();\n    const {\n        observationImages,\n        setObservationImages,\n        observationSteps,\n        observationCategory,\n        setObservationCategory\n    } = useObservations();\n    const [Category, setCategory] = useState([]);\n    const [oldCategory, setOldCategory] = useState([]);\n    const [isChecked, setIsChecked] = useState({});\n    const [selectedCategory, setSelectedCategory] = useState('' || []);\n    const ObservationData = {...observationImages};\n    const errorData = error ? Object.values(error?.data) : {};\n    const [isPopoverContentOpen, setIsPopoverContentOpen] = useState(false);\n    const tippyRef = useRef();\n\n    const onCategoryChange = (e) => {\n        const value = parseFloat(e.target.id);\n        setIsChecked({...isChecked, [e.target.name]: e.target.checked});\n        if (selectedCategory.includes(value)) {\n            const filterValue = selectedCategory.filter((item) => item !== value)\n            setSelectedCategory(filterValue);\n        } else {\n            setSelectedCategory([...selectedCategory, value]);\n        }\n        setObservationImages(ObservationData);\n    }\n    const updatedCategory = () => {\n        let newCategory = [];\n        oldCategory?.map((item, index) => {\n            let image = `/assets/images/category/${item?.name.toLowerCase().replaceAll(\" \", \"\")}.png`\n\n            item.image = image\n            newCategory.push(item)\n            return true;\n        })\n        setCategory(newCategory);\n\n        setObservationCategory(prev => {\n            return {\n                ...prev,\n                data: newCategory\n            }\n        });\n    }\n    const ImageCarousel = (props) => {\n        const {className} = props;\n        const items = [\n            {src: Images.card1},\n            {src: Images.card2},\n            {src: Images.card3}\n        ]\n\n        const carouselContent = items.map((item, index) => {\n            return (\n                <SwiperSlide key={index}>\n                    <img src={item.src} alt=\"carousel\"/>\n                </SwiperSlide>\n            );\n        });\n\n        return (\n            <>\n                <Swiper navigation={true} modules={[Navigation]} className={`className ${className ? className : ''}`}>\n                    {carouselContent}\n                </Swiper>\n            </>\n        )\n    }\n    const PopoverContent = () => {\n        return (\n            <>\n                <PopoverHeader className={'bg-white'}>What is sprite?\n                    {/*<button className=\"bg-transparent p-0 border-0 text-black shadow-none\"><Icon icon=\"codicon:chrome-close\" width=\"15\" height=\"15\" /></button>*/}\n                </PopoverHeader>\n                <PopoverBody className={'bg-white'}>\n                    <p style={{'--line-clamb': isPopoverContentOpen === true ? 'unset' : '2'}}>\n                        Sprites or red sprites are large-scale electric discharges that occur high above thunderstorm\n                        clouds, they appear as luminous reddish-orange flashes.\n                    </p>\n                    <Collapse\n                        isOpen={isPopoverContentOpen}\n                    >\n                        <ImageCarousel className=\"popover-carousel\"/>\n                    </Collapse>\n                    <Button className=\"bg-transparent p-0 border-0 text-secondary shadow-none d-block\"\n                            onClick={() => setIsPopoverContentOpen(!isPopoverContentOpen)}>\n                        {isPopoverContentOpen === true ? 'Show less' : 'Show more'}\n                    </Button>\n                </PopoverBody>\n            </>\n        );\n    };\n\n    const showCategory = () => {\n        return observationImages?.data?.filter((item) => item.id === observationImages?.selected_image_id).map((item, index) => {\n            return (\n                observationCategory?.data?.map((imagItem, index) => {\n                    return (\n                        <Col sm={6} key={index}>\n                            <FormGroup>\n                                <div className=\"checkbox-wrapper\">\n                                    <div className=\"inputGroup\">\n                                        <input\n                                            value={imagItem.name || ''}\n                                            name={imagItem.id}\n                                            id={imagItem.id}\n                                            type=\"checkbox\"\n                                            checked={(item?.category_map?.category?.find(list => list === imagItem?.id) === imagItem?.id) ? 'checked' : ''}\n                                            hidden\n                                            onChange={(e) => onCategoryChange(e)}\n                                        />\n                                        <label htmlFor={imagItem.id}>\n                                            <img src={`${imagItem.image}`} alt={imagItem.name}/>\n                                            {imagItem.name}\n                                            <div className=\"ms-2 text-dark \">\n\n                                                <Tippy\n                                                    content={<PopoverContent/>}\n                                                    interactive={true}\n                                                    appendTo={document.body}\n                                                    animation=\"perspective\"\n                                                    theme=\"light-border\"\n                                                    reference={tippyRef}\n                                                >\n                                                    <span ref={tippyRef}><Icon icon=\"charm:info\" color=\"#adb4c2\"\n                                                                               width=\"15\" height=\"15\"/></span>\n                                                </Tippy>\n                                            </div>\n\n                                        </label>\n                                    </div>\n                                </div>\n                            </FormGroup>\n                        </Col>\n                    )\n                })\n            )\n        })\n    }\n\n    useEffect(() => {\n        setOldCategory(auth?.categoryList)\n    }, [])\n\n    useEffect(() => {\n        updatedCategory();\n    }, [oldCategory])\n\n    useEffect(() => {\n        let prevCategory = ObservationData.data[observationImages?.selected_image_index]?.category_map?.category || [];\n        setSelectedCategory((prevCategory))\n    }, [ObservationData.data, observationImages?.selected_image_index])\n\n    useEffect(() => {\n        if (observationImages?.selected_image_index === []) {\n            setSelectedCategory([])\n        }\n    }, [observationImages?.selected_image_index])\n\n    useEffect(() => {\n        if (obvType?.image_type === 3) {\n            observationImages?.data?.map((item, index) => {\n                return item.category_map.category = selectedCategory\n            })\n        } else {\n            ObservationData.data[observationImages?.selected_image_index].category_map.category = selectedCategory;\n        }\n    }, [selectedCategory])\n\n    return (\n        <>\n            {error && errorData?.map((item, index) => {\n                if (observationSteps?.selected_image_index === index) {\n                    return (\n                        <span key={index} className=\"text-danger small\">{item?.category}</span>\n                    )\n                }\n                return true;\n            })}\n            <FormGroup className=\"mb-1\">\n                <p className=\"fw-bold\">\n                    Please choose the appropriate category\n                    <span className=\"required\">Required</span>\n                </p>\n            </FormGroup>\n            <Row>\n                {showCategory()}\n            </Row>\n        </>\n    )\n\n\n}\n\nexport default ObservationCategory;","import \"../../assets/scss/component/observationLocation.scss\";\nimport {\n    Button,\n    Col,\n    Dropdown,\n    DropdownItem,\n    DropdownMenu,\n    DropdownToggle,\n    FormGroup,\n    Input,\n    Label,\n    Row\n} from \"reactstrap\";\nimport {useEffect, useRef, useState} from 'react';\nimport useObservations from \"../../hooks/useObservations\";\nimport MapWrapper from '../MapWrapper';\nimport ReactCountryFlags from '../ReactCountryFlag';\nimport Images from \"../../static/images\";\nimport {directionValue, Tabs} from \"../../helpers/observation\";\nimport {timezone} from \"../../helpers/timezone\";\nimport ObservationCategory from \"./ObservationCategory\";\nimport {Icon} from '@iconify/react';\nimport {getdirectionDegree,getdirectionAngle} from \"../../helpers/observation\";\nimport moment from \"moment\";\n\n\nconst ObservationLocation = (props) => {\n    const { toggleTab,handleImageInput, error, step, obvType,disableNext } = props;\n    const fref = useRef()\n    const [address1,setAddress] = useState({\n        address: '',\n        city: '',\n        area: '',\n        state: '',\n        country: 'IN',\n        short_address: 'Pune Maharastra Indias',\n        mapPosition: {\n            lat: null,\n            lng: null\n        },\n        markerPosition: {\n            lat: null,\n            lng: null\n        }\n    });\n    const [initialAddress,setInitialAddress] = useState({\n        country: '',\n        short_address: '',\n       lat:null,\n       lng:null\n    });\n    const [isLoaded,setIsLoaded] = useState(false);\n    const {observationImages, setObservationImages,observationData} = useObservations();\n    const [isActiveDire, setActiveDire] = useState(null);\n    const [angleDegree, setAngleDegree] = useState(false);\n    const [isTimezoneOpen, setIsTimezoneOpen] = useState(false);\n    const [searchTimeZone, setSearchTimeZone] = useState(\"\");\n    const [sameAsMap, setSameAsMap] = useState(false);\n    const [sameAsDateTime, setSameAsDateTime] = useState(false);\n\n    useEffect(()=> {\n        \n        if(observationImages?.data && observationImages?.data[observationImages?.selected_image_index]?.sameAsFirstMap === false){\n            fref.current.handleChangeLatLng(observationImages?.data[observationImages?.selected_image_index]?.latitude , observationImages?.data[observationImages?.selected_image_index]?.longitude);\n        }\n      \n    },[observationImages?.data?.[observationImages?.selected_image_index],observationImages?.selected_image_index]);\n\n    useEffect(()=> {\n        // setSameAsMap(false);\n        // setSameAsDateTime(false);\n        if(observationImages?.data && observationImages?.selected_image_index !== 0){\n            handleCopyData(observationImages?.data[observationImages?.selected_image_index]?.sameAsFirstMap,['latitude','longitude','location','country_code']);\n            handleCopyData(observationImages?.data[observationImages?.selected_image_index]?.sameAsFirstDate,['obs_date','obs_time','timezone']);\n        }\n\n    },[observationImages?.selected_image_index]);\n\n    const handleValue = (flag,value) => {\n        if(!flag){\n            let address = {...address1};\n            address.country_code = value[0];\n            address.short_address = value[1];\n            setInitialAddress({\n                country: value[0],\n                address:value[1],\n                lat: Number((observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.latitude: null),\n                lng :Number((observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.longitude: null)\n            })\n            setAddress(address);\n            if(observationImages?.data){\n                let observationAddress = {...observationImages};\n                if(observationAddress?.data){\n                    observationAddress.data[observationAddress.selected_image_index]['location'] = value[1];\n                    observationAddress.data[observationAddress.selected_image_index]['country_code'] = value[0];\n    \n                    if(observationData?.image_type === 3){\n                        if(observationAddress.data[1]){\n                            observationAddress.data[1]['location'] = value[1];\n                            observationAddress.data[1]['country_code'] = value[0];\n                        }\n                        if(observationAddress.data[2]){\n                            observationAddress.data[2]['location'] = value[1];\n                            observationAddress.data[2]['country_code'] = value[0];\n                        }\n                    }\n                    setObservationImages(observationAddress);\n                }\n            }\n        }\n        else{\n            setAddress(value);\n            if(observationImages?.data){\n                let observationAddress = {...observationImages};\n                if(observationAddress?.data){\n                    observationAddress.data[observationAddress.selected_image_index]['latitude'] = value.markerPosition.lat;\n                    observationAddress.data[observationAddress.selected_image_index]['longitude'] = value.markerPosition.lng;\n                    observationAddress.data[observationAddress.selected_image_index]['location'] = value.short_address;\n                    observationAddress.data[observationAddress.selected_image_index]['country_code'] = value.country;\n    \n                    if(observationData?.image_type === 3){\n                        if(observationAddress.data[1]){\n                            observationAddress.data[1]['latitude'] = value.markerPosition.lat;\n                            observationAddress.data[1]['longitude'] = value.markerPosition.lng;\n                            observationAddress.data[1]['location'] = value.short_address;\n                            observationAddress.data[1]['country_code'] = value.country;\n                        }\n                        if(observationAddress.data[2]){\n                            observationAddress.data[2]['latitude'] = value.markerPosition.lat;\n                            observationAddress.data[2]['longitude'] = value.markerPosition.lng;\n                            observationAddress.data[2]['location'] = value.short_address;\n                            observationAddress.data[2]['country_code'] = value.country;\n                        }\n                    }\n                    setObservationImages(observationAddress);\n                }\n            }\n        }\n    }\n    const observationArray = {...observationImages};\n    \n    const handleChangeLat = (e) => {\n        handleImageInput(e);\n        let name = e.target.name,\n             value = Number(e.target.value);\n             let addressState = {...address1};\n             addressState.mapPosition.lat = value;\n             addressState.markerPosition.lat = value;\n             setAddress(addressState);\n            //  let imageArray = {...observationImages};\n            //  imageArray.images[0].lat = value;\n            //  setObservationImages(imageArray);\n            //  setTimeout(()=> {\n                 setIsLoaded(true);\n            //  },3000);\n            fref.current.handleChangeLatLng(e.target.value,address1.markerPosition.lng);\n    }\n    \n    const handleChangeLng = (e) => {\n        handleImageInput(e);\n        let name = e.target.name,\n             value = Number(e.target.value);\n             let addressState = {...address1};\n             addressState.mapPosition.lng = value;\n             addressState.markerPosition.lng = value;\n        setAddress(addressState);\n        setIsLoaded(true);\n        fref.current.handleChangeLatLng(address1.markerPosition.lat,e.target.value);\n    }\n    useEffect(() => {\n        let observationAddress = {...observationImages};        \n        if(observationAddress?.data){\n            let addressState = {...address1};\n            observationAddress.data[observationAddress.selected_image_index]['location'] = address1?.short_address;\n            observationAddress.data[observationAddress.selected_image_index]['country_code'] = address1?.country;\n\n            if(observationData?.image_type === 3){\n                if(observationAddress.data[1]){\n                    observationAddress.data[1]['location'] = address1?.short_address;\n                    observationAddress.data[1]['country_code'] = address1?.country;\n                }\n                if(observationAddress.data[2]){\n                    observationAddress.data[2]['location'] = address1?.short_address;\n                    observationAddress.data[2]['country_code'] = address1?.country;\n                }\n            }\n            setObservationImages(observationAddress);\n        }\n    },[address1]);\n    useEffect(() => {\n        let observationAddress = {...observationImages};        \n        if(observationAddress?.data){\n            if(observationData?.image_type === 3){\n                if(observationAddress.data[1]){\n                    observationAddress.data[1]['location'] = observationAddress.data[0]['location'];\n                    observationAddress.data[1]['country_code'] = observationAddress.data[0]['country_code'];\n                }\n                if(observationAddress.data[2]){\n                    observationAddress.data[2]['location'] = observationAddress.data[0]['location'];\n                    observationAddress.data[2]['country_code'] = observationAddress.data[0]['country_code'];\n                }\n            }\n            setObservationImages(observationAddress);\n        }\n    },[observationData?.image_type]);\n    const selectDirection = (index) => {\n        const directionWrapper = document.querySelector('.compass-wrapper');\n        const directionId = document.getElementById(`directionValue${index}`);\n        let getAngleName = directionId.getAttribute(\"data-name\");\n        if(isActiveDire === index){\n            directionWrapper.classList.remove(\"active-arrow\");\n        }else{\n            directionWrapper.classList.add(\"active-arrow\");\n            setActiveDire(index);\n\n            if (observationImages?.data[observationImages?.selected_image_index]?.is_precise_azimuth === 0 || observationImages?.data[observationImages?.selected_image_index]?.is_precise_azimuth === false) {\n                observationArray.data[observationImages?.selected_image_index]['azimuth'] = getdirectionDegree(getAngleName);\n\n                if(observationData?.image_type === 3){\n                    if(observationArray.data[1]){\n                        observationArray.data[1]['azimuth'] = getdirectionDegree(getAngleName);\n                    }\n                    if(observationArray.data[2]){\n                        observationArray.data[2]['azimuth'] = getdirectionDegree(getAngleName);\n                    }\n                }\n            }\n        }\n        setObservationImages(observationArray);\n    }\n\n    const handleCopyData = (e,keys) => {\n        if(observationImages){\n\n            let observationMap = {...observationImages};\n            if(keys.includes('location','latitude','longitude','country_code')){\n                setSameAsMap(e);\n                observationMap.data[observationImages?.selected_image_index].sameAsFirstMap = e;\n            }\n            if(keys.includes('obs_time','obs_date','timezone')){\n                setSameAsDateTime(e);\n                observationMap.data[observationImages?.selected_image_index].sameAsFirstDate = e;\n            }\n            setObservationImages(observationMap);\n            let copyImages = {...observationImages};\n            keys.map((k) => {\n                if(e){\n                    copyImages.data[copyImages?.selected_image_index][k] = copyImages.data[0][k];\n                    // copyImages.data[copyImages?.selected_image_index]['location'] = copyImages.data[0]['location'];\n                    // copyImages.data[copyImages?.selected_image_index]['country_code'] = copyImages.data[0]['country_code'];\n                }else{\n                    if(observationData?.image_type !== 3){\n                        \n                        copyImages.data[copyImages?.selected_image_index][k] = (k === 'obs_time' || k === 'obs_date') ? null : '';\n                        if(keys.includes('location','latitude','longitude')){\n                            copyImages.data[copyImages?.selected_image_index]['latitude'] = initialAddress.lat;\n                            copyImages.data[copyImages?.selected_image_index]['longitude'] = initialAddress.lng;\n                            copyImages.data[copyImages?.selected_image_index]['location'] = initialAddress.short_address;\n                            copyImages.data[copyImages?.selected_image_index]['country_code'] = initialAddress.country;\n                        }\n                    }\n                }\n                return false;\n            });\n            setObservationImages(copyImages);\n        }\n    }\n\n    const findTimeZone = (e) => {\n        let value = e.target.value.toLowerCase();\n        setSearchTimeZone(value);\n    }\n\n    useEffect(()=> {\n        if (isTimezoneOpen === false) {\n            setSearchTimeZone(\"\");\n        }\n    }, [isTimezoneOpen])\n\n    const errorData = error ? Object.values(error?.data) : {};\n\n    useEffect(() => {\n        const id = observationImages?.data?.[0].id;\n        if (obvType?.image_type === 3 && step.active === 2) {\n            setObservationImages(prev => {\n                return {\n                    ...prev,\n                    selected_image_id: id,\n                    selected_image_index: 0\n                }\n            });\n        }\n    },[observationImages?.data, obvType?.image_type, setObservationImages, step.active])\n\n    return (\n        <>\n            <Col md=\"12\">\n                <FormGroup>\n                    <Row>\n                        <Col xxl={7} className=\"order-2 order-xxl-1\">\n                            <h6>Where did you make the observation? <span className=\"required\">Required</span></h6>\n                        </Col>\n                        {observationImages?.selected_image_index !== 0 && observationData?.image_type === 2 && \n                            <Col xxl={5} className=\"order-1 order-xxl-2 mb-2 mb-xxl-0\">\n                                <FormGroup>\n                                    <Label check className=\"mb-0 justify-content-end\">\n                                        <Input\n                                            type=\"checkbox\"\n                                            name=\"Same as the first image\"\n                                            checked={observationImages?.data[observationImages?.selected_image_index]?.sameAsFirstMap}\n                                            onChange={(e) => handleCopyData(e.target.checked,['latitude','longitude','location','country_code'])}\n                                            className=\"me-2 mt-0\"\n                                        />\n                                        Same as the first image\n                                    </Label>\n                                </FormGroup>\n                            </Col>\n                        }\n                    </Row>\n                    {\n                    (\n                        (observationImages?.data && observationImages?.data[observationImages?.selected_image_index]?.sameAsFirstMap === false ) \n                        || observationImages?.selected_image_index === 0 ) ?\n                        <div className=\"location_map\">\n                            <MapWrapper\n                                google={props.google}\n                                center={{ lat: Number((observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.latitude: address1?.markerPosition?.lat), lng: Number((observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.longitude: address1?.markerPosition?.lng) }}\n                                height=\"100%\"\n                                containerPosition={\"relative\"}\n                                mapRadius=\"10px\"\n                                zoom={15}\n                                handleState={handleValue}\n                                isLoaded={isLoaded}\n                                mapContainer=\"map-search-container\"\n                                searchInputClass=\"search-input-class\"\n                                ref={fref}\n                            /> \n                        </div>\n                        :\n\n                        <div  className=\"border same-data_row\">\n                            <Row>\n                                <Col lg={6}>\n                                    <Row className=\"flex-nowrap\">\n                                        <div className=\"border-end w-auto\">\n                                            <FormGroup className=\"form-group d-flex align-items-center\">\n                                                <Label className=\"form-label text-uppercase mb-0 me-2\" htmlFor=\"LAT\">LAT</Label>\n                                                <span className=\"fw-bold text-truncate data-value\">{(observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.latitude : address1?.markerPosition?.lat\n                                                }</span>\n                                            </FormGroup>\n                                        </div>\n                                        <div className=\"w-auto\">\n                                            <FormGroup className=\"form-group d-flex align-items-center\">\n                                                <Label className=\"form-label text-uppercase mb-0 me-2\" htmlFor=\"LON\">LON</Label>\n                                                <span className=\"fw-bold text-truncate data-value\">{(observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.longitude :address1?.markerPosition?.lng}</span>\n                                            </FormGroup>\n                                        </div>\n                                    </Row>\n                                </Col>\n                                <Col lg={6}>\n                                    <div className=\"selected-address d-block d-lg-flex align-items-center justify-content-start justify-content-lg-end mt-2 mt-lg-0\">\n                                        <ReactCountryFlags country={(observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.country_code: address1?.country_code} />\n                                        <span>{(observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.location : ''}</span>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </div>\n                        }\n                </FormGroup>\n            </Col>\n            {\n            (\n                ( observationImages?.data &&  observationImages?.data[observationImages?.selected_image_index]?.sameAsFirstMap === false)\n              || observationImages?.selected_image_index === 0) &&\n                <Col md={12} className=\"mb-5\">\n                    <h6>If you know the precise coordinates of your observation location, please enter below</h6>\n                    <Row>\n                        <Col md={6} lg={4}>\n                            <FormGroup className=\"d-flex\">\n                                <Label className=\"form-label text-uppercase me-1\" htmlFor=\"LAT\" sm={2} >LAT</Label>\n                                <Col sm={10}>\n                                    <Input\n                                        // value={address1?.markerPosition?.lat}\n                                        value={(observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.latitude : address1?.markerPosition?.lat}\n                                        id=\"LAT\"\n                                        type=\"number\"\n                                        name=\"latitude\"\n                                        placeholder=\"Edmon, OK, USA\"\n                                        onChange={(e)=> {handleImageInput(e); handleChangeLat(e);}}\n                                    />\n                                </Col>\n                            </FormGroup>\n                        </Col>\n                        <Col md={6} lg={4}>\n                            <FormGroup className=\"d-flex\">\n                                <Label className=\"form-label text-uppercase me-1\" htmlFor=\"LON\" sm={2} >LON</Label>\n                                <Col sm={10}>\n                                    <Input\n                                        // value={address1?.markerPosition?.lng}\n                                        value={(observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.longitude :address1?.markerPosition?.lng}\n                                        id=\"LON\"\n                                        type=\"number\"\n                                        name=\"longitude\"\n                                        placeholder=\"Edmon, OK, USA\"\n                                        onChange={(e)=> {handleImageInput(e); handleChangeLng(e);}}\n                                    />\n                                </Col>\n                            </FormGroup>\n                        </Col>\n                        <Col md={6} lg={4}>\n                            <div className=\"selected-address pb-0 pb-lg-3 d-flex align-items-center justify-content-start justify-content-lg-end\">\n                                <ReactCountryFlags country={(observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.country_code: null} />\n                                <span>{(observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.location : ''}</span>\n                            </div>\n                        </Col>\n                    </Row>\n                </Col>\n            }\n            {observationData?.image_type === 3 &&\n            <Row className=\"mb-4\">\n                <ObservationCategory obvType={obvType} error={error} />\n            </Row>\n            }\n            \n            <Col md={12} className=\"mb-5\">\n                <Row>\n                    <Col xxl={7} className=\"order-2 order-xxl-1\">\n                        <h6>Please enter date and time for your observation <span className=\"required\">Required</span></h6>\n                    </Col>\n                    {observationImages?.selected_image_index !== 0 && observationData?.image_type === 2 && <Col xxl={5} className=\"order-1 order-xxl-2 mb-2 mb-xxl-0\">\n                        <FormGroup>\n                            <Label check className=\"mb-0 justify-content-end\">\n                                <Input\n                                    type=\"checkbox\"\n                                    name=\"Same as the first image\"\n                                    checked={sameAsDateTime}\n                                    onChange={(e) => handleCopyData(e.target.checked,['obs_date','obs_time','timezone'])}\n                                    className=\"me-2 mt-0\"\n                                />\n                                Same as the first image\n                            </Label>\n                        </FormGroup>\n                    </Col>}\n                </Row>\n                \n                {\n                    (observationImages?.data && observationImages?.data[observationImages?.selected_image_index]?.sameAsFirstDate === false  \n                    || observationImages?.selected_image_index === 0)  ?\n                    <Row>\n                        <Col md={6} lg={4}>\n                            <FormGroup>\n                                <Label className=\"text-uppercase\" htmlFor=\"Date\">Date</Label>\n                                <div className=\"position-relative\">\n                                    <Input\n                                        id=\"Date\"\n                                        type=\"date\"\n                                        max= {moment(new Date()).format('Y-MM-DD')}\n                                        name=\"obs_date\"\n                                        max={moment(new Date()).format('Y-MM-DD')}\n                                        value={(observationImages?.data) ? (observationImages?.data[observationImages?.selected_image_index]?.obs_date === null ? 'dd/mm/yyyy' : observationImages?.data[observationImages?.selected_image_index]?.obs_date) : 'dd/mm/yyyy'}\n                                        className=\"w-100\"\n                                        placeholder=\"12/20/2021\"\n                                        onChange={(e)=>handleImageInput(e)}\n                                    />\n                                </div>\n\n                                {error && errorData?.map((item, index) => {\n                                    if (step?.selected_image_index === index) {\n                                        return(\n                                            <span key={index} className=\"text-danger small\">{item?.obs_date}</span>\n                                        )\n                                    }\n                                    return true;\n                                })}\n                            </FormGroup>\n                        </Col>\n                        <Col md={6} lg={4}>\n                            <FormGroup>\n                                <Label className=\"text-uppercase\" htmlFor=\"Time\">Time</Label>\n                                <div className=\"position-relative\">\n                                    <Input\n                                        id=\"Time\"\n                                        type=\"time\"\n                                        name=\"obs_time\"\n                                        value={observationImages?.data ? (observationImages?.data[observationImages?.selected_image_index]?.obs_time === null ? '--:--' : observationImages?.data[observationImages?.selected_image_index]?.obs_time) : ''}\n                                        className=\"w-100\"\n                                        placeholder=\"10:21:00 am\"\n                                        onChange={(e)=>handleImageInput(e)}\n                                    />\n                                </div>\n                                {error && errorData?.map((item, index) => {\n                                    if (step?.selected_image_index === index) {\n                                        return(\n                                            <span key={index} className=\"text-danger small\">{item?.obs_time}</span>\n                                        )\n                                    }\n                                    return true;\n                                })}\n                            </FormGroup>\n                        </Col>\n                        <Col md={6} lg={4}>\n                            <FormGroup>\n                                <Label className=\"text-uppercase\" htmlFor=\"TIME ZONE\">TIME ZONE</Label>\n                                <Dropdown className=\"dropdown-with-search\" toggle={() => setIsTimezoneOpen(!isTimezoneOpen)} isOpen={isTimezoneOpen}>\n                                    <DropdownToggle className=\"px-3 shadow-none border-0 text-black fw-normal text-start d-flex justify-content-between align-items-center w-100\">\n                                        {/*<span className=\"text-truncate\">{(observationImages?.data) ? `${observationImages?.data[observationImages?.selected_image_index]?.timezone.substring(0, 16)+'...'}` : ''}</span>*/}\n                                        <span className=\"text-truncate\">{(observationImages?.data) ? `${observationImages?.data[observationImages?.selected_image_index]?.timezone}` : ''}</span>\n                                        <Icon icon=\"fe:arrow-down\" className=\"down-arrow ms-1\"/>\n                                    </DropdownToggle>\n                                    <DropdownMenu className=\"py-0 shadow\">\n                                        <DropdownItem header className=\"mb-0 position-sticky start-0 top-0 end-0 p-2 bg-white\"><Input type=\"text\" className=\"p-2\" onChange={(e)=> findTimeZone(e)} placeholder=\"Search Timezone\" /></DropdownItem>\n                                        {timezone?.filter(item => {\n                                            return item.toLowerCase().indexOf(searchTimeZone.toLowerCase()) !== -1;\n                                        }).map((item, index) => {\n                                            return <DropdownItem  name=\"timezone\" className=\"px-2 fw-normal\" key={index} value={item} onClick={(e)=>handleImageInput(e)}>{item}</DropdownItem>\n                                        })}\n                                    </DropdownMenu>\n                                </Dropdown>\n                                {error && errorData?.map((item, index) => {\n                                    if (step?.selected_image_index === index) {\n                                        return(\n                                            <span key={index} className=\"text-danger small\">{item?.timezone}</span>\n                                        )\n                                    }\n                                    return true;\n                                })}\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    :\n                    <div  className=\"border same-data_row\">\n                        <Row>\n                            <Col lg={6}>\n                                <Row className=\"flex-nowrap\">\n                                    <div className=\"border-end w-auto\">\n                                        <FormGroup className=\"form-group d-flex align-items-center\">\n                                            <Label className=\"form-label text-uppercase mb-0 me-2\" htmlFor=\"Date\">Date</Label>\n                                            <span className=\"fw-bold text-truncate data-value\">{(observationImages?.data) ? (observationImages?.data[observationImages?.selected_image_index]?.obs_date === null ? 'dd/mm/yyyy' : observationImages?.data[observationImages?.selected_image_index]?.obs_date) : 'dd/mm/yyyy'}</span>\n                                        </FormGroup>\n                                    </div>\n                                    <div className=\"w-auto\">\n                                        <FormGroup className=\"form-group d-flex align-items-center\">\n                                            <Label className=\"form-label text-uppercase mb-0 me-2\" htmlFor=\"Time\">Time</Label>\n                                            <span className=\"fw-bold text-truncate data-value\">{observationImages?.data ? (observationImages?.data[observationImages?.selected_image_index]?.obs_time === null ? '--:--' : observationImages?.data[observationImages?.selected_image_index]?.obs_time) : ''}</span>\n                                        </FormGroup>\n                                    </div>\n                                </Row>\n                            </Col>\n                            <Col lg={6}>\n                                <div className=\"selected-address mt-2 mt-lg-0 text-end d-block\">\n                                    <span className=\"opacity-75\">{(observationImages?.data) ? `${observationImages?.data[observationImages?.selected_image_index]?.timezone}` : ''}</span>\n                                </div>\n                            </Col>\n                        </Row>\n                    </div>\n                }\n            </Col>\n            <Col md={12} className=\"mb-5\">\n                <h6>How accurate is your timing?</h6>\n                <FormGroup>\n                    <Label className=\"text-uppercase\" htmlFor=\"Date\">Uncertainty in Time</Label>\n                    <Input\n                        id=\"Date\"\n                        type=\"text\"\n                        name=\"time_accuracy\"\n                        value={(observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.time_accuracy:''}\n                        placeholder=\"e.g. +/- 3 sec  or  +/- 1 min\"\n                        className=\"w-100\"\n                        onChange={(e)=>handleImageInput(e)}\n                    />\n                    <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b> +/- 3 sec  or  +/- 1 min</span>\n                </FormGroup>\n            </Col>\n            <Col md={12} className=\"mb-5\">\n\n                {error && errorData?.map((item, index) => {\n                    if (step?.selected_image_index === index) {\n                        return(\n                            <span key={index} className=\"text-danger small\">{item?.azimuth}</span>\n                        )\n                    }\n                    return true;\n                })}\n                <FormGroup className=\"d-flex align-items-center position-relative mb-4 pb-3\">\n                    <div className=\"custom-switch\">\n                        <input\n                            id=\"checkbox2\"\n                            type=\"checkbox\"\n                            name=\"is_precise_azimuth\"\n                            // checked={(observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.is_precise_azimuth :''}\n                            checked={angleDegree}\n                            className=\"hidden\"\n                            onChange={(e)=>handleImageInput(e)}\n                            onClick={()=> setAngleDegree(!angleDegree)}\n                        />\n                        <label\n                            className=\"switchbox\"\n                            htmlFor=\"checkbox2\"\n                        />\n                        <span>I know the precise azimuth angle in degrees</span>\n                    </div>\n                </FormGroup>\n                \n                {(angleDegree === false && (observationImages?.data && observationImages?.data[observationImages?.selected_image_index]?.is_precise_azimuth === 0 ||  observationImages?.data && observationImages?.data[observationImages?.selected_image_index]?.is_precise_azimuth === false)) ?\n                    <FormGroup>\n                        <Label className=\"justify-content-center mb-3 text-uppercase\">Look Direction</Label>\n                        \n                        <div className=\"compass-wrapper\">\n                            {\n                                directionValue?.map((direction, index)=>{\n                                    return(\n                                       \n                                        <Button\n                                            className={`${direction.name}-direction ${getdirectionAngle(Number(observationArray.data[observationImages?.selected_image_index]['azimuth'])) === direction.name ? 'active_direction' : ''}`}\n                                            onClick={()=> selectDirection(index)}\n                                            key={index}\n                                            id= {`directionValue${index}`}\n                                            data-angle={direction.angle}\n                                            data-name={direction.name}\n                                        >\n                                            <span className=\"d-block\">\n                                                {direction.name}\n                                            </span>\n                                            <span className=\"d-block direction-angle\">\n                                                {direction.angle}°\n                                            </span>\n                                        </Button>\n                                    )\n                                })\n                            }\n                            <div className=\"center-dot rounded-circle\" />\n                            <div className=\"rotate-arrow-wrap\">\n                                <div className=\"rotate-arrow-inner\" style={{ \"--directionAngle\": directionValue.filter((item) => item.name === getdirectionAngle(Number(observationArray.data[observationImages?.selected_image_index]['azimuth']))).map((dirData) => {\n                                        return dirData.angle;\n                                    }) + 'deg' }}>\n                                    <div className=\"rotate-arrow main\"><img src={Images.compassArrow} alt=\"Compass Arrow\" /> </div>\n                                    <div className=\"rotate-arrow hidden\"><img src={Images.compassArrow} alt=\"Compass Arrow\" /> </div>\n                                </div>\n                            </div>\n                        </div>\n                    </FormGroup>\n                :\n                    <FormGroup>\n                        <Label htmlFor=\"Azimuth\">Azimuth Angle</Label>\n                        <Input\n                            id=\"Azimuth\"\n                            type=\"number\"\n                            min={0}\n                            max={360}\n                            name=\"azimuth\"\n                            value={(observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.azimuth:''}\n                            placeholder=\"120°\"\n                            className=\"degree-input\"\n                            onChange={(e)=>handleImageInput(e)}\n                        />\n                        <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b> 120°</span>\n                    </FormGroup>\n                }\n                <FormGroup className=\"mt-5\">\n                    <Button className=\"gray-outline-btn me-2\" onClick={() => toggleTab(Tabs.ObservationImages)}>Back</Button>\n                    <Button className=\"\" onClick={() => toggleTab(Tabs.EquipmentDetails)} disabled ={!disableNext}>Continue</Button>\n                </FormGroup>\n            </Col>\n        </>\n    )\n}\n\nexport default ObservationLocation;","import { Icon } from '@iconify/react';\nimport useObservations from \"../../hooks/useObservations\";\nimport PropTypes from \"prop-types\";\n\nconst ObservationUpdateUploadedImages = (item) => {\n\n    const {observationImages,setObservationImages} = useObservations();\n    const existingObvImageData = {...observationImages};\n\n    const toBase64 = file => new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = error => reject(error);\n    });\n\n    const handleUpdateImage = async (e) => {\n        const fileList = e.target.files[0];\n        const image = await toBase64(fileList).catch(error => console.log(error));\n\n        existingObvImageData.data[observationImages?.selected_image_index]['item'] = fileList;\n        existingObvImageData.data[observationImages?.selected_image_index]['image'] = image;\n        existingObvImageData.data[observationImages?.selected_image_index]['name'] = fileList.name;\n        existingObvImageData.data[observationImages?.selected_image_index]['lastModified'] = fileList.lastModified;\n\n        setObservationImages(existingObvImageData);\n    }\n\n    const markTabActive = (item) => {\n        setObservationImages(prev => {\n            return {\n                ...prev,\n                selected_image_id: item?.item?.id,\n                selected_image_index:item?.index\n            }\n        });\n    }\n\n\n    return (\n        <>\n            <div className=\"replace-image_wrapper position-absolute rounded-circle bg-white d-flex justify-content-center align-items-center\">\n                <input\n                    type=\"file\"\n                    name=\"file\"\n                    id=\"UploadFile1\"\n                    accept=\"image/jpg, image/jpeg, image/png\"\n                    onChange={(e) => handleUpdateImage(e)}\n                    onClick={()=> markTabActive(item)}\n                    className=\"position-absolute w-100 h-100 opacity-0 p-0\"\n                />\n                <Icon icon=\"ion:sync-outline\" />\n            </div>\n        </>\n    )\n}\n\nObservationUpdateUploadedImages.propTypes = {\n    tabActive: PropTypes.func,\n};\nexport default ObservationUpdateUploadedImages;","import useObservations from \"../../hooks/useObservations\";\nimport {useLayoutEffect, useState} from \"react\";\nimport LazyLoad from \"../Upload/LazyLoad\";\nimport { Icon } from '@iconify/react';\nimport { PropTypes } from 'prop-types';\nimport ObservationUpdateUploadedImages from \"./ObservationUpdateUploadedImages\";\n\nconst ObservationUploadedImg = (props) => {\n    const { remove, className }=props;\n    const {observationImages, setObservationImages, observationSteps} = useObservations();\n    const [preview, setPreview] = useState([]);\n    const [activeTab, setActiveTab] = useState(observationImages?.selected_image_id ?? null);\n    // Toggle Tabs\n    const toggleTab = (tab,index=0) => {\n        setActiveTab(tab);\n        setObservationImages(prev => {\n            return {\n                ...prev,\n                selected_image_id: tab,\n                selected_image_index:index,\n\n            }\n        });\n    };\n\n\n    useLayoutEffect(()=> {\n        setPreview(observationImages?.data);\n        setActiveTab(activeTab);\n    }, [activeTab, observationImages, preview])\n\n    return(\n        <>\n            {preview?.map((item, index) => {\n                return(\n                    <div className={`selected-image_wrapper d-flex justify-content-end mb-2 ms-2 ms-sm-0 position-relative ${className ? className : ''}`} key={index}>\n                        <div className={`selected-image  ${activeTab === item?.id ? 'active-tab' : ''}`}>\n                                <button type=\"button\" className='preview-btn position-relative d-flex p-0 shadow-none' onClick={()=> toggleTab(item?.id,index)}>\n                                    <LazyLoad converted={observationSteps?.converted} src={item?.image} alt={item?.name} />\n                                </button>\n                                <ObservationUpdateUploadedImages item={item} index={index} />\n                                <button type=\"button\" className=\"remove-btn text-black border-0 position-absolute btn\" onClick={()=> remove(item?.id)}>\n                                <span>\n                                    <Icon icon=\"ci:close-big\" />\n                                </span>\n                                </button>\n                        </div>\n                    </div>\n                )\n            })}\n        </>\n    )\n}\nObservationUploadedImg.propTypes = {\n    remove: PropTypes.func\n};\nexport default ObservationUploadedImg;","import {FormGroup, Input, Label} from \"reactstrap\";\nimport useObservations from \"../../hooks/useObservations\";\nimport {Icon} from '@iconify/react';\nimport {useEffect, useState} from \"react\";\nimport {uploadImageDefaultState} from \"../../helpers/observation\";\nimport PropTypes from \"prop-types\";\nimport useAuth from \"../../hooks/useAuth\";\nimport {cameraSettingFields} from \"../../helpers/url\";\nimport UploadImageUI from \"../Shared/UploadImageUI\";\n\nconst ObservationUploadImg = (props) => {\n    const {multiple, maxLimit, imageFormat, detectImage, mode, small} = props;\n    const {setObservationImages, observationImages, setCameraDetails} = useObservations();\n    const [images, setImages] = useState([]);\n    const [error, setError] = useState(null);\n    const {auth} = useAuth();\n    const [userLocation, setUserLocation] = useState({\n        latitude: (auth?.user?.location_metadata?.lat) ? auth?.user?.location_metadata?.lat : 18.5204303,\n        longitude: (auth?.user?.location_metadata?.lng) ? auth?.user?.location_metadata?.lng : 73.8567437\n    });\n    const handleUploadImage = (e) => {\n        setError(null);\n        const fileList = e.target.files;\n        Array.from(fileList).forEach((item, id) => {\n            const reader = new FileReader();\n            reader.onloadend = () => {\n                const base64String = reader.result.replace('data:', '').replace(/^.+,/, '');\n                const baseImage = `data:image/png;base64,${base64String}`;\n                const random = (Math.random() + 1).toString(36).substring(7) + (Math.random() + 1).toString(36).substring(20);\n                const fileSize = (item.size / (1024 * 1024)).toFixed(2);\n                const repeatCheck = images?.map((image, index) => {\n                    return image?.lastModified === item?.lastModified && image?.name === item?.name;\n                });\n                const duplicate = repeatCheck.includes(true);\n                if (images?.length <= (mode ? 1 : 2) && fileSize < 5 && !duplicate) {\n\n                    if (mode) {\n                        return setImages([uploadImageDefaultState(random, baseImage, item, userLocation)])\n                    } else {\n                        setImages(prevState => [\n                            ...prevState,\n                            uploadImageDefaultState(random, baseImage, item, userLocation)\n                        ])\n                    }\n                }\n\n\n                if (mode) {\n                    setError((prev) => {\n                        return {\n                            ...prev,\n                            draft: 'You can not add new image',\n                        }\n                    })\n                }\n                if (images?.length > 2) {\n                    setError((prev) => {\n                        return {\n                            ...prev,\n                            count: 'You have reached the limit, delete some image, maximum upload allowed is 3',\n                        }\n                    })\n                }\n                if (fileSize > 5) {\n                    setError((prev) => {\n                        return {\n                            ...prev,\n                            size: 'You have exceeded the max file size limit (5mb)',\n                        }\n                    })\n                }\n                if (duplicate) {\n                    setError((prev) => {\n                        return {\n                            ...prev,\n                            duplicate: 'You have already added the image, please choose other image',\n                        }\n                    })\n                }\n\n            };\n            reader.readAsDataURL(item)\n        })\n    };\n\n\n    useEffect(() => {\n        let images = (observationImages?.data) ? [...observationImages?.data] : [];\n        observationImages?.data?.map((item, index) => {\n            return item.latitude = userLocation?.latitude,\n                item.longitude = userLocation?.longitude\n        })\n        setImages(images)\n    }, [detectImage, mode, userLocation])\n\n\n    useEffect(() => {\n        if (images.length > 0) {\n            setObservationImages({\n                data: images,\n                observation_count: images.length,\n                selected_image_id: images?.[0]?.id,\n                selected_image_index: 0\n            });\n            setCameraDetails(cameraSettingFields)\n        }\n    }, [images, setObservationImages, userLocation])\n\n    return (\n        <>\n            <UploadImageUI\n                maxLimit={maxLimit}\n                imageFormat={imageFormat}\n                multiple={multiple}\n                handleUploadImage={handleUploadImage}\n                error={error}\n                small={small}\n            />\n        </>\n    )\n}\n\nObservationUploadImg.propTypes = {\n    userLocation: PropTypes.object,\n};\n\n\nexport default ObservationUploadImg;","import \"../../assets/scss/component/uploadObservationImage.scss\";\nimport { useState } from \"react\";\nimport { Row, Button, Col } from \"reactstrap\";\nimport ObservationUploadImg from \"./ObservationUploadImg\";\nimport useObservations from \"../../hooks/useObservations\";\nimport ObservationUploadedImg from \"./ObservationUploadedImg\";\n\nconst ObservationImages = (props) =>{\n    const {proceedNext, remove, detectImage, mode} = props;\n    const [isMultiple] = useState(false);\n    const { observationImages } = useObservations();\n\n    return (\n        <>\n            <Row>\n                <Col sm={observationImages?.data?.length ? 9 : 12} className=\"order-2 order-sm-1\">\n                    <ObservationUploadImg mode={mode} detectImage={detectImage} imageFormat={true} maxLimit={true} multiple={isMultiple}/>\n                </Col>\n                {observationImages?.data?.length && <Col sm={3}  className=\"order-1 order-sm-2 d-flex d-sm-block justify-content-start justify-content-sm-end overflow-hidden w-auto\">\n                    <ObservationUploadedImg className=\"sm-selected_image\" remove={remove} />\n                </Col>}\n            </Row>\n            <Row>\n                <Col sm={12}>\n                    <div className=\"mt-5\">\n                        <Button disabled={!observationImages?.data?.length} onClick={proceedNext}>Continue</Button>\n                    </div>\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default ObservationImages;","import {useEffect, useState} from \"react\";\nimport \"../../assets/scss/component/ObservationProgress.scss\";\n\nconst ObservationProgress = (props) => {\n    const {step} = props;\n    const [progress, setProgress] = useState(100);\n\n\n    useEffect(()=> {\n        setProgress(\n            step?.active * 100 / step?.total\n        )\n    }, [step])\n\n    return(\n        <>\n            <div className=\"progress_bar text-black\">\n                {step?.active} of {step?.total} steps\n                <p className=\"progress_line\" style={{ \"--progressPercentage\": progress + '%' }} ></p>\n            </div>\n        </>\n    )\n}\nexport default ObservationProgress;","import { Icon } from \"@iconify/react\";\nimport useObservations from \"../../hooks/useObservations\";\nimport LazyLoad from \"../Upload/LazyLoad\";\nimport {useRef} from \"react\";\nimport PropTypes from \"prop-types\";\n\n\nconst ImagePreview = (props) =>{\n    const {remove}=props;\n    const imageDelete = useRef(null);\n    const {observationImages, observationSteps} = useObservations();\n\n    return (\n        <>\n            {observationImages?.data?.filter(item => item?.id === observationSteps?.selected_image_id).map((item, index) => {\n                return(\n                    <div key={index} className=\"upload-multiple-observation\">\n                        <div className=\"observation-image position-relative\">\n                            {/* {observationImages?.observation_count > 1 && */}\n                                <button type=\"button\" className=\"text-black border-0 rounded-0 shadow-none p-0 position-absolute btn\" ref={imageDelete} onClick={()=> remove(item?.id)}>\n                                <span>\n                                    <Icon icon=\"ci:close-big\" />\n                                </span>\n                                </button>\n                            {/* } */}\n                            <LazyLoad src={item?.image} alt={item?.name} />\n                        </div>\n                    </div>\n                )\n            })}\n        </>\n    )\n}\nImagePreview.propTypes = {\n    remove: PropTypes.func,\n};\nexport default ImagePreview;","import {Button, Modal, ModalBody} from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport Images from './../../static/images';\n\nconst DeleteItemConfirmationPopup = (props) => {\n    const {open, handleClose} = props;\n    return(\n        <>\n            <Modal\n                isOpen={open}\n                centered\n                toggle={handleClose}\n                backdrop={true}\n                keyboard={true}\n                className=\"delete-confirm_modal\"\n            >\n                <ModalBody className=\"text-center p-3\">\n                    <h2 className=\"mb-3\">Are you sure ?</h2>\n                    <i className=\"d-inline-block mx-auto remove-img w-100\"><img src={Images.RemoveData} alt=\"Remove data\" /></i>\n                    <p className=\"mb-5 opacity-75\">If you perform this action, we will only keep your first observation. If you wish to add more observation, you will need to enable this again & then you can add more.</p>\n                    <Button className=\"me-2 gray-outline-btn px-4\">Yes</Button>\n                    <Button className=\"px-4\" onClick={() => handleClose()}>No</Button>\n                </ModalBody>\n            </Modal>\n\n        </>\n    )\n}\n\nDeleteItemConfirmationPopup.propTypes = {\n    open: PropTypes.bool,\n    handleClose: PropTypes.func\n};\n\nexport default DeleteItemConfirmationPopup;","import {MultiImageTabs, Tabs} from \"../../helpers/observation\";\nimport {Icon} from \"@iconify/react/dist/iconify\";\nimport {\n    Button,\n    Col,\n    FormGroup,\n    Input,\n    Label,\n    Nav,\n    NavItem,\n    NavLink,\n    Row,\n    TabContent,\n    TabPane\n} from \"reactstrap\";\nimport ObservationUploadImg from \"./ObservationUploadImg\";\nimport {useEffect, useState} from \"react\";\nimport useObservations from \"../../hooks/useObservations\";\nimport ObservationCategory from \"./ObservationCategory\";\nimport ImagePreview from \"./ImagePreview\";\nimport PropTypes from \"prop-types\";\nimport ObservationUploadedImg from './ObservationUploadedImg';\nimport DeleteItemConfirmationPopup from \"../Popup/DeleteItemConfirmationPopup\";\n\n\nconst ObservationAfterImageUpload = (props) => {\n    const {\n        toggleTab,\n        handleImageInput,\n        error,\n        disableNext,\n        obvType,\n        remove,\n        detectImage,\n        step,\n        showUploadedPreview,\n        mode\n    } = props;\n    const {observationImages, observationType, setObservationCategory, setObservationType} = useObservations();\n    const [isMultiple, setIsMultiple] = useState(false);\n    const [activeTab, setActiveImageTab] = useState(MultiImageTabs.MultipleImages);\n    const [isOther] = useState(false);\n    const [isConfirmPopUp, setIsConfirmPopUp] = useState(true);\n    const [shouldShowConfirmation, setShouldShowConfirmation] = useState(false);\n\n\n    // Toggle Tabs\n    const toggleImageTab = (tab) => {\n        if (activeTab !== tab) {\n            setActiveImageTab(tab);\n        }\n    };\n\n    const handleMultipleCheck = (e) => {\n        console.log(isMultiple)\n        if (isMultiple) {\n            handleConfirmationPopUp();\n        }\n    }\n\n    const handleConfirmationPopUp = () => {\n        setShouldShowConfirmation(!isConfirmPopUp);\n        setIsConfirmPopUp(!isConfirmPopUp);\n    }\n\n    useEffect(() => {\n        if (isMultiple) {\n            handleConfirmationPopUp();\n        }\n    }, [isMultiple])\n\n\n    useEffect(() => {\n        setIsMultiple(observationImages?.data?.length > 1)\n    }, [observationImages?.data?.length])\n\n\n    useEffect(() => {\n        setObservationCategory((prev) => {\n            return {\n                ...prev,\n                is_other: isOther\n            }\n        })\n\n        if (!mode) {\n            if (isMultiple && activeTab === MultiImageTabs.MultipleImages) {\n                setObservationType((prev) => {\n                    return {\n                        ...prev,\n                        image_type: 2\n                    }\n                })\n            } else if (!isMultiple) {\n                setObservationType((prev) => {\n                    return {\n                        ...prev,\n                        image_type: 1\n                    }\n                })\n            } else {\n                setObservationType((prev) => {\n                    return {\n                        ...prev,\n                        image_type: 3\n                    }\n                })\n            }\n        } else {\n            setObservationType((prev) => {\n                return {\n                    ...prev,\n                    image_type: observationType?.image_type === 3 ? 3 : 2\n                }\n            });\n            setActiveImageTab(observationType?.image_type === 3 ? MultiImageTabs.ImageSequence : MultiImageTabs.MultipleImages);\n        }\n    }, [activeTab, isMultiple, isOther, setObservationCategory, setObservationType])\n\n    return (\n        <>\n            <Row>\n                {!mode &&\n                    <Col sm={12}>\n                        <FormGroup className=\"d-flex align-items-center position-relative\">\n                            <div className=\"custom-switch\">\n                                <input\n                                    id=\"toggleMultiple\"\n                                    type=\"checkbox\"\n                                    className=\"hidden\"\n                                    checked={isMultiple}\n                                    onClick={(e) => handleMultipleCheck(e)}\n                                    onChange={(e) => setIsMultiple(true)}\n                                />\n                                <label className=\"switchbox\" htmlFor=\"toggleMultiple\"/>\n                                <span>Multiple Observations (limit to 3)</span>\n                            </div>\n                        </FormGroup>\n                    </Col>\n                }\n                {isMultiple && !mode &&\n                    <Col sm={12}>\n                        <Nav tabs>\n                            <NavItem>\n                                <NavLink\n                                    className={activeTab === MultiImageTabs.MultipleImages ? 'active' : ''}\n                                    onClick={() => {\n                                        toggleImageTab(MultiImageTabs.MultipleImages);\n                                    }}\n                                >\n                                    <Icon icon=\"fluent:square-multiple-20-regular\" color=\"black\" width={24}\n                                          className=\"me-3\"/>\n                                    Multiple images\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink\n                                    className={activeTab === MultiImageTabs.ImageSequence ? 'active' : ''}\n                                    onClick={() => {\n                                        toggleImageTab(MultiImageTabs.ImageSequence);\n                                    }}\n                                >\n                                    <Icon icon=\"codicon:list-filter\" color=\"black\" width={24} className=\"me-3\"/>\n                                    <div>\n                                        Image Sequence\n                                        <p className=\"mb-0\">Images sequence extracted from a video</p>\n                                    </div>\n                                </NavLink>\n                            </NavItem>\n                        </Nav>\n                    </Col>\n                }\n                <Col sm={12}>\n                    <TabContent activeTab={activeTab}>\n                        <TabPane tabId={MultiImageTabs.MultipleImages}>\n                            <Row>\n                                {isMultiple &&\n                                    <Col sm={12}>\n                                        <ObservationUploadImg small={true} detectImage={detectImage} imageFormat={false}\n                                                              maxLimit={false} multiple={false}/>\n                                    </Col>\n                                }\n                                {showUploadedPreview &&\n                                    <Col sm={12}>\n                                        <div className=\"d-flex justify-content-start justify-content-sm-end d-sm-none\">\n                                            <ObservationUploadedImg obvType={obvType} step={step} error={error}\n                                                                    remove={remove}/></div>\n                                    </Col>\n                                }\n                                <Col sm={12}>\n                                    <ImagePreview remove={remove}/>\n                                </Col>\n\n                                <Col sm={12}>\n                                    <ObservationCategory obvType={obvType} error={error}/>\n                                </Col>\n                                <Col sm={12}>\n                                    <Button type=\"button\" className=\"mt-3\" disabled={!disableNext}\n                                            onClick={() => toggleTab(Tabs.DateTimeLocation)}>Continue</Button>\n                                </Col>\n                            </Row>\n                        </TabPane>\n                        <TabPane tabId={MultiImageTabs.ImageSequence}>\n                            <Row>\n                                {isMultiple &&\n                                    <Col sm={12}>\n                                        <div className=\"small-upload_box mb-3\">\n                                            <ObservationUploadImg detectImage={detectImage} imageFormat={false}\n                                                                  maxLimit={false} multiple={false}/>\n                                        </div>\n                                    </Col>\n                                }\n                                {showUploadedPreview &&\n                                    <Col sm={12}>\n                                        <div className=\"d-flex justify-content-end d-sm-none\"><ObservationUploadedImg\n                                            obvType={obvType} step={step} error={error} remove={remove}/></div>\n                                    </Col>\n                                }\n                                <Col sm={12}>\n                                    <ImagePreview remove={remove}/>\n                                </Col>\n                                <Col sm={12}>\n                                    <Button type=\"button\"\n                                            onClick={() => toggleTab(Tabs.DateTimeLocation)}>Continue</Button>\n                                </Col>\n                            </Row>\n                        </TabPane>\n                    </TabContent>\n                </Col>\n            </Row>\n\n            {isConfirmPopUp && shouldShowConfirmation &&\n                <DeleteItemConfirmationPopup open={isConfirmPopUp && shouldShowConfirmation}\n                                             handleClose={handleConfirmationPopUp}/>\n            }\n        </>\n    );\n};\n\nObservationAfterImageUpload.propTypes = {\n    remove: PropTypes.func,\n};\nexport default ObservationAfterImageUpload;\n","import { Row, Col, FormGroup, Input, Button } from \"reactstrap\"\nimport {Tabs} from \"../../helpers/observation\";\n\nimport \"../../assets/scss/component/observationEquipment.scss\";\nimport EquipmentForm from '../Shared/EquipmentForm';\nimport useObservations from \"../../hooks/useObservations\";\n\nconst EquipmentDetailsForm = (props) =>{\n    const {toggleTab,handleInput,handleOtherCamera,cameraDetails, error, step, isSwitchOn } = props;\n    const {\n        observationData\n    } = useObservations();\n    return (\n        <>\n        <Row>\n            <EquipmentForm step={step} handleInput1={handleInput} updateSetting={cameraDetails} error={error} isSwitchOn={isSwitchOn}/>\n\n            <Col md=\"12\">\n                <div className=\"border-line\"/>\n                <FormGroup>\n                    <h6>Elevation angle of your camera in degrees</h6>\n                    <Input\n                    type=\"number\"\n                    name=\"elevation_angle\"\n                    value={observationData?.elevation_angle ?? ''}\n                    placeholder=\"e.g. 20\"\n                    onChange={(e)=>handleOtherCamera(e)}\n                    />\n                    <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b>20</span>\n                </FormGroup>\n            </Col>\n            <Col md={12}>\n                <FormGroup>\n                    <h6>Link to the video of this event</h6>\n                    <Input\n                    type=\"url\"\n                    name=\"video_url\"\n                    value={observationData?.video_url ?? ''}\n                    onChange={(e)=>handleOtherCamera(e)}\n                    placeholder=\"e.g. https://www.youtube.com/watch?v=PjZ2Y2nn000\"\n                    />\n                    <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b>https://www.youtube.com/watch?v=PjZ2Y2nn000</span>\n                </FormGroup>\n            </Col>\n            <Col md={12}>\n                <FormGroup>\n                    <h6>Please share the story of your capture</h6>\n                    <div className=\"border-line my-2\"/>\n                    <Input\n                        type=\"textarea\"\n                        name=\"story\"\n                        value={observationData?.story ?? ''}\n                        onChange={(e)=>handleOtherCamera(e)}\n                        placeholder=\"We would love to hear more about your experience.\"\n                    />\n                </FormGroup>\n            </Col>\n            <Col md={12}>\n                <Button className=\"gray-outline-btn me-2\"  onClick={() =>toggleTab(Tabs.DateTimeLocation)}>Back</Button>\n                <Button type=\"submit\" disabled={(!(cameraDetails?.camera_type && cameraDetails?.focal_length && cameraDetails?.aperture)) }>Submit</Button>\n            </Col>\n        </Row>\n        </>\n    )\n}\n\nexport default EquipmentDetailsForm;","import {\n  Button,\n  Col,\n  Container,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Nav,\n  NavItem,\n  NavLink,\n  Row,\n  TabContent,\n  TabPane,\n  UncontrolledAlert,\n} from \"reactstrap\";\nimport \"../../assets/scss/component/uploadObservationImage.scss\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport useObservations from \"../../hooks/useObservations\";\nimport useAuth from \"../../hooks/useAuth\";\nimport axios from \"../../api/axios\";\nimport { baseURL, cameraSettingFields, routeUrls } from \"../../helpers/url\";\nimport { Tabs } from \"../../helpers/observation\";\n\nimport ObservationLocation from \"../../components/Observation/ObservationLocation\";\nimport ObservationUploadedImg from \"../../components/Observation/ObservationUploadedImg\";\nimport ObservationImages from \"../../components/Observation/ObservationImages\";\nimport ObservationProgress from \"../../components/Observation/ObservationProgress\";\nimport ObservationAfterImageUpload from \"../../components/Observation/ObservationAfterImageUpload\";\nimport EquipmentDetailsForm from \"../../components/Observation/EquipmentDetailsForm\";\nimport Loader from \"../../components/Shared/Loader\";\n\nconst AddObservation = () => {\n  const { auth } = useAuth();\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    observationSteps,\n    setObservationSteps,\n    observationImages,\n    setObservationImages,\n    observationData,\n    setObservationData,\n    observationType,\n    setObservationType,\n    cameraDetails,\n    setCameraDetails,\n  } = useObservations();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [activeTab, setActiveTab] = useState(Tabs.ObservationImages);\n  const [next, setNext] = useState(false);\n  const [isSwitchOn, setSwitchOn] = useState(false);\n  const [updateMode, setUpdateMode] = useState(false);\n  const [reset, setReset] = useState(false);\n  const [success, setSuccess] = useState(null);\n  const [error, setError] = useState(null);\n  const [deletedImage, setDeletedImage] = useState(null);\n  const [draft, setDraft] = useState(true);\n  const [draftData, setDraftData] = useState();\n\n  let disabledLocation = false;\n  for (let index = 0; index < observationData?.map_data?.length; index++) {\n    if (\n      observationData?.map_data?.[index] &&\n      observationData?.map_data?.[index]?.category_map?.category.length > 0\n    ) {\n      disabledLocation = true;\n    } else {\n      disabledLocation = false;\n      break;\n    }\n  }\n\n  let disabledEquipment = false;\n  for (let index = 0; index < observationData?.map_data?.length; index++) {\n    if (\n      observationData?.map_data?.[index] &&\n      observationData?.map_data?.[index]?.azimuth &&\n      observationData?.map_data?.[index]?.obs_time &&\n      observationData?.map_data?.[index]?.obs_date &&\n      observationData?.map_data?.[index]?.timezone\n    ) {\n      disabledEquipment = true;\n    } else {\n      disabledEquipment = false;\n      break;\n    }\n  }\n\n  const disabledLocationTab =\n    observationData?.image_type !== 3 ? disabledLocation && next : next;\n  const disabledEquipmentTab = disabledLocation && next && disabledEquipment;\n\n  // Toggle Tabs\n  const toggleTab = (tab) => {\n    if (activeTab !== tab) {\n      setActiveTab(tab);\n    }\n    window.scrollTo(0, 0);\n  };\n\n  const handleInput = (e) => {\n    let name = e.target.name,\n      value = e.target.value;\n    setCameraDetails({\n      ...cameraDetails,\n      [name]: value,\n    });\n\n    setObservationData((prev) => {\n      return {\n        ...prev,\n        camera: cameraDetails,\n      };\n    });\n  };\n\n  const handleOtherCamera = (e) => {\n    let name = e.target.name,\n      value = e.target.value;\n\n    setObservationData((prev) => {\n      return {\n        ...prev,\n        [name]: value,\n      };\n    });\n  };\n\n  const handleImageInput = (e, address = null) => {\n    let observationArray = { ...observationImages };\n    if (e === \"address\") {\n      observationArray.data[observationImages?.selected_image_index][\n        \"location\"\n      ] = address;\n      if (observationArray.data[1]) {\n        observationArray.data[1].category_map[\"location\"] = address;\n      }\n      if (observationArray.data[2]) {\n        observationArray.data[2].category_map[\"location\"] = address;\n      }\n    } else {\n      let name = e.target.name,\n        value = e.target.value;\n\n      if (name === \"is_other\") {\n        observationArray.data[\n          observationImages?.selected_image_index\n        ].category_map[name] = e.target.checked;\n        if (observationData?.image_type === 3) {\n          if (observationArray.data[1]) {\n            observationArray.data[1].category_map[name] = e.target.checked;\n          }\n          if (observationArray.data[2]) {\n            observationArray.data[2].category_map[name] = e.target.checked;\n          }\n        }\n      } else {\n        if (name === \"is_precise_azimuth\") {\n          observationArray.data[observationImages?.selected_image_index][name] =\n            e.target.checked === true ? 1 : 0;\n          if (observationData?.image_type === 3) {\n            if (observationArray.data[1]) {\n              observationArray.data[1][\"is_precise_azimuth\"] =\n                e.target.checked === true ? 1 : 0;\n            }\n            if (observationArray.data[2]) {\n              observationArray.data[2][\"is_precise_azimuth\"] =\n                e.target.checked === true ? 1 : 0;\n            }\n          }\n          if (e.target.checked === false) {\n            observationArray.data[observationImages?.selected_image_index][\n              \"azimuth\"\n            ] =\n              observationArray && observationArray.data\n                ? observationArray.data[\n                    observationImages?.selected_image_index\n                  ][\"azimuth\"]\n                : undefined;\n            if (observationData?.image_type === 3) {\n              if (observationArray.data[1]) {\n                observationArray.data[1][\"azimuth\"] =\n                  observationArray?.data?.[0][\"azimuth\"];\n              }\n              if (observationArray.data[2]) {\n                observationArray.data[2][\"azimuth\"] =\n                  observationArray?.data?.[0][\"azimuth\"];\n              }\n            }\n          }\n        } else {\n          observationArray.data[observationImages?.selected_image_index][name] =\n            value;\n          if (observationData?.image_type === 3) {\n            if (observationArray.data[1]) {\n              observationArray.data[1][name] = value;\n            }\n            if (observationArray.data[2]) {\n              observationArray.data[2][name] = value;\n            }\n          }\n        }\n      }\n    }\n    setObservationImages(observationArray);\n  };\n\n  const handlesetDraft = () => {\n    setIsLoading(true);\n    sendData(1).then((r) => r);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setDraft(0);\n    sendData(0).then((r) => r);\n  };\n\n  const sendData = async (draft) => {\n    const cloneDeep = require(\"lodash.clonedeep\");\n    const formData = new FormData();\n    const finalData = cloneDeep(observationData);\n    finalData?.map_data?.map((item, index) => {\n      delete item[\"image\"];\n      formData.append(\"image_\" + index, item.item);\n      return true;\n    });\n    if (draft === 1) {\n      finalData.is_draft = draft;\n    }\n    finalData.camera = cameraDetails\n      ? cameraDetails\n      : auth?.camera\n      ? auth?.camera?.id\n      : null;\n    formData.append(\"data\", JSON.stringify(finalData));\n\n    if (!updateMode) {\n      await axios\n        .post(baseURL.api + \"/observation/upload_observation/\", formData, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${auth?.token?.access}`,\n          },\n        })\n        .then((response) => {\n          setError(null);\n          setSuccess({\n            data: response?.data,\n            status: response?.status,\n            message: response?.message,\n          });\n          setIsLoading(false);\n          window.scrollTo(0, 0);\n          setTimeout(function () {\n            handleReset();\n          }, 500);\n        })\n        .catch((error) => {\n          console.log(error.response);\n          setIsLoading(false);\n          setError({\n            data: error?.response?.data,\n            status: error?.response?.status,\n            message: error?.message,\n          });\n        });\n    } else {\n      await axios\n        .put(\n          baseURL.api +\n            `/observation/update_observation/${observationSteps?.mode?.id}/`,\n          formData,\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${auth?.token?.access}`,\n            },\n          }\n        )\n        .then((response) => {\n          setError(null);\n          setSuccess({\n            data: response?.data,\n            status: response?.status,\n            message: response?.message,\n          });\n          setIsLoading(false);\n          window.scrollTo(0, 0);\n          setTimeout(function () {\n            handleReset();\n          }, 500);\n        })\n        .catch((error) => {\n          console.log(error.response);\n          setIsLoading(false);\n          setError({\n            data: error?.response?.data,\n            status: error?.response?.status,\n            message: error?.message,\n          });\n        });\n    }\n  };\n\n  const getCameraDetail = async (e) => {\n    if (e.target.checked === true) {\n      await axios\n        .get(baseURL.api + \"/users/camera_setting/\", {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${auth?.token?.access}`,\n          },\n        })\n        .then((success) => {\n          setCameraDetails(success?.data);\n        })\n        .catch((error) => {\n          console.log(error.response);\n        });\n    } else {\n      setCameraDetails(cameraSettingFields);\n    }\n  };\n\n  const handleContinue = () => {\n    setNext(!next);\n  };\n\n  const handleReset = (e) => {\n    navigate(\"/observations\");\n    setReset(true);\n    setObservationSteps({\n      total: 3,\n      active: 1,\n      mode: {\n        update: true,\n        id: false,\n      },\n    });\n    setObservationImages([]);\n    setObservationData(null);\n    console.clear();\n  };\n\n  const removeItem = (id) => {\n    let newImage = [];\n    observationData?.map_data\n      ?.filter((item) => item.id !== id)\n      .map((item, index) => {\n        return newImage.push(item);\n      });\n    if (newImage.length > 0) {\n      setObservationSteps((prev) => {\n        return {\n          ...prev,\n          selected_image_id: newImage?.[0].id,\n          selected_image_index: 0,\n          observation_count: newImage.length,\n        };\n      });\n      setObservationImages((prev) => {\n        return {\n          ...prev,\n          observation_count: newImage.length,\n          selected_image_id: newImage?.[0].id,\n          selected_image_index: 0,\n          data: newImage,\n        };\n      });\n      setObservationData((prev) => {\n        return {\n          ...prev,\n          map_data: newImage,\n        };\n      });\n      setDeletedImage(id);\n    } else {\n      window.location.reload();\n    }\n  };\n\n  const showUploadedPreview = () => {\n    return !(\n      !(\n        observationImages?.data &&\n        next &&\n        activeTab === Tabs.ObservationImages\n      ) &&\n      !(\n        activeTab === Tabs.DateTimeLocation &&\n        !(observationType?.image_type === 3) &&\n        !(observationType?.image_type === 1)\n      )\n    );\n  };\n\n  const getFileName = (url) => {\n    return url.split(/[#?]/)[0].split(\"/\").pop().trim();\n  };\n\n  const getObservationDataForUpdate = async (obvId) => {\n    await axios\n      .get(baseURL.api + `/observation/get_draft_data/${obvId}/`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${auth?.token?.access}`,\n        },\n      })\n      .then((response) => {\n        let data = response?.data?.data;\n        setDraftData({\n          image_type: data.image_type,\n          elevation_angle: data.elevation_angle,\n          video_url: data.video_url,\n          camera: data.camera_data,\n          question_field_one: data.question_field_one,\n          question_field_two: data.question_field_two,\n          story: data.story,\n          map_data: data.images,\n        });\n        setCameraDetails(data?.camera_data);\n        setUpdateMode(true);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const toBase64 = (file) =>\n    new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = (error) => reject(error);\n    });\n\n  useEffect(() => {\n    draftData?.map_data?.map((item, index) => {\n      let imageUrl = item.image,\n        fileName = getFileName(imageUrl);\n      return fetch(imageUrl)\n        .then(async (response) => {\n          const contentType = response.headers.get(\"content-type\");\n          const blob = await response\n            .blob()\n            .catch((error) => console.log(\"blob error\", error));\n          const file = new File([blob], fileName, { contentType });\n          const image = await toBase64(file).catch((error) =>\n            console.log(\"base64 Error\", error)\n          );\n          item.compressed_image = null;\n          setTimeout(function () {\n            item.item = file;\n            item.image = image;\n            item.name = file.name;\n            item.lastModified = file.lastModified;\n          }, 500);\n          return file;\n        })\n        .catch((error) =>\n          console.log(\n            `Error converting the CDN image to file object at index [${index}] [${error}]`\n          )\n        );\n    });\n  }, [draftData, setObservationImages]);\n\n  useEffect(() => {\n    let id = observationSteps?.mode?.id,\n      updateUrl = location.pathname === `/${routeUrls.observationsUpdate}`,\n      obvType = observationSteps?.mode?.type;\n\n    if (updateUrl && obvType === \"draft\") {\n      getObservationDataForUpdate(id).then((r) => r);\n      setObservationSteps((prev) => {\n        return {\n          ...prev,\n          converted: true,\n        };\n      });\n    }\n\n    if (updateUrl && obvType !== \"draft\") {\n      return navigate(\"/observations\");\n    }\n  }, [location?.pathname, updateMode, observationSteps?.converted]);\n\n  useEffect(() => {\n    let existingObvImageData = { ...observationImages },\n      obvType = { ...observationType };\n\n    setObservationType({\n      ...obvType,\n      image_type: draftData?.image_type === 2 ? 1 : draftData?.image_type,\n    });\n    setObservationImages({\n      ...existingObvImageData,\n      data: draftData?.map_data,\n      selected_image_id: draftData?.map_data[0].id,\n      selected_image_index: 0,\n      observation_count: draftData?.map_data.length,\n    });\n  }, [draftData, setObservationImages]);\n\n  // Set Progress Bar\n  useEffect(() => {\n    function setActiveTabForProgressBar() {\n      if (activeTab === Tabs.ObservationImages) {\n        return 1;\n      } else if (activeTab === Tabs.DateTimeLocation) {\n        return 2;\n      } else {\n        return 3;\n      }\n    }\n\n    setObservationSteps((prev) => {\n      return {\n        ...prev,\n        active: setActiveTabForProgressBar(),\n        selected_image_id: observationImages?.selected_image_id,\n        selected_image_index: observationImages?.selected_image_index,\n        is_draft: draft,\n      };\n    });\n  }, [activeTab, draft, observationImages, setObservationSteps]);\n\n  return (\n    <div className=\"position-relative\">\n      {isLoading && <Loader fixContent={true} />}\n      {success && (\n        <UncontrolledAlert\n          color=\"success\"\n          data-dismiss=\"alert\"\n          dismissible=\"true\"\n          className=\"text-center mt-3 d-inline-block w-100\"\n        >\n          {success?.data?.success}\n        </UncontrolledAlert>\n      )}\n      <Form\n        className=\"observation-form upload-observation-form-main\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"common-top-button-wrapper\">\n          <Container>\n            <div className=\"common-top-button-wrapper-inner\">\n              <Button\n                className=\"gray-outline-btn\"\n                onClick={handleReset}\n                disabled={!observationImages?.data}\n              >\n                Cancel\n              </Button>\n              <div className=\"top-right-btn\">\n                <Button\n                  className=\"gray-outline-btn me-2 me-sm-3\"\n                  onClick={handlesetDraft}\n                  disabled={!next}\n                >\n                  Save as draft\n                </Button>\n                <Button\n                  type=\"submit\"\n                  disabled={\n                    !(\n                      cameraDetails?.camera_type &&\n                      cameraDetails?.focal_length &&\n                      cameraDetails?.aperture\n                    )\n                  }\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </Container>\n        </div>\n        <section className=\"upload-observation-form-inner\">\n          <Container>\n            <Row>\n              <Col md={3} sm={12}>\n                <div className=\"observation-form-left-tab\">\n                  <ObservationProgress step={observationSteps} />\n                  <Nav tabs className=\"flex-column\">\n                    <NavItem>\n                      <NavLink\n                        className={\n                          activeTab === Tabs.ObservationImages ? \"active\" : \"\"\n                        }\n                        onClick={() => {\n                          if (\n                            observationData?.map_data?.[0]?.category_map\n                              ?.category &&\n                            next\n                          ) {\n                            toggleTab(Tabs.ObservationImages);\n                          }\n                        }}\n                      >\n                        Observation Images\n                      </NavLink>\n                    </NavItem>\n                    <NavItem>\n                      <NavLink\n                        className={`${\n                          activeTab === Tabs.DateTimeLocation ? \"active\" : \"\"\n                        } ${disabledLocationTab ? \"\" : \"disabled\"}`}\n                        onClick={() => {\n                          if (disabledLocationTab) {\n                            toggleTab(Tabs.DateTimeLocation);\n                          }\n                        }}\n                      >\n                        Date, Time & Location\n                      </NavLink>\n                    </NavItem>\n                    <NavItem>\n                      <NavLink\n                        className={`${\n                          activeTab === Tabs.EquipmentDetails ? \"active\" : \"\"\n                        } ${disabledEquipmentTab ? \"\" : \"disabled\"}`}\n                        onClick={() => {\n                          if (disabledEquipmentTab) {\n                            toggleTab(Tabs.EquipmentDetails);\n                          }\n                        }}\n                      >\n                        Equipment Details\n                      </NavLink>\n                    </NavItem>\n                  </Nav>\n                </div>\n              </Col>\n\n              <Col\n                md={\n                  observationImages?.data?.length > 0 &&\n                  next &&\n                  !(activeTab === Tabs.EquipmentDetails)\n                    ? 7\n                    : 9\n                }\n                sm={\n                  observationImages?.data?.length > 0 &&\n                  next &&\n                  !(activeTab === Tabs.EquipmentDetails)\n                    ? 9\n                    : 12\n                }\n              >\n                <div className=\"observation-form-middle-tab\">\n                  <TabContent activeTab={activeTab}>\n                    <TabPane tabId={Tabs.ObservationImages}>\n                      {next ? (\n                        <ObservationAfterImageUpload\n                          mode={updateMode}\n                          showUploadedPreview={showUploadedPreview}\n                          obvType={observationType}\n                          step={observationSteps}\n                          error={error}\n                          detectImage={deletedImage}\n                          remove={removeItem}\n                          toggleTab={toggleTab}\n                          disableNext={disabledLocationTab}\n                          handleImageInput={handleImageInput}\n                        />\n                      ) : (\n                        <ObservationImages\n                          mode={updateMode}\n                          detectImage={deletedImage}\n                          remove={removeItem}\n                          proceedNext={() => handleContinue()}\n                        />\n                      )}\n                    </TabPane>\n                    <TabPane\n                      tabId={Tabs.DateTimeLocation}\n                      className=\"observation_location\"\n                    >\n                      {showUploadedPreview() && (\n                        <div className=\"observation-form-right-tab d-flex justify-content-start justify-content-sm-end d-sm-none position-relative position-sm-sticky\">\n                          <ObservationUploadedImg\n                            obvType={observationType}\n                            step={observationSteps}\n                            error={error}\n                            remove={removeItem}\n                          />\n                        </div>\n                      )}\n                      {observationImages?.data && (\n                        <ObservationLocation\n                          mode={updateMode}\n                          obvType={observationType}\n                          step={observationSteps}\n                          error={error}\n                          toggleTab={toggleTab}\n                          handleImageInput={handleImageInput}\n                          disableNext={disabledEquipmentTab}\n                        />\n                      )}\n                    </TabPane>\n                    <TabPane\n                      tabId={Tabs.EquipmentDetails}\n                      className=\"observation_equipment\"\n                    >\n                      {auth?.user?.camera && (\n                        <FormGroup\n                          check\n                          className=\"d-flex align-items-center position-relative mb-3\"\n                        >\n                          <Label check>\n                            <Input\n                              type=\"checkbox\"\n                              name=\"profileData\"\n                              checked={isSwitchOn}\n                              disabled={!auth?.user?.camera}\n                              onChange={(e) => {\n                                setSwitchOn(!isSwitchOn);\n                                getCameraDetail(e).then((r) => r);\n                              }}\n                            />\n                            Pull data from my profile\n                          </Label>\n                        </FormGroup>\n                      )}\n                      <EquipmentDetailsForm\n                        step={observationSteps}\n                        isSwitchOn={isSwitchOn}\n                        error={error}\n                        handleInput={handleInput}\n                        toggleTab={toggleTab}\n                        cameraDetails={cameraDetails}\n                        handleOtherCamera={handleOtherCamera}\n                        getCameraDetail={getCameraDetail}\n                      />\n                    </TabPane>\n                  </TabContent>\n                </div>\n              </Col>\n\n              {showUploadedPreview() && (\n                <Col\n                  md={2}\n                  sm={3}\n                  className=\"d-none d-sm-block overflow-hidden\"\n                >\n                  <div className=\"observation-form-right-tab\">\n                    <ObservationUploadedImg\n                      obvType={observationType}\n                      step={observationSteps}\n                      error={error}\n                      remove={removeItem}\n                    />\n                  </div>\n                </Col>\n              )}\n            </Row>\n          </Container>\n        </section>\n      </Form>\n    </div>\n  );\n};\n\nexport default AddObservation;\n","import { Outlet } from \"react-router-dom\";\nimport {createContext, useEffect, useState} from \"react\";\nimport { cameraSettingFields } from \"../../helpers/url\";\n\nexport const ObservationContext = createContext({});\n\nconst Observations = () => {\n    const [observationType, setObservationType] = useState({\n        image_type: 1\n    });\n\n    const [observationSteps, setObservationSteps] = useState({\n        total: 3,\n        active: 1,\n        mode: {\n            update: false\n        }\n    });\n    const [observationImages, setObservationImages] = useState([]);\n    const [cameraDetails, setCameraDetails] = useState(cameraSettingFields);\n    const [observationCategory, setObservationCategory] = useState([]);\n    const [observationData, setObservationData] = useState({});\n\n    useEffect(()=> {\n        let data = (observationImages?.data) ? [...observationImages?.data] : []\n        setObservationData({\n            // is_draft: observationSteps?.is_draft ? 1 : 0,\n            image_type: observationType?.image_type,\n            map_data: data,\n            elevation_angle: null,\n            video_url : ''\n        })\n    }, [observationImages?.data, observationSteps?.is_draft, observationType?.image_type])\n\n    return(\n        <ObservationContext.Provider value={\n            {\n                observationType,\n                setObservationType,\n                observationSteps,\n                setObservationSteps,\n                observationImages,\n                setObservationImages,\n                observationCategory,\n                setObservationCategory,\n                observationData,\n                setObservationData,\n                cameraDetails, \n                setCameraDetails\n            }\n        }>\n            <Outlet />\n        </ObservationContext.Provider>\n    )\n}\n\nexport default Observations;"],"names":["country","countryCode","svg","style","width","height","title","props","handleInput1","updateSetting","error","md","className","type","name","placeholder","value","camera_type","onChange","e","data","maxLength","focal_length","aperture","iso","shutter_speed","fps","question_field_one","question_field_two","maxLimit","imageFormat","multiple","handleUploadImage","small","handleObvAdd","defaultUploadBox","blogUpload","htmlFor","icon","color","id","accept","count","size","duplicate","onClick","src","alt","imageClass","converted","useState","imageSrc","setImageSrc","imageRef","setImageRef","useEffect","observer","didCancel","IntersectionObserver","entries","forEach","entry","intersectionRatio","isIntersecting","unobserve","threshold","rootMargin","observe","ref","onLoad","event","target","classList","add","onError","Tabs","ObservationImages","DateTimeLocation","EquipmentDetails","MultiImageTabs","MultipleImages","ImageSequence","imageDetails","Details","Equipment","Comments","obvType","default","verified","unverified","denied","draft","uploadImageDefaultState","random","baseImage","item","userLocation","sameAsFirstMap","sameAsFirstDate","image","lastModified","latitude","longitude","location","country_code","obs_date","obs_time","timezone","azimuth","time_accuracy","is_precise_azimuth","category_map","category","is_other","other_value","directionValue","angle","getdirectionDegree","key","degree","getdirectionAngle","observationImages","useContext","ObservationContext","useDebugValue","GoogleMapsAPI","process","Geocode","Map","getCity","addressArray","i","length","types","long_name","getCountry","short_name","getArea","j","getState","setState","onInfoWindowClose","onMarkerDragEnd","newLat","latLng","lat","newLng","lng","then","response","address","results","formatted_address","address_components","city","area","state","short_address","filter","x","undefined","toString","markerPosition","mapPosition","handleState","console","onPlaceSelected","place","latValue","geometry","lngValue","center","this","log","Number","nextProps","nextState","AsyncMap","withGoogleMap","google","defaultZoom","zoom","defaultCenter","defaultOptions","disableDefaultUI","draggable","onDragEnd","position","searchInputClass","onClose","padding","margin","googleMapURL","loadingElement","containerElement","containerPosition","mapElement","mapContainer","borderRadius","mapRadius","Component","auth","useAuth","useObservations","setObservationImages","observationSteps","observationCategory","setObservationCategory","setCategory","oldCategory","setOldCategory","isChecked","setIsChecked","selectedCategory","setSelectedCategory","ObservationData","errorData","Object","values","isPopoverContentOpen","setIsPopoverContentOpen","tippyRef","useRef","ImageCarousel","carouselContent","Images","map","index","navigation","modules","Navigation","PopoverContent","isOpen","categoryList","newCategory","toLowerCase","replaceAll","push","prev","updatedCategory","prevCategory","selected_image_index","image_type","selected_image_id","imagItem","sm","checked","find","list","hidden","parseFloat","includes","filterValue","onCategoryChange","content","interactive","appendTo","document","body","animation","theme","reference","showCategory","toggleTab","handleImageInput","step","disableNext","fref","address1","setAddress","initialAddress","setInitialAddress","isLoaded","setIsLoaded","observationData","isActiveDire","setActiveDire","angleDegree","setAngleDegree","isTimezoneOpen","setIsTimezoneOpen","searchTimeZone","setSearchTimeZone","setSameAsMap","sameAsDateTime","setSameAsDateTime","current","handleChangeLatLng","handleCopyData","observationArray","observationAddress","keys","observationMap","copyImages","k","active","xxl","check","MapWrapper","flag","lg","ReactCountryFlag","addressState","handleChangeLat","handleChangeLng","max","moment","Date","format","toggle","header","findTimeZone","indexOf","direction","directionWrapper","querySelector","getAngleName","getElementById","getAttribute","remove","selectDirection","dirData","min","disabled","existingObvImageData","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","handleUpdateImage","fileList","files","catch","markTabActive","preview","setPreview","activeTab","setActiveTab","useLayoutEffect","tab","LazyLoad","detectImage","mode","setCameraDetails","images","setImages","setError","user","location_metadata","observation_count","cameraSettingFields","UploadImageUI","Array","from","onloadend","base64String","replace","Math","substring","fileSize","toFixed","prevState","proceedNext","isMultiple","progress","setProgress","total","imageDelete","open","handleClose","centered","backdrop","keyboard","showUploadedPreview","observationType","setObservationType","setIsMultiple","setActiveImageTab","isOther","isConfirmPopUp","setIsConfirmPopUp","shouldShowConfirmation","setShouldShowConfirmation","toggleImageTab","handleConfirmationPopUp","tabs","tabId","handleInput","handleOtherCamera","cameraDetails","isSwitchOn","EquipmentForm","elevation_angle","video_url","story","isLoading","setIsLoading","setObservationSteps","setObservationData","useLocation","navigate","useNavigate","next","setNext","setSwitchOn","updateMode","setUpdateMode","setReset","success","setSuccess","deletedImage","setDeletedImage","setDraft","draftData","setDraftData","disabledLocation","map_data","disabledEquipment","disabledLocationTab","disabledEquipmentTab","window","scrollTo","sendData","cloneDeep","require","formData","FormData","finalData","append","is_draft","camera","JSON","stringify","axios","baseURL","headers","Authorization","token","access","status","message","setTimeout","handleReset","getCameraDetail","update","clear","removeItem","newImage","reload","getObservationDataForUpdate","obvId","camera_data","imageUrl","fileName","url","split","pop","trim","getFileName","fetch","contentType","get","blob","File","compressed_image","updateUrl","pathname","routeUrls","r","Loader","fixContent","dismissible","onSubmit","preventDefault","createContext","Provider"],"sourceRoot":""}