{"version":3,"file":"static/js/286.82d1b05f.chunk.js","mappings":"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","sources":["components/Auth/Login.jsx","pages/Auth/LoginPage.jsx"],"sourcesContent":["import {Button, Form, FormGroup, FormText, Input} from \"reactstrap\";\nimport axios from \"../../api/axios\";\nimport {baseURL} from \"../../helpers/url\";\nimport {useEffect, useState} from \"react\";\nimport useAuth from \"../../hooks/useAuth\";\nimport {useNavigate} from \"react-router-dom\";\nimport {routeUrls} from '../../helpers/url';\n\nconst Login = (props) => {\n    const {cp} = props;\n    const {setAuth, auth, persist, setPersist} = useAuth();\n    const navigate = useNavigate();\n\n    const [user, setUser] = useState({\n        email: \"\",\n        password: \"\"\n    });\n    const [error, setError] = useState('');\n    const [token, setToken] = useState();\n\n    const handleInput = (e) => {\n        e.preventDefault();\n        let name = e.target.name,\n            value = e.target.value;\n        setUser({\n            ...user,\n            [name]: value\n        })\n    }\n\n    const handleLogin = async (e) => {\n        e.preventDefault();\n        await axios.post(baseURL.token, user)\n            .then((response) => {\n                if (response.status === 200) {\n                    const superuser = response?.data?.is_superuser\n                    setPersist(prev => !prev);\n\n                    setError('');\n                    setAuth({\n                        token: {\n                            access: response?.data?.access,\n                            refresh: response?.data?.refresh,\n                        },\n                        user: response?.data\n                    });\n\n                    setToken(response?.data)\n\n                    localStorage.setItem('refresh', response?.data?.refresh);\n                    localStorage.removeItem('camera');\n\n                    fetchCategory(response?.data?.access).then(r => r);\n\n                    if (superuser) {\n                        navigate(routeUrls.dashboard, {replace: true});\n                    } else {\n                        navigate(routeUrls.home, {replace: true});\n                    }\n                }\n            })\n            .catch((error) => {\n                if (!error?.response) {\n                    console.log(error?.message)\n                    setError(prev => {\n                        return {\n                            ...prev,\n                            server: error?.message\n                        }\n                    });\n                } else if (error?.response) {\n                    setError({\n                        'status': error.response.status,\n                        'message': error.response.statusText,\n                        'data': error.response.data\n                    });\n                } else if (error?.response?.status === 401) {\n                    console.log('unauthorized')\n                } else {\n                    console.log(error?.response?.statusText)\n                }\n            });\n    }\n\n    const fetchCategory = async (token) => {\n        await axios.get(baseURL.api + '/observation/get_category_list/', {\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        })\n            .then((response) => {\n                setAuth(prev => {\n                    return {\n                        ...prev,\n                        categoryList: response?.data\n                    }\n                });\n            })\n            .catch((error) => {\n                console.log(error)\n            })\n    }\n\n    useEffect(() => {\n        localStorage.setItem(\"persist\", persist);\n    }, [persist])\n\n    return (\n        <>\n            {error?.data &&\n                <p className=\"text-danger small mb-4 fw-bolder\">{error?.data?.detail}</p>\n            }\n            {error?.server &&\n                <p className=\"text-danger text-center small mb-4 fw-bolder\">{error?.server}</p>\n            }\n            <Form onSubmit={handleLogin}>\n                <FormGroup>\n                    <Input\n                        type=\"email\"\n                        name=\"email\"\n                        placeholder=\"Email address\"\n                        autoComplete=\"off\"\n                        required\n                        onChange={(e) => handleInput(e)}\n                    />\n                </FormGroup>\n                <FormGroup>\n                    <Input\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        required\n                        onChange={(e) => handleInput(e)}\n                    />\n                </FormGroup>\n                <FormText className=\"forgot-password\">\n                    <Button type=\"button\" onClick={() => cp()}>Forgot Password?</Button>\n                </FormText>\n                <FormGroup>\n                    <Button type=\"submit\" className=\"modal-btn\" disabled={!(user?.email && user?.password)}>\n                        Login\n                    </Button>\n                </FormGroup>\n            </Form>\n        </>\n    )\n}\nexport default Login;","import Login from \"../../components/Auth/Login\";\nimport { Container } from \"reactstrap\";\nimport useAuth from \"../../hooks/useAuth\";\nimport { Navigate, useLocation } from \"react-router-dom\";\nimport \"../../assets/scss/component/modal.scss\";\nimport { routeUrls } from './../../helpers/url';\n\nconst LoginPage = () => {\n  const { auth, persist } = useAuth();\n  const location = useLocation();\n\n  if (auth && persist) {\n    return <Navigate to={routeUrls.home} state={{ from: location }} replace />;\n  }\n  return (\n    <section className=\"min-vh-100 d-flex align-items-center justify-content-center\">\n      <Container>\n        <div className=\"common-modal modal-content-page\">\n          <div className=\"modal-content \">\n            <div className=\"modal-body\">\n              <Login />\n            </div>\n          </div>\n        </div>\n      </Container>\n    </section>\n  );\n};\nexport default LoginPage;\n"],"names":["props","cp","useAuth","setAuth","persist","auth","setPersist","navigate","useNavigate","useState","email","password","user","setUser","error","setError","setToken","handleInput","e","preventDefault","name","target","value","handleLogin","axios","baseURL","then","response","status","superuser","data","is_superuser","prev","token","access","refresh","localStorage","setItem","removeItem","fetchCategory","r","routeUrls","replace","catch","statusText","console","log","message","server","headers","categoryList","useEffect","className","detail","onSubmit","type","placeholder","autoComplete","required","onChange","onClick","disabled","location","useLocation","to","state","from"],"sourceRoot":""}