{"version":3,"file":"static/js/286.82d1b05f.chunk.js","mappings":"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","sources":["components/Auth/Login.jsx","pages/Auth/LoginPage.jsx"],"sourcesContent":["import {Button, Form, FormGroup, FormText, Input} from \"reactstrap\";\r\nimport axios from \"../../api/axios\";\r\nimport {baseURL} from \"../../helpers/url\";\r\nimport {useEffect, useState} from \"react\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {routeUrls} from '../../helpers/url';\r\n\r\nconst Login = (props) => {\r\n    const {cp} = props;\r\n    const {setAuth, auth, persist, setPersist} = useAuth();\r\n    const navigate = useNavigate();\r\n\r\n    const [user, setUser] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n    const [error, setError] = useState('');\r\n    const [token, setToken] = useState();\r\n\r\n    const handleInput = (e) => {\r\n        e.preventDefault();\r\n        let name = e.target.name,\r\n            value = e.target.value;\r\n        setUser({\r\n            ...user,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        await axios.post(baseURL.token, user)\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    const superuser = response?.data?.is_superuser\r\n                    setPersist(prev => !prev);\r\n\r\n                    setError('');\r\n                    setAuth({\r\n                        token: {\r\n                            access: response?.data?.access,\r\n                            refresh: response?.data?.refresh,\r\n                        },\r\n                        user: response?.data\r\n                    });\r\n\r\n                    setToken(response?.data)\r\n\r\n                    localStorage.setItem('refresh', response?.data?.refresh);\r\n                    localStorage.removeItem('camera');\r\n\r\n                    fetchCategory(response?.data?.access).then(r => r);\r\n\r\n                    if (superuser) {\r\n                        navigate(routeUrls.dashboard, {replace: true});\r\n                    } else {\r\n                        navigate(routeUrls.home, {replace: true});\r\n                    }\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                if (!error?.response) {\r\n                    console.log(error?.message)\r\n                    setError(prev => {\r\n                        return {\r\n                            ...prev,\r\n                            server: error?.message\r\n                        }\r\n                    });\r\n                } else if (error?.response) {\r\n                    setError({\r\n                        'status': error.response.status,\r\n                        'message': error.response.statusText,\r\n                        'data': error.response.data\r\n                    });\r\n                } else if (error?.response?.status === 401) {\r\n                    console.log('unauthorized')\r\n                } else {\r\n                    console.log(error?.response?.statusText)\r\n                }\r\n            });\r\n    }\r\n\r\n    const fetchCategory = async (token) => {\r\n        await axios.get(baseURL.api + '/observation/get_category_list/', {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then((response) => {\r\n                setAuth(prev => {\r\n                    return {\r\n                        ...prev,\r\n                        categoryList: response?.data\r\n                    }\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"persist\", persist);\r\n    }, [persist])\r\n\r\n    return (\r\n        <>\r\n            {error?.data &&\r\n                <p className=\"text-danger small mb-4 fw-bolder\">{error?.data?.detail}</p>\r\n            }\r\n            {error?.server &&\r\n                <p className=\"text-danger text-center small mb-4 fw-bolder\">{error?.server}</p>\r\n            }\r\n            <Form onSubmit={handleLogin}>\r\n                <FormGroup>\r\n                    <Input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email address\"\r\n                        autoComplete=\"off\"\r\n                        required\r\n                        onChange={(e) => handleInput(e)}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Password\"\r\n                        required\r\n                        onChange={(e) => handleInput(e)}\r\n                    />\r\n                </FormGroup>\r\n                <FormText className=\"forgot-password\">\r\n                    <Button type=\"button\" onClick={() => cp()}>Forgot Password?</Button>\r\n                </FormText>\r\n                <FormGroup>\r\n                    <Button type=\"submit\" className=\"modal-btn\" disabled={!(user?.email && user?.password)}>\r\n                        Login\r\n                    </Button>\r\n                </FormGroup>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\nexport default Login;","import Login from \"../../components/Auth/Login\";\r\nimport { Container } from \"reactstrap\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport { Navigate, useLocation } from \"react-router-dom\";\r\nimport \"../../assets/scss/component/modal.scss\";\r\nimport { routeUrls } from './../../helpers/url';\r\n\r\nconst LoginPage = () => {\r\n  const { auth, persist } = useAuth();\r\n  const location = useLocation();\r\n\r\n  if (auth && persist) {\r\n    return <Navigate to={routeUrls.home} state={{ from: location }} replace />;\r\n  }\r\n  return (\r\n    <section className=\"min-vh-100 d-flex align-items-center justify-content-center\">\r\n      <Container>\r\n        <div className=\"common-modal modal-content-page\">\r\n          <div className=\"modal-content \">\r\n            <div className=\"modal-body\">\r\n              <Login />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </section>\r\n  );\r\n};\r\nexport default LoginPage;\r\n"],"names":["props","cp","useAuth","setAuth","persist","auth","setPersist","navigate","useNavigate","useState","email","password","user","setUser","error","setError","setToken","handleInput","e","preventDefault","name","target","value","handleLogin","axios","baseURL","then","response","status","superuser","data","is_superuser","prev","token","access","refresh","localStorage","setItem","removeItem","fetchCategory","r","routeUrls","replace","catch","statusText","console","log","message","server","headers","categoryList","useEffect","className","detail","onSubmit","type","placeholder","autoComplete","required","onChange","onClick","disabled","location","useLocation","to","state","from"],"sourceRoot":""}