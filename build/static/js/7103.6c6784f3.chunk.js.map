{"version":3,"file":"static/js/7103.6c6784f3.chunk.js","mappings":"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","sources":["pages/Observation/ObservationDetails.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/react-loading-skeleton/dist/index.mjs"],"sourcesContent":["import \"../../assets/scss/component/observationDetails.scss\";\nimport {lazy, Suspense, useEffect, useRef, useState} from \"react\";\nimport {\n    Badge,\n    Button,\n    Col,\n    Modal,\n    ModalBody,\n    ModalHeader,\n    Nav,\n    NavItem,\n    NavLink,\n    Row,\n    Spinner,\n    TabContent,\n    TabPane,\n} from \"reactstrap\";\n\nimport {Icon} from \"@iconify/react\";\nimport Tippy from \"@tippyjs/react\";\n\nimport Images from \"./../../static/images\";\nimport {imageDetails} from \"../../helpers/observation\";\nimport axios from \"../../api/axios\";\nimport {baseURL, routeUrls} from \"../../helpers/url\";\nimport useAuth from \"../../hooks/useAuth\";\nimport {PropTypes} from \"prop-types\";\nimport {useLocation} from \"react-router-dom\";\nimport useObservationsData from \"../../hooks/useObservationsData\";\nimport Skeleton from \"react-loading-skeleton\";\n\nconst BlurImageComp = lazy(() => import(\"../../components/Common/BlurImage\"));\nconst ObservationMoreDetails = lazy(() => import(\"../../components/Observation/ObservationDetails/ObservationMoreDetails\"));\nconst ObservationMoreEquipementDetails = lazy(() => import(\"../../components/Observation/ObservationDetails/ObservationMoreEquipementDetails\"));\nconst Comments = lazy(() => import(\"../../components/Observation/ObservationDetails/Comments\"));\nconst CardImageCarousel = lazy(() => import(\"../../components/Shared/CardImageCarousel\"));\n\nconst ObservationDetails = (props) => {\n    const {auth} = useAuth();\n    const location = useLocation();\n    const intervalRef = useRef();\n    const {\n        modalClass,\n        open,\n        handleClose,\n        data,\n        activeType,\n        handleContinueEdit,\n        handleApproveRejectEvent,\n        refreshData\n    } = props;\n\n    const [activeTab, setActiveImageTab] = useState(imageDetails.Details);\n    const {observationComments, setObservationListData, observationListData} = useObservationsData();\n    const obvDetailsModal = useRef(null);\n    const [isImageNull, setIsImageNull] = useState(true);\n    const [loaderLoading, setLoaderLoading] = useState(true);\n    // Toggle Tabs\n    const toggleImageDetailsTab = (tab) => {\n        if (activeTab !== tab) {\n            setActiveImageTab(tab);\n        }\n    };\n\n    // Fetch image for observation for null checking\n    const checkNulledImage = async () => {\n        return await axios\n            .post(\n                baseURL.api + \"/observation/get_observation_details/\" + data?.id + \"/\",\n                null,\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `Bearer ${auth?.token?.access}`,\n                    },\n                }\n            )\n            .then((response) => {\n                setIsImageNull(response?.data?.data?.includes(null));\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    };\n\n    const handleLoaderLoading = (state) => {\n        setLoaderLoading(state);\n    }\n\n\n    useEffect(() => {\n        setLoaderLoading(true);\n        setActiveImageTab(imageDetails.Details);\n    }, [open, data?.id]);\n\n    useEffect(() => {\n        if (open && data?.id && isImageNull && auth?.user?.id) {\n            intervalRef.current = setInterval(() => {\n                checkNulledImage().then((r) => r);\n            }, 1000);\n\n            return () => {\n                clearInterval(intervalRef.current);\n            };\n        } else if (open && data?.id && isImageNull && !auth?.user?.id) {\n            setTimeout(function () {\n                setIsImageNull(false);\n            }, 1000)\n        }\n    }, [data?.id, isImageNull, open, auth?.user]);\n\n    useEffect(() => {\n        if (!isImageNull && location.pathname === `/${routeUrls.myObservations}`) {\n            refreshData(true, activeType);\n        }\n\n    }, [isImageNull, location]);\n\n    useEffect(() => {\n        if (!isImageNull) {\n            observationListData?.list?.filter(item => {\n                return item.id === observationListData?.active?.id\n            }).map(item => {\n                return setObservationListData((prev) => {\n                    return {\n                        ...prev,\n                        active: item\n                    }\n                })\n            })\n        }\n    }, [observationListData.list])\n\n    return (\n        <>\n            <Modal\n                className={modalClass ? modalClass : \"\"}\n                isOpen={open}\n                backdrop={true}\n                keyboard={false}\n                scrollable={false}\n                size=\"xl\"\n                toggle={handleClose}\n                ref={obvDetailsModal}\n            >\n                <ModalHeader className=\"d-flex justify-content-between align-items-center w-100\">\n                    <div className=\"d-flex align-items-center justify-content-start\">\n                        <Button\n                            className=\"close-icon bg-transparent rounded-0 border-0 shadow-none p-0 me-3\"\n                            onClick={() => handleClose()}\n                        >\n                            <img src={Images.Modalcloseicon} alt=\"close-icon\"/>\n                        </Button>\n                        <h4 className=\"d-inline-block m-0\">{data?.category_data?.[0] ? data?.category_data?.[0]?.name : null}</h4>\n                        <Badge\n                            className={`text-uppercase ${\n                                activeType === \"verified\" ? \"badge-success\" : \"\"\n                            }`}\n                        >\n                            {activeType === \"verified\" && (\n                                <Icon\n                                    icon=\"mdi:check-decagram\"\n                                    color=\"#27ae60\"\n                                    className=\"me-1\"\n                                    width=\"13\"\n                                    height=\"13\"\n                                />\n                            )}\n                            {activeType}\n                        </Badge>\n                    </div>\n                    {/*<h4>Data ID: {data?.id}</h4>*/}\n\n                    {activeType === \"draft\" && (\n                        <div>\n                            <Button\n                                variant=\"primary\"\n                                onClick={() =>\n                                    handleContinueEdit({id: data?.id, type: activeType})\n                                }\n                            >\n                                Continue Editing\n                            </Button>\n                        </div>\n                    )}\n                </ModalHeader>\n                <ModalBody>\n                    <Row>\n                        <Col md={6}>\n                            <div className=\"mb-4 mb-md-0 h-100\">\n                                <div className=\"preview-detail mb-3 mb-md-2\">\n                                    {!(data?.image_type === 3) &&\n                                        (data?.images?.length === 0 ? (\n                                            <img\n                                                src={Images.NotAvailable}\n                                                alt=\"No available\"\n                                                className=\"object-contain img-fluid\"\n                                            />\n                                        ) : !isImageNull ? (\n                                            <Suspense fallback={<div></div>}>\n                                                <BlurImageComp image={data?.images?.[0]?.image}\n                                                               preview={data?.images?.[0]?.image}\n                                                               alt={data?.images?.[0]?.location}\n                                                               loaderLoading={handleLoaderLoading}\n                                                />\n                                            </Suspense>\n                                        ) : (\n                                            <div\n                                                className=\"d-flex flex-column h-100 align-items-center justify-content-center bg-gradient bg-light\">\n                                                <Spinner color=\"primary\" size=\"20px\"/>\n                                                <h5 className=\"mt-3\">Processing image...</h5>\n                                            </div>\n                                        ))}\n                                    {data?.image_type === 3 && (\n                                        <CardImageCarousel\n                                            carouselData={data?.images}\n                                            detail={true}\n                                            loaderLoading={handleLoaderLoading}\n                                        />\n                                    )}\n                                </div>\n\n                                <Row>\n                                    <Col\n                                        sm={6}\n                                        className=\"justify-content-start d-flex align-items-center mb-2 mb-sm-0 position-relative\"\n                                    >\n                                        {loaderLoading &&\n                                            <div className=\"obv-user-cat-loader\">\n                                                <Skeleton height={35}/>\n                                            </div>\n                                        }\n                                        <div\n                                            className=\"d-flex card-user_details align-items-center overflow-hidden\">\n                                            <i className=\"profile-icon rounded-circle\">\n                                                <img\n                                                    width=\"100%\"\n                                                    height=\"100%\"\n                                                    src={\n                                                        data?.user_data?.profile_image\n                                                            ? data?.user_data?.profile_image\n                                                            : Images.DefaultProfile\n                                                    }\n                                                    alt=\"Profile\"\n                                                    className=\"rounded-circle\"\n                                                />\n                                            </i>\n                                            <h5 className=\"pe-2 mb-0 text-truncate fw-normal text-black\">\n                                                {data?.user_data?.first_name +\n                                                    \" \" +\n                                                    data?.user_data?.last_name}\n                                            </h5>\n                                        </div>\n                                    </Col>\n                                    <Col\n                                        sm={6}\n                                        className=\"justify-content-end d-flex align-items-center position-relative\"\n                                    >\n                                        <div className=\"observation_type d-flex align-items-center\">\n                                            {data?.category_data?.length > 0 &&\n                                                data?.category_data?.map((item, index) => {\n                                                    return (\n                                                        <div key={index} className=\"obv-cat\">\n                                                            {loaderLoading &&\n                                                                <div className=\"obv-cat-load\">\n                                                                    <Skeleton circle height={35} width={35}/>\n                                                                </div>\n                                                            }\n                                                            <div className=\"obv-cat-item\">\n                                                                <span\n                                                                    id={item?.name?.toLowerCase().replaceAll(\" \", \"\")}\n                                                                    className=\"rounded-circle bg-white ms-2 cursor-pointer\"\n                                                                >\n                                                                    <Tippy\n                                                                        animation=\"perspective\"\n                                                                        content={item?.name}\n                                                                    >\n                                                                        <img\n                                                                            src={`/assets/images/category/${item?.name\n                                                                                ?.toLowerCase()\n                                                                                .replaceAll(\" \", \"\")}.png`}\n                                                                            alt={item?.name}\n                                                                        />\n                                                                    </Tippy>\n                                                                </span>\n                                                            </div>\n                                                        </div>\n                                                    );\n                                                })}\n                                        </div>\n                                    </Col>\n                                </Row>\n                            </div>\n                        </Col>\n                        <Col md={6}>\n                            <Nav tabs>\n                                <NavItem>\n                                    <NavLink\n                                        className={\n                                            activeTab === imageDetails.Details ? \"active\" : \"\"\n                                        }\n                                        onClick={() => {\n                                            toggleImageDetailsTab(imageDetails.Details);\n                                        }}\n                                    >\n                                        Details\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink\n                                        className={\n                                            activeTab === imageDetails.Equipment ? \"active\" : \"\"\n                                        }\n                                        onClick={() => {\n                                            toggleImageDetailsTab(imageDetails.Equipment);\n                                        }}\n                                    >\n                                        Equipment\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink\n                                        className={\n                                            activeTab === imageDetails.Comments ? \"active\" : \"\"\n                                        }\n                                        onClick={() => {\n                                            toggleImageDetailsTab(imageDetails.Comments);\n                                        }}\n                                    >\n                                        Comments{\" \"}\n                                        {observationComments?.comment_count === 0\n                                            ? \"\"\n                                            : `(${observationComments?.comment_count})`}\n                                    </NavLink>\n                                </NavItem>\n                            </Nav>\n                            <TabContent activeTab={activeTab}>\n                                <TabPane tabId={imageDetails.Details}>\n                                    <Suspense fallback={<div>please wait...</div>}>\n                                        <ObservationMoreDetails\n                                            handlePopup={handleClose}\n                                            approveRejectEvent={handleApproveRejectEvent}\n                                            obvCommentCount={observationComments?.comment_count}\n                                            data={data}\n                                            activeType={activeType}\n                                        />\n                                    </Suspense>\n                                </TabPane>\n                                <TabPane tabId={imageDetails.Equipment}>\n                                    <Suspense fallback={<div>please wait...</div>}>\n                                        <ObservationMoreEquipementDetails\n                                            obvCommentCount={observationComments?.comment_count}\n                                            data={data?.camera_data}\n                                        />\n                                    </Suspense>\n                                </TabPane>\n                                <TabPane tabId={imageDetails.Comments}>\n                                    <Suspense fallback={<div>please wait...</div>}>\n                                        <Comments obvId={data?.id}/>\n                                    </Suspense>\n                                </TabPane>\n                            </TabContent>\n                        </Col>\n                    </Row>\n                </ModalBody>\n            </Modal>\n        </>\n    );\n};\n\nObservationDetails.propTypes = {\n    hasNulledImage: PropTypes.func,\n    refreshData: PropTypes.func\n};\n\nexport default ObservationDetails;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {\n    const style = {};\n    if (direction === 'rtl')\n        style['--animation-direction'] = 'reverse';\n    if (typeof duration === 'number')\n        style['--animation-duration'] = `${duration}s`;\n    if (!enableAnimation)\n        style['--pseudo-element-display'] = 'none';\n    if (typeof width === 'string' || typeof width === 'number')\n        style.width = width;\n    if (typeof height === 'string' || typeof height === 'number')\n        style.height = height;\n    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')\n        style.borderRadius = borderRadius;\n    if (circle)\n        style.borderRadius = '50%';\n    if (typeof baseColor !== 'undefined')\n        style['--base-color'] = baseColor;\n    if (typeof highlightColor !== 'undefined')\n        style['--highlight-color'] = highlightColor;\n    return style;\n}\nfunction Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {\n    var _a, _b, _c;\n    const contextStyleOptions = React.useContext(SkeletonThemeContext);\n    const propsStyleOptions = { ...originalPropsStyleOptions };\n    // DO NOT overwrite style options from the context if `propsStyleOptions`\n    // has properties explicity set to undefined\n    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n        if (typeof value === 'undefined') {\n            delete propsStyleOptions[key];\n        }\n    }\n    // Props take priority over context\n    const styleOptions = {\n        ...contextStyleOptions,\n        ...propsStyleOptions,\n        circle,\n    };\n    // `styleProp` has the least priority out of everything\n    const style = {\n        ...styleProp,\n        ...styleOptionsToCssProperties(styleOptions),\n    };\n    let className = 'react-loading-skeleton';\n    if (customClassName)\n        className += ` ${customClassName}`;\n    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n    const elements = [];\n    const countCeil = Math.ceil(count);\n    for (let i = 0; i < countCeil; i++) {\n        let thisStyle = style;\n        if (countCeil > count && i === countCeil - 1) {\n            // count is not an integer and we've reached the last iteration of\n            // the loop, so add a \"fractional\" skeleton.\n            //\n            // For example, if count is 3.5, we've already added 3 full\n            // skeletons, so now we add one more skeleton that is 0.5 times the\n            // original width.\n            const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n            const fractionalPart = count % 1;\n            const fractionalWidth = typeof width === 'number'\n                ? width * fractionalPart\n                : `calc(${width} * ${fractionalPart})`;\n            thisStyle = { ...thisStyle, width: fractionalWidth };\n        }\n        const skeletonSpan = (React.createElement(\"span\", { className: className, style: thisStyle, key: i }, \"\\u200C\"));\n        if (inline) {\n            elements.push(skeletonSpan);\n        }\n        else {\n            // Without the <br />, the skeleton lines will all run together if\n            // `width` is specified\n            elements.push(React.createElement(React.Fragment, { key: i },\n                skeletonSpan,\n                React.createElement(\"br\", null)));\n        }\n    }\n    return (React.createElement(\"span\", { className: containerClassName, \"data-testid\": containerTestId, \"aria-live\": \"polite\", \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation }, Wrapper\n        ? elements.map((el, i) => React.createElement(Wrapper, { key: i }, el))\n        : elements));\n}\n\nfunction SkeletonTheme({ children, ...styleOptions }) {\n    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));\n}\n\nexport { SkeletonTheme, Skeleton as default };\n"],"names":["BlurImageComp","lazy","ObservationMoreDetails","ObservationMoreEquipementDetails","Comments","CardImageCarousel","props","auth","useAuth","location","useLocation","intervalRef","useRef","modalClass","open","handleClose","data","activeType","handleContinueEdit","handleApproveRejectEvent","refreshData","useState","imageDetails","activeTab","setActiveImageTab","useObservationsData","observationComments","setObservationListData","observationListData","obvDetailsModal","isImageNull","setIsImageNull","loaderLoading","setLoaderLoading","toggleImageDetailsTab","tab","checkNulledImage","axios","baseURL","id","headers","Authorization","token","access","then","response","includes","catch","error","console","log","handleLoaderLoading","state","useEffect","user","current","setInterval","r","clearInterval","setTimeout","pathname","routeUrls","list","filter","item","active","map","prev","className","isOpen","backdrop","keyboard","scrollable","size","toggle","ref","onClick","src","Images","alt","category_data","name","icon","color","width","height","variant","type","md","image_type","images","length","Suspense","fallback","image","preview","carouselData","detail","sm","user_data","profile_image","first_name","last_name","index","circle","toLowerCase","replaceAll","animation","content","tabs","comment_count","tabId","handlePopup","approveRejectEvent","obvCommentCount","camera_data","obvId","_objectWithoutProperties","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call","SkeletonThemeContext","React","Skeleton","_a","_b","_c","count","Wrapper","wrapper","customClassName","containerClassName","containerTestId","styleProp","style","originalPropsStyleOptions","contextStyleOptions","propsStyleOptions","entries","styleOptions","baseColor","highlightColor","borderRadius","direction","duration","enableAnimation","styleOptionsToCssProperties","inline","elements","countCeil","Math","ceil","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","push","el"],"sourceRoot":""}