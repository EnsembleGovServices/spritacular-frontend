{"version":3,"file":"static/js/5019.023e31fe.chunk.js","mappings":"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","sources":["components/Blog/UploadFeaturedImage.jsx","components/Common/BlurImage.jsx","components/Shared/UploadImageUI.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/react-loading-skeleton/dist/index.mjs"],"sourcesContent":["import \"../../assets/scss/component/initialUploadobservations.scss\";\nimport \"../../assets/scss/component/uploadFeatureBlog.scss\";\nimport UploadImageUI from \"../Shared/UploadImageUI\";\nimport {useEffect, useLayoutEffect, useState} from \"react\";\nimport {Icon} from '@iconify/react';\nimport BlurImage from \"../Common/BlurImage\";\nimport {FormGroup, Label} from \"reactstrap\";\n\nconst UploadFeaturedImage = (props) => {\n    const {setData, uploadProgress, error, update, thumb} = props;\n    const [file, setFile] = useState();\n    const [preview, setPreview] = useState();\n    const [reset, setReset] = useState(false);\n    // const progressBar = useRef(null);\n\n    const handleFileInput = (e) => {\n        setReset(false);\n        setPreview(null)\n        setFile(e.target.files[0]);\n    }\n    const previewImage = () => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            const base64String = reader.result.replace('data:', '').replace(/^.+,/, '');\n            const baseImage = `data:image/png;base64,${base64String}`;\n            setPreview(baseImage);\n        }\n        reader.readAsDataURL(file);\n    }\n\n    const removePreviewAndClearImageData = (e) => {\n        setReset(true);\n        e.preventDefault();\n        setPreview(null);\n        setFile(null);\n        setData((prev) => {\n            return {\n                ...prev,\n                thumbnail_image: null\n            }\n        })\n    }\n\n    useLayoutEffect(() => {\n        if (file && !reset) {\n            previewImage();\n        }\n    }, [file, preview])\n\n    useEffect(() => {\n        if (!reset) {\n            setData((prev) => {\n                return {\n                    ...prev,\n                    thumbnail_image: file\n                }\n            })\n        }\n    }, [file])\n\n    // useEffect(() => {\n    //     if (uploadProgress === \"100%\") {\n    //         progressBar.current.classList.add('fade-out');\n    //         setTimeout(function () {\n    //             progressBar.current.classList.add('fade-out');\n    //         }, 500);\n    //         setTimeout(function () {\n    //             progressBar.current.remove();\n    //         }, 1200);\n    //     }\n    // }, [uploadProgress])\n\n    const getFileName = (url) => {\n        return url.split(/[#?]/)[0].split(\"/\").pop().trim();\n    };\n    const toBase64 = (file) =>\n        new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = (error) => reject(error);\n        });\n\n    useEffect(() => {\n        if (thumb) {\n            return fetch(thumb)\n                .then(async (response) => {\n                    const contentType = response.headers.get(\"content-type\");\n                    const blob = await response\n                        .blob()\n                        .catch((error) => console.log(\"blob error\", error));\n                    let fileName = getFileName(thumb);\n                    const file = new File([blob], fileName, {contentType});\n                    const image = await toBase64(file).catch((error) =>\n                        console.log(\"base64 Error\", error)\n                    );\n                    setTimeout(() => {\n                        setData((prev) => {\n                            return {\n                                ...prev,\n                                thumbnail_image: file\n                            }\n                        })\n                        setFile(file)\n                        setPreview(image);\n                    }, 500)\n                    return file;\n                })\n                .catch((error) =>\n                    console.log(\n                        `File converting delayed`\n                    )\n                );\n        }\n    }, [thumb])\n\n    return (\n        <FormGroup>\n            <Label for=\"title\">\n                Upload Thumbnail\n            </Label>\n            <div className=\"position-relative overflow-hidden\">\n                <UploadImageUI blogUpload={true} handleUploadImage={handleFileInput}/>\n                {preview &&\n                    <div className={'img_wrapper position-absolute w-100 left-0 right-0 top-0 bottom-0'}>\n                        <button className=\"remove-btn\" onClick={(e) => removePreviewAndClearImageData(e)}>\n                            <Icon icon=\"clarity:window-close-line\" width={20} height={20}/>\n                        </button>\n                        <div className={'img-preview_wrapper'}>\n                            <BlurImage image={preview} preview={preview}/>\n                        </div>\n                    </div>\n                }\n                {/*{uploadProgress > \"1%\" &&*/}\n                {/*    <div className=\"progressbar\" ref={progressBar} style={{width: uploadProgress}}>*/}\n                {/*        {`${uploadProgress}`}*/}\n                {/*    </div>*/}\n                {/*}*/}\n            </div>\n        </FormGroup>\n\n    )\n}\nexport default UploadFeaturedImage;","import {useEffect, useRef, useState} from 'react';\nimport Skeleton from 'react-loading-skeleton'\n\nconst BlurImage = (props) => {\n    const {preview, image, alt, bgColor = 'transparent', handleClick, homepage, loaderLoading} = props;\n    const [loading, setLoading] = useState(true);\n    const loadingImageRef = useRef(null);\n\n\n    const waitForImageToLoad = (imageElement) => {\n        return new Promise(resolve => {\n            imageElement.onload = resolve\n        })\n    }\n    useEffect(() => {\n        setLoading(true);\n        if (image) {\n            waitForImageToLoad(loadingImageRef.current).then(() => {\n                setLoading(false);\n                loaderLoading(false);\n            });\n        }\n    }, [image]);\n\n\n    const style = {\n        minHeight: \"217px\",\n        overflow: \"hidden\"\n    }\n    return (\n        <>\n            <div className=\"shadow-sm drop-shadow-lg h-100 loader-wrap-img\" style={style}>\n                {loading &&\n                    <div className=\"loadingImage\">\n                        <Skeleton count={1} height=\"100%\"/>\n                    </div>\n                }\n                <img\n                    style={{\n                        width: '100%',\n                        background: bgColor,\n                        objectFit: 'cover',\n                        height: '100%',\n                        minHeight: '217px'\n                    }}\n                    src={preview}\n                    alt={alt}\n                    ref={loadingImageRef}\n                    className={`${homepage ? 'img-fluid isLoadingImg card-img no-cursor' : 'isLoadingImg img-fluid'}`}\n                    onClick={handleClick}\n                />\n            </div>\n        </>\n\n    );\n};\n\nexport default BlurImage;","import \"../../assets/scss/component/initialUploadobservations.scss\";\nimport {FormGroup, Input, Label} from \"reactstrap\";\nimport {Icon} from \"@iconify/react/dist/iconify\";\n\nconst UploadImageUI = (props) => {\n    const {\n        maxLimit,\n        imageFormat,\n        multiple,\n        handleUploadImage,\n        error,\n        small,\n        handleObvAdd,\n        defaultUploadBox,\n        blogUpload\n    } = props;\n    return (\n        <div className=\"position-relative\">\n            <div\n                className={`upload-image_wrapper ${small ? \"small-upload_box mb-5\" : ''} ${blogUpload ? 'blog-upload-box' : ''}`}>\n                <div className=\"upload-ob-inner\">\n                    <FormGroup>\n                        <Label htmlFor=\"UploadFile\">\n                            <div className=\"upload-info\">\n                                <Icon icon=\"bx:image-alt\" color=\"#737e96\" width=\"42\" height=\"42\"/>\n                                <p>{defaultUploadBox ? 'Upload your first observation' : 'Drag and drop images or click to upload'}</p>\n                                {maxLimit && <span className=\"text-black\">Max. Image Size: 5MB</span>}\n                                {imageFormat &&\n                                    <ul>\n                                        <li>\n                                            Common Image File Formats (JPEG or\n                                            JPG, PNG)\n                                        </li>\n                                    </ul>\n                                }\n\n                            </div>\n                        </Label>\n                        <Input\n                            type=\"file\"\n                            name=\"file\"\n                            id=\"UploadFile\"\n                            accept=\"image/jpg, image/jpeg, image/png\"\n                            multiple={multiple}\n                            onChange={(e) => handleUploadImage(e)}\n                        />\n                    </FormGroup>\n                </div>\n                {error?.count &&\n                    <span className=\"text-danger d-block small my-1 d-inline-block\">{error?.count} </span>\n                }\n                {error?.size &&\n                    <span className=\"text-danger d-block small my-1 d-inline-block\">{error?.size}</span>\n                }\n                {error?.duplicate &&\n                    <span className=\"text-info d-block small my-1 d-inline-block\">{error?.duplicate}</span>\n                }\n            </div>\n            {defaultUploadBox &&\n                <div className={`${defaultUploadBox ? 'mark-center' : ''}`}>\n                    <button onClick={(e) => handleObvAdd(e)}\n                            className={`btn btn-secondary`}>\n                        <Icon icon=\"heroicons-outline:upload\" width=\"25\" height=\"22\"/>\n                        Upload Observation\n                    </button>\n                </div>\n            }\n        </div>\n    )\n}\nexport default UploadImageUI;","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {\n    const style = {};\n    if (direction === 'rtl')\n        style['--animation-direction'] = 'reverse';\n    if (typeof duration === 'number')\n        style['--animation-duration'] = `${duration}s`;\n    if (!enableAnimation)\n        style['--pseudo-element-display'] = 'none';\n    if (typeof width === 'string' || typeof width === 'number')\n        style.width = width;\n    if (typeof height === 'string' || typeof height === 'number')\n        style.height = height;\n    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')\n        style.borderRadius = borderRadius;\n    if (circle)\n        style.borderRadius = '50%';\n    if (typeof baseColor !== 'undefined')\n        style['--base-color'] = baseColor;\n    if (typeof highlightColor !== 'undefined')\n        style['--highlight-color'] = highlightColor;\n    return style;\n}\nfunction Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {\n    var _a, _b, _c;\n    const contextStyleOptions = React.useContext(SkeletonThemeContext);\n    const propsStyleOptions = { ...originalPropsStyleOptions };\n    // DO NOT overwrite style options from the context if `propsStyleOptions`\n    // has properties explicity set to undefined\n    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n        if (typeof value === 'undefined') {\n            delete propsStyleOptions[key];\n        }\n    }\n    // Props take priority over context\n    const styleOptions = {\n        ...contextStyleOptions,\n        ...propsStyleOptions,\n        circle,\n    };\n    // `styleProp` has the least priority out of everything\n    const style = {\n        ...styleProp,\n        ...styleOptionsToCssProperties(styleOptions),\n    };\n    let className = 'react-loading-skeleton';\n    if (customClassName)\n        className += ` ${customClassName}`;\n    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n    const elements = [];\n    const countCeil = Math.ceil(count);\n    for (let i = 0; i < countCeil; i++) {\n        let thisStyle = style;\n        if (countCeil > count && i === countCeil - 1) {\n            // count is not an integer and we've reached the last iteration of\n            // the loop, so add a \"fractional\" skeleton.\n            //\n            // For example, if count is 3.5, we've already added 3 full\n            // skeletons, so now we add one more skeleton that is 0.5 times the\n            // original width.\n            const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n            const fractionalPart = count % 1;\n            const fractionalWidth = typeof width === 'number'\n                ? width * fractionalPart\n                : `calc(${width} * ${fractionalPart})`;\n            thisStyle = { ...thisStyle, width: fractionalWidth };\n        }\n        const skeletonSpan = (React.createElement(\"span\", { className: className, style: thisStyle, key: i }, \"\\u200C\"));\n        if (inline) {\n            elements.push(skeletonSpan);\n        }\n        else {\n            // Without the <br />, the skeleton lines will all run together if\n            // `width` is specified\n            elements.push(React.createElement(React.Fragment, { key: i },\n                skeletonSpan,\n                React.createElement(\"br\", null)));\n        }\n    }\n    return (React.createElement(\"span\", { className: containerClassName, \"data-testid\": containerTestId, \"aria-live\": \"polite\", \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation }, Wrapper\n        ? elements.map((el, i) => React.createElement(Wrapper, { key: i }, el))\n        : elements));\n}\n\nfunction SkeletonTheme({ children, ...styleOptions }) {\n    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));\n}\n\nexport { SkeletonTheme, Skeleton as default };\n"],"names":["props","setData","thumb","uploadProgress","error","update","useState","file","setFile","preview","setPreview","reset","setReset","useLayoutEffect","reader","FileReader","onloadend","base64String","result","replace","baseImage","readAsDataURL","previewImage","useEffect","prev","thumbnail_image","toBase64","Promise","resolve","reject","onload","onerror","fetch","then","response","contentType","headers","get","blob","catch","console","log","fileName","split","pop","trim","File","image","setTimeout","for","className","UploadImageUI","blogUpload","handleUploadImage","e","target","files","onClick","preventDefault","removePreviewAndClearImageData","icon","width","height","BlurImage","alt","bgColor","handleClick","homepage","loaderLoading","loading","setLoading","loadingImageRef","useRef","imageElement","current","style","minHeight","overflow","count","background","objectFit","src","ref","maxLimit","imageFormat","multiple","small","handleObvAdd","defaultUploadBox","htmlFor","color","type","name","id","accept","onChange","size","duplicate","_objectWithoutProperties","source","excluded","key","i","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","SkeletonThemeContext","React","Skeleton","_a","_b","_c","Wrapper","wrapper","customClassName","containerClassName","containerTestId","circle","styleProp","originalPropsStyleOptions","contextStyleOptions","propsStyleOptions","entries","styleOptions","baseColor","highlightColor","borderRadius","direction","duration","enableAnimation","styleOptionsToCssProperties","inline","elements","countCeil","Math","ceil","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","push","map","el"],"sourceRoot":""}