{"version":3,"file":"static/js/7690.50975b9f.chunk.js","mappings":"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","sources":["components/Popup/UserProfilePopup.jsx","components/Notification/firebase.jsx","helpers/firebase.js","components/Notification/NotificationComponent.jsx","components/Common/Header.jsx","components/Popup/ChangePasswordPopup.jsx","components/Upload/ImageUpload.js","components/Upload/LazyLoad.js"],"sourcesContent":["import {\r\n  Button,\r\n  Col,\r\n  FormGroup,\r\n  FormText,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport Images from \"../../static/images\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../../assets/scss/component/modal.scss\";\r\nimport ImageUpload from \"../Upload/ImageUpload\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { routeUrls } from './../../helpers/url';\r\nimport ReactCountryFlags from \"../ReactCountryFlag\";\r\n\r\nconst UserProfilePopup = (props) => {\r\n  const [user, setUser] = useState(props);\r\n  const { open, handleClose, modalClass, data } = props;\r\n\r\n  useEffect(() => {\r\n    setUser(data?.user);\r\n  }, [data]);\r\n\r\n  return (\r\n    <Modal\r\n      className={modalClass ? modalClass : \"common-modal\"}\r\n      isOpen={open}\r\n      centered\r\n      backdrop={true}\r\n      keyboard={false}\r\n    >\r\n      <ModalHeader className=\"text-center justify-content-center\">\r\n        Thank you!\r\n        <Button className=\"close-icon\" onClick={() => handleClose()}>\r\n          <img src={Images.Modalcloseicon} alt=\"close-icon\" />\r\n        </Button>\r\n        <p>Welcome to the Community! It is great to have you here.</p>\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <Row className=\"align-items-center\">\r\n          <Col md={5}>\r\n            <FormGroup className=\"custom-file-upload\">\r\n              <div className=\"file-upload-inners\">\r\n                <ImageUpload user={data?.user} token={data?.token?.access} />\r\n              </div>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={7}>\r\n            <div className=\"user-info\">\r\n              <p>90e87d797c5b</p>\r\n              <h4>\r\n                {user?.first_name} {user?.last_name}\r\n              </h4>\r\n              <FormText>{user?.email}</FormText>\r\n              <div className=\"user-country d-flex align-items-center\">\r\n                <ReactCountryFlags country={user?.country_code} />\r\n                <p>{user?.location}</p>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={12}>\r\n            <FormGroup className=\"text-center mt-4\">\r\n              <Link\r\n                to={routeUrls.profile}\r\n                onClick={() => handleClose()}\r\n                className=\"btn btn-secondary bg-modal-btn d-inline-block mt-2\"\r\n              >\r\n                Continue\r\n              </Link>\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n      </ModalBody>\r\n    </Modal>\r\n  );\r\n};\r\nUserProfilePopup.propTypes = {\r\n  open: PropTypes.bool,\r\n  handleClose: PropTypes.func,\r\n};\r\n\r\nexport default UserProfilePopup;\r\n","import {getMessaging, onMessage, getToken} from 'firebase/messaging';\r\n\r\nimport {initializeApp} from 'firebase/app';\r\nimport axios from \"../../api/axios\";\r\nimport {baseURL} from \"../../helpers/url\";\r\nimport {firebaseConfig} from \"../../helpers/firebase\";\r\n\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\nconst messaging = getMessaging(firebaseApp);\r\n\r\nexport const onMessageListener = () =>\r\n    new Promise((resolve) => {\r\n        onMessage(messaging, (payload) => {\r\n            resolve(payload);\r\n        });\r\n    });\r\n\r\n\r\nexport const getTokens = (userId, token, auth) => {\r\n    return getToken(messaging, {vapidKey: process.env.REACT_APP_FIREBASE_VAPID_KEY}).then((currentToken) => {\r\n        if (currentToken && auth) {\r\n            // console.log('current token for client: ', currentToken);\r\n            axios.post(baseURL.api + '/devices/', {\"user\": userId, \"registration_id\": currentToken, \"type\": \"web\"}, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            }).then((response) => {\r\n                // console.log('found response', response);\r\n            }).catch((error) => {\r\n                // console.log('NotificationComponent error, Request permission to generate one.');\r\n            })\r\n\r\n        }\r\n    }).catch((err) => {\r\n        // shows on the UI that permission is required \r\n        // console.log('NotificationComponent permission denied. Request permission to generate one.');\r\n        // console.log('An error occurred while retrieving token. ', err);\r\n        // catch error while creating client token\r\n    });\r\n\r\n}\r\n","export const firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_PROJECT_MSG_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n    measurementId: process.env.REACT_APP_FIREBASE_MESUR_ID,\r\n};","import React, {useState, useLayoutEffect, useRef, useEffect} from 'react'\r\nimport {getTokens, onMessageListener} from './firebase';\r\nimport {\r\n    Dropdown,\r\n    DropdownItem,\r\n    DropdownMenu,\r\n    DropdownToggle,\r\n} from \"reactstrap\";\r\nimport {Icon} from \"@iconify/react\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport Tippy from \"@tippyjs/react\";\r\nimport moment from \"moment\";\r\nimport axios from \"../../api/axios\";\r\nimport {baseURL} from \"../../helpers/url\";\r\n\r\n\r\nconst NotificationComponent = (props) => {\r\n    const {notificationArray, setNotificationArray} = props;\r\n    const {auth} = useAuth();\r\n    const [show, setShow] = useState(false);\r\n    const [notification, setNotification] = useState(false);\r\n    const [isTokenFound, setTokenFound] = useState(false);\r\n\r\n    const [notificationDropdown, setNotificationDropdown] = useState(false);\r\n    const [data, setData] = useState([]);\r\n\r\n    const notificationDropDownRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        Notification.requestPermission().then(permission => {\r\n            if (permission === \"granted\") {\r\n                // console.log('granted')\r\n                setTokenFound(true);\r\n            } else {\r\n                setTokenFound(false);\r\n                // console.log('rejected')\r\n            }\r\n        }).catch(e => {\r\n            console.log(e)\r\n        });\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        if (isTokenFound && auth?.user?.id) {\r\n            getTokens(auth?.user?.id, auth?.token?.access, auth?.user).then(r => r);\r\n        }\r\n    }, [isTokenFound])\r\n\r\n\r\n    useLayoutEffect(() => {\r\n        return () => {\r\n            onMessageListener().then(payload => {\r\n                console.log('payload here', payload);\r\n                setShow(true);\r\n                setNotification(true);\r\n                setNotificationArray([...notificationArray, payload]);\r\n                setData([payload, ...data]);\r\n            }).catch(err => console.log('failed: ', err));\r\n        }\r\n    }, [data, notificationArray, setNotificationArray, show])\r\n\r\n    const handleNotificationStatusUpdate = async (e, notificaitonIds) => {\r\n        await axios.post(baseURL.api + '/notification/read_user_notification/', {'notification_ids': notificaitonIds}, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${auth?.token?.access}`\r\n            }\r\n        }).then((response) => {\r\n            // console.log(response);\r\n            setData([]);\r\n            setTimeout(function () {\r\n                setNotificationArray([])\r\n            }, 1000)\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    const handleMarkAsRead = (e) => {\r\n        setNotification(false);\r\n        const notificaitonIds = []\r\n        notificationArray.map((item) => {\r\n            return notificaitonIds.push(item.data.notification_id.toString());\r\n        })\r\n        handleNotificationStatusUpdate(e, notificaitonIds).then(r => r)\r\n\r\n        let dropContent = document.querySelectorAll('.drp-c');\r\n        dropContent.forEach(function (item) {\r\n            return item.classList.add('markedAsRead');\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Dropdown className=\"notify_menu\"\r\n                  isOpen={notificationDropdown}\r\n                  toggle={() => setNotificationDropdown(!notificationDropdown)}\r\n        >\r\n            <DropdownToggle className=\"notification\">\r\n                <Icon icon=\"ic:baseline-notifications\"/>\r\n                {notification && <span className=\"notify\"/>}\r\n            </DropdownToggle>\r\n            <DropdownMenu ref={notificationDropDownRef} container=\"body\" className=\"notify-open_menu\">\r\n                <DropdownItem key={0} header>\r\n                    {notificationArray?.length > 0 ? (\r\n                        <div className=\"d-flex align-items-center justify-content-between\">\r\n                            <span>Notifications {notificationArray?.length}</span>\r\n                            <button className=\"btn btn-link p-0 m-0\" onClick={event => handleMarkAsRead(event)}>\r\n                                <Icon icon=\"bi:check-circle\"/>\r\n                            </button>\r\n                        </div>\r\n                    ) : 'No new Notifications'}\r\n\r\n                </DropdownItem>\r\n                {/*<DropdownItem divider />*/}\r\n                <div className={'dropdown-body'}>\r\n                    {notificationArray?.length > 0 ? (\r\n                        notificationArray?.map((item, index) => {\r\n                            return (\r\n                                <div key={index} className=\"drp-c\">\r\n                                    <DropdownItem key={index}>\r\n                                        <div className=\"notify_wrapper\">\r\n                                            <Tippy animation=\"perspective\" content={item.data?.from_user}>\r\n                                                {item.notification?.image ?\r\n                                                    <div className=\"user-img\">\r\n                                                        <img className=\"img-fluid\" src={item.notification?.image}\r\n                                                             alt=\"user Profile\"/>\r\n                                                    </div>\r\n                                                    :\r\n                                                    <div className=\"user-img\">\r\n                                                        <Icon className=\"img-fluid\" icon=\"entypo:user\"/>\r\n                                                    </div>\r\n                                                }\r\n                                            </Tippy>\r\n                                            <div className=\"comment_wrapper\">\r\n                                                <div className=\"comment_details\">\r\n                                                    <h4>{item.notification.title}</h4>\r\n                                                    <p>{item.notification.body}</p>\r\n                                                </div>\r\n                                                <span>{moment(item.data?.sent_at).fromNow(true)}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </DropdownItem>\r\n                                    <DropdownItem divider/>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    ) : (\r\n                        <div className=\"d-flex align-items-center justify-content-center\" style={{height: \"190px\"}}>\r\n                            <h5>All caught up!</h5>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </DropdownMenu>\r\n        </Dropdown>\r\n\r\n    );\r\n}\r\n\r\nexport default NotificationComponent","import \"../../assets/scss/component/header.scss\";\r\nimport {\r\n    Button,\r\n    Collapse,\r\n    Dropdown,\r\n    DropdownItem,\r\n    DropdownMenu,\r\n    DropdownToggle,\r\n    Nav,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavItem\r\n} from \"reactstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nimport { cdn, routeUrls } from '../../helpers/url';\r\nimport { baseURL } from \"../../helpers/url\";\r\nimport axios from \"../../api/axios\";\r\n\r\nimport { Icon } from \"@iconify/react\";\r\nimport LazyLoad from \"../Upload/LazyLoad\";\r\n\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport LoginPopup from \"../Popup/LoginPopup\";\r\nimport RegisterPopup from \"../Popup/RegisterPopup\";\r\nimport ChangePasswordPopup from \"../Popup/ChangePasswordPopup\";\r\nimport UserProfilePopup from \"../Popup/UserProfilePopup\";\r\nimport NotificationComponent from \"../Notification/NotificationComponent\";\r\n\r\nconst Header = (props) => {\r\n    const { auth, setAuth, persist, setPersist } = useAuth();\r\n    const [user, setUser] = useState(auth?.user);\r\n    const [isLoginModal, setIsLoginModal] = useState(false);\r\n    const [isRegisterModal, setIsRegisterModal] = useState(false);\r\n    const [isChangePasswordModal, setIsChangePasswordModal] = useState(false);\r\n    const [showMenu, setShowMenu] = useState(false);\r\n    const [showUserMenu, setShowUserMenu] = useState(false);\r\n    const [showUserProfilePopup, setShowUserProfilePopup] = useState(true);\r\n    const [aboutDropdown, setAboutDropdown] = useState(false);\r\n    const [resourcesDropdown, setResourcesDropdown] = useState(false);\r\n    const [communityDropdown, setCommunityDropdown] = useState(false);\r\n    const [notificationArray, setNotificationArray] = useState([]);\r\n    const [active, setActive] = useState('');\r\n    const location = useLocation();\r\n    const homeUrl = location.pathname === '/';\r\n    const navigate = useNavigate();\r\n\r\n    const Logout = () => {\r\n        setAuth(\"\");\r\n        setPersist(false);\r\n        navigate('/');\r\n        localStorage.removeItem(\"persist\");\r\n        localStorage.removeItem(\"refresh\");\r\n        sessionStorage.removeItem(\"camera\");\r\n        setIsRegisterModal(false);\r\n        setIsLoginModal(false);\r\n        setShowUserProfilePopup(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"scroll\", () => {\r\n            let scroll = window.pageYOffset || document.documentElement.scrollTop,\r\n                navbarEl = document.querySelector(\".custom-header\");\r\n            if (scroll > 80) {\r\n                navbarEl.classList.add(\"bg-color-menu\");\r\n            } else {\r\n                navbarEl.classList.remove(\"bg-color-menu\");\r\n            }\r\n        });\r\n        setUser(auth?.user);\r\n\r\n    }, [auth?.user]);\r\n\r\n    useEffect(() => {\r\n        if (window.location.href.split('/')[window.location.href.split('/').length - 1] === routeUrls.dashboard)\r\n            setActive('dashboard');\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [window.location.href])\r\n\r\n\r\n    useEffect(() => {\r\n        if (auth?.user && auth?.token?.access) {\r\n            axios.get(baseURL.api + '/notification/user_notification/', {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${auth?.token?.access}`\r\n                }\r\n            })\r\n                .then((response) => {\r\n                    setNotificationArray(response.data.results.data);\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error)\r\n                })\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [auth])\r\n\r\n\r\n    const handleLoginModal = () => {\r\n        setIsLoginModal(!isLoginModal);\r\n        setIsRegisterModal(false);\r\n    };\r\n\r\n    const handleRegisterModal = () => {\r\n        setIsRegisterModal(!isRegisterModal);\r\n    };\r\n    const menuToggle = () => {\r\n        let getBody = document.querySelector('body');\r\n        getBody.classList.toggle(\"menu-open\");\r\n        setShowMenu(!showMenu);\r\n    };\r\n    const menuClose = () => {\r\n        const getBody = document.querySelector('body');\r\n        getBody.classList.remove(\"menu-open\");\r\n        setShowMenu(false);\r\n    };\r\n    const handleUserMenuDropdown = () => {\r\n        setShowUserMenu(!showUserMenu);\r\n    };\r\n\r\n    const handleChangePasswordModal = () => {\r\n        setIsChangePasswordModal(!isChangePasswordModal);\r\n    };\r\n\r\n    const handleUserProfilePopup = () => {\r\n        setShowUserProfilePopup(!showUserProfilePopup);\r\n    };\r\n\r\n    let admin = auth?.user?.is_superuser,\r\n        trainee = auth?.user?.is_trained,\r\n        normalUser = auth?.user?.is_user;\r\n\r\n\r\n    return (\r\n        <>\r\n            <Navbar\r\n                container\r\n                expand=\"md\"\r\n                className={homeUrl ? \"custom-header\" : \"custom-header bg-not-home\"}\r\n                light\r\n            >\r\n                <Link to={routeUrls.home} className=\"navbar-brand p-0 position-relative\" title=\"Spritacular\"\r\n                    onClick={() => setActive('')}>\r\n                    <img src={`${cdn.url}/logo.png`} alt=\"Spritacular\" className=\"logo\" />\r\n                    <img src={`${cdn.url}/black-logo.png`} alt=\"Spritacular\" className=\"on-scroll-logo\" />\r\n                    {process.env.NODE_ENV === \"development\" &&\r\n                        <div className=\"showUserTag\">\r\n                            {admin &&\r\n                                <span>{admin ? \"Admin\" : \"\"}</span>\r\n                            }\r\n                            {trainee &&\r\n                                <span>{trainee ? \"Trainee\" : \"\"}</span>\r\n                            }\r\n                            {normalUser &&\r\n                                <span>{normalUser ? \"User\" : \"\"}</span>\r\n                            }\r\n                        </div>\r\n                    }\r\n                </Link>\r\n                <NavbarToggler onClick={() => menuToggle()}>\r\n                    <Icon icon=\"eva:menu-outline\" />\r\n                </NavbarToggler>\r\n                <Collapse navbar isOpen={showMenu}>\r\n                    <div className=\"menu-logo  justify-content-between w-100 px-2 py-1 shadow-sm\">\r\n                        <Link to={routeUrls.home} className=\"navbar-brand\" onClick={() => setActive('')}>\r\n                            <img src={`${cdn.url}/black-logo.png`} alt=\"Spritacular\" />\r\n                        </Link>\r\n                        <Button className=\"close-menu\" onClick={() => menuClose()}>\r\n                            <Icon icon=\"ci:close-big\" color=\"#000\" width=\"25\" height=\"25\" />\r\n                        </Button>\r\n                    </div>\r\n\r\n                    <Nav navbar>\r\n                        <>\r\n                            {persist && !user?.is_superuser ? (\r\n                                <NavItem>\r\n                                    <Link\r\n                                        to={routeUrls.myObservations}\r\n                                        title=\"My Observations\"\r\n                                        className={active === 'observations' ? \"nav-link text-capitalize active\" : 'nav-link text-capitalize'}\r\n                                        onClick={() => setActive('observations')}\r\n                                    >\r\n                                        My Observations\r\n                                    </Link>\r\n                                </NavItem>\r\n                            ) : ''}\r\n                            {persist && admin ? (\r\n                                <NavItem>\r\n                                    <Link\r\n                                        to={routeUrls.dashboard}\r\n                                        title=\"Dashboard\"\r\n                                        className={active === 'dashboard' ? \"nav-link text-capitalize active\" : 'nav-link text-capitalize'}\r\n                                        onClick={() => setActive('dashboard')}\r\n                                    >\r\n                                        Dashboard\r\n                                    </Link>\r\n                                </NavItem>\r\n                            ) : ''}\r\n                        </>\r\n                        <NavItem>\r\n                            <Dropdown\r\n                                className=\"user-menu custom-relative-dropdown\"\r\n                                isOpen={aboutDropdown}\r\n                                toggle={() => setAboutDropdown(!aboutDropdown)}\r\n                            >\r\n                                <DropdownToggle>\r\n                                    About <Icon icon=\"fe:arrow-down\" />\r\n                                </DropdownToggle>\r\n                                <DropdownMenu>\r\n                                    <DropdownItem className={active === 'about-1' ? 'active p-0' : 'p-0'}>\r\n                                        <Link className=\"px-3 py-1\" to={routeUrls.about} title=\"What is Spritacular?\"\r\n                                            onClick={() => setActive('about-1')}>\r\n                                            What is Spritacular?\r\n                                        </Link>\r\n                                    </DropdownItem>\r\n                                    <DropdownItem className={active === 'about-2' ? 'active p-0' : 'p-0'}>\r\n                                        <Link className=\"px-3 py-1\" to={routeUrls.policy} title=\"Policy\"\r\n                                            onClick={() => setActive('about-2')}>\r\n                                            Policy\r\n                                        </Link>\r\n                                    </DropdownItem>\r\n                                    {/*<DropdownItem className={active === 'about-3' ? 'active p-0' : 'p-0'}>*/}\r\n                                    {/*    <Link to={routeUrls.policy + '?code=true'} title=\"Code of Conduct\"*/}\r\n                                    {/*          onClick={() => setActive('about-3')}>*/}\r\n                                    {/*        Code of Conduct*/}\r\n                                    {/*    </Link>*/}\r\n                                    {/*</DropdownItem>*/}\r\n                                </DropdownMenu>\r\n                            </Dropdown>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <Link\r\n                                to={routeUrls.getStarted}\r\n                                title=\"Get Started\"\r\n                                className={active === 'started' ? \"nav-link text-capitalize active\" : 'nav-link text-capitalize'}\r\n                                onClick={() => setActive('started')}\r\n                            >\r\n                                Get Started\r\n                            </Link>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <Link to={routeUrls.gallery} title=\"Gallery\"\r\n                                className={active === 'gallery' ? \"nav-link text-capitalize active\" : 'nav-link text-capitalize'}\r\n                                onClick={() => setActive('gallery')}>\r\n                                Gallery\r\n                            </Link>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <Dropdown\r\n                                className=\"user-menu custom-relative-dropdown\"\r\n                                isOpen={resourcesDropdown}\r\n                                toggle={() => setResourcesDropdown(!resourcesDropdown)}\r\n                            >\r\n                                <DropdownToggle>\r\n                                    Resources <Icon icon=\"fe:arrow-down\" />\r\n                                </DropdownToggle>\r\n                                <DropdownMenu>\r\n                                    <DropdownItem className={active === 'resources-1' ? 'active p-0' : 'p-0'}>\r\n                                        <Link className=\"px-3 py-1\" to={routeUrls.blog} title=\"Blog\"\r\n                                            onClick={() => setActive('resources-1')}>\r\n                                            Blog\r\n                                        </Link>\r\n                                    </DropdownItem>\r\n                                    <DropdownItem className={active === 'resources-2' ? 'active p-0' : 'p-0'}>\r\n                                        <Link className=\"px-3 py-1\" to={routeUrls.tutorials} title=\"Tutorials\"\r\n                                            onClick={() => setActive('resources-2')}>\r\n                                            Tutorials\r\n                                        </Link>\r\n                                    </DropdownItem>\r\n                                </DropdownMenu>\r\n                            </Dropdown>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <Dropdown\r\n                                className=\"user-menu custom-relative-dropdown\"\r\n                                isOpen={communityDropdown}\r\n                                toggle={() => setCommunityDropdown(!communityDropdown)}\r\n                            >\r\n                                <DropdownToggle>\r\n                                    Community <Icon icon=\"fe:arrow-down\" />\r\n                                </DropdownToggle>\r\n                                <DropdownMenu>\r\n                                    <DropdownItem className={active === 'community-1' ? 'active p-0' : 'p-0'}>\r\n                                        <Link className=\"px-3 py-1\" to={routeUrls.pages.meetTheTeam}\r\n                                            title=\"Meet the Team\"\r\n                                            onClick={() => setActive('community-1')}>\r\n                                            Meet the Team\r\n                                        </Link>\r\n                                    </DropdownItem>\r\n                                    <DropdownItem className={active === 'community-3' ? 'active p-0' : 'p-0'}>\r\n                                        <Link className=\"px-3 py-1\" to={routeUrls.pages.becomeAnAmbasador} title=\"Become an ambassador\"\r\n                                            onClick={() => setActive('community-3')}>\r\n                                            Become an ambassador\r\n                                        </Link>\r\n                                    </DropdownItem>\r\n                                    <DropdownItem className={active === 'community-4' ? 'active p-0' : 'p-0'}>\r\n                                        <Link className=\"px-3 py-1\" to={routeUrls.pages.spritacularGoogleGroup}\r\n                                            title=\"Spritacular Google Group\"\r\n                                            onClick={() => setActive('community-4')}>\r\n                                            Spritacular Google Group\r\n                                        </Link>\r\n                                    </DropdownItem>\r\n                                </DropdownMenu>\r\n                            </Dropdown>\r\n                        </NavItem>\r\n                        {!persist ? (\r\n                            <>\r\n                                <NavItem className=\"open-modal-btn\">\r\n                                    <Button\r\n                                        className=\"register nav-link\"\r\n                                        onClick={() => handleRegisterModal()}\r\n                                    >\r\n                                        Register\r\n                                    </Button>\r\n                                </NavItem>\r\n                                <NavItem className=\"open-modal-btn\">\r\n                                    <Button\r\n                                        className=\"nav-link login-btn\"\r\n                                        onClick={() => handleLoginModal()}\r\n                                    >\r\n                                        Login\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </>\r\n                        ) : ('')}\r\n                    </Nav>\r\n                </Collapse>\r\n\r\n                {!persist ? (\r\n                    <div className=\"right-menu\">\r\n                        <Button\r\n                            className=\"register nav-link\"\r\n                            onClick={() => handleRegisterModal()}\r\n                        >\r\n                            Register\r\n                        </Button>\r\n                        <Button\r\n                            className=\"nav-link login-btn\"\r\n                            onClick={() => handleLoginModal()}\r\n                        >\r\n                            Login\r\n                        </Button>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"after-login-right-menu\">\r\n                        {/* NotificationComponent Dropdown  */}\r\n                        <NotificationComponent notificationArray={notificationArray}\r\n                            setNotificationArray={setNotificationArray} />\r\n                        {/* User Profile Dropdown  */}\r\n                        <Dropdown\r\n                            className=\"user-menu\"\r\n                            isOpen={showUserMenu}\r\n                            toggle={handleUserMenuDropdown}\r\n                        >\r\n                            <DropdownToggle>\r\n                                <div className=\"profile_img\">\r\n                                    {user?.profile_image ? (\r\n                                        <LazyLoad\r\n                                            src={user?.profile_image}\r\n                                            alt={user?.first_name}\r\n                                        />\r\n                                    ) : (\r\n                                        <Icon icon=\"entypo:user\" />\r\n                                    )}\r\n                                </div>\r\n                                <span className=\"profile_text\">\r\n                                    <span>{user?.first_name} {user?.last_name}{\" \"}</span>\r\n                                    <Icon icon=\"fe:arrow-down\" />\r\n                                </span>\r\n                            </DropdownToggle>\r\n                            <DropdownMenu container=\"body\">\r\n                                <DropdownItem className=\"p-0\">\r\n                                    <Link className=\"px-3 py-1\" to={routeUrls.myObservations}>My Observation</Link>\r\n                                </DropdownItem>\r\n                                {admin &&\r\n                                    <>\r\n                                        <DropdownItem className=\"p-0\">\r\n                                            <Link\r\n                                                className=\"px-3 py-1\"\r\n                                                to={`${routeUrls.dashboard}/${routeUrls.dashBlog.list}`}>\r\n                                                Manage Articles\r\n                                            </Link>\r\n                                        </DropdownItem>\r\n                                        <DropdownItem className=\"p-0\">\r\n                                            <Link\r\n                                                className=\"px-3 py-1\"\r\n                                                to={`${routeUrls.dashboard}/${routeUrls.dashTutorial.list}`}>\r\n                                                Manage Tutorials\r\n                                            </Link>\r\n                                        </DropdownItem>\r\n                                    </>\r\n                                }\r\n                                <DropdownItem className=\"p-0\" onClick={() => setActive('')}>\r\n                                    <Link className=\"px-3 py-1\" to={routeUrls.profile}>Edit Profile</Link>\r\n                                </DropdownItem>\r\n                                <DropdownItem className=\"p-0\" onClick={() => {\r\n                                    handleChangePasswordModal();\r\n                                }}>\r\n                                    <p className=\"px-3 py-1 m-0\">\r\n                                        Change Password\r\n                                    </p>\r\n                                </DropdownItem>\r\n                                <DropdownItem className=\"p-0\" onClick={() => {\r\n                                    Logout();\r\n                                    setActive('')\r\n                                }}><p className=\"px-3 py-1 m-0\">Logout</p></DropdownItem>\r\n                            </DropdownMenu>\r\n                        </Dropdown>\r\n                    </div>\r\n                )}\r\n            </Navbar>\r\n\r\n            {isLoginModal && (\r\n                <LoginPopup\r\n                    open={persist && auth ? false : isLoginModal}\r\n                    handleClose={handleLoginModal}\r\n                />\r\n            )}\r\n\r\n            {isRegisterModal && (\r\n                <RegisterPopup\r\n                    open={persist && auth ? false : isRegisterModal}\r\n                    handleClose={handleRegisterModal}\r\n                    handleLoginModal={handleLoginModal}\r\n                    modalClass=\"registerModal\"\r\n                />\r\n            )}\r\n\r\n            {isChangePasswordModal && (\r\n                <ChangePasswordPopup\r\n                    open={isChangePasswordModal}\r\n                    handleClose={handleChangePasswordModal}\r\n                    data={auth}\r\n                />\r\n            )}\r\n\r\n            {auth?.user?.is_first_login && (\r\n                <UserProfilePopup\r\n                    open={showUserProfilePopup}\r\n                    handleClose={handleUserProfilePopup}\r\n                    data={auth}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\nexport default Header;\r\n","import {\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n} from \"reactstrap\";\r\nimport Images from \"../../static/images\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../../assets/scss/component/modal.scss\";\r\nimport { Suspense, lazy } from 'react';\r\n\r\nconst ChangePassword = lazy(()=> import('../Account/ChangePassword'))\r\n\r\nconst ChangePasswordPopup = (props) => {\r\n  const { open, handleClose, modalClass, data } = props;\r\n\r\n  return (\r\n    <Modal\r\n      className={modalClass ? modalClass : \"common-modal\"}\r\n      isOpen={open}\r\n      toggle={handleClose}\r\n      centered\r\n      backdrop={true}\r\n      keyboard={false}\r\n    >\r\n      <ModalHeader className=\"text-center justify-content-center\">\r\n        Change Password\r\n        <Button className=\"close-icon\" onClick={() => handleClose()}>\r\n          <img src={Images.Modalcloseicon} alt=\"close-icon\" />\r\n        </Button>\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n          <ChangePassword user={data} />\r\n        </Suspense>\r\n      </ModalBody>\r\n    </Modal>\r\n  );\r\n};\r\nChangePasswordPopup.propTypes = {\r\n  open: PropTypes.bool,\r\n  handleClose: PropTypes.func,\r\n};\r\n\r\nexport default ChangePasswordPopup;\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"../../api/axios\";\r\nimport PropTypes from \"prop-types\";\r\nimport {baseURL} from \"../../helpers/url\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport {Button} from \"reactstrap\";\r\nimport { Icon } from '@iconify/react';\r\nimport LazyLoad from \"./LazyLoad\";\r\n\r\nconst ImageUpload = (props) => {\r\n  const { setAuth } = useAuth();\r\n  const { user, token } = props;\r\n  const [file, setFile] = useState(\"\");\r\n  const [data, setData] = useState(\"\");\r\n  const [progress, setProgress] = useState(\"0\");\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleChange = (e) => {\r\n    const file = e.target.files[0];\r\n    setFile(file);\r\n    setProgress('0')\r\n  };\r\n    const fileUpload = useCallback(async () => {\r\n        setError('');\r\n        const formData = new FormData();\r\n        formData.append(\"profile_image\", file);\r\n        await axios.patch(baseURL.api + \"/users/user_profile/\" + user?.id + \"/\", formData, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n            withCredentials: true,\r\n            onUploadProgress: (ProgressEvent) => {\r\n                let progressBar = Math.round((ProgressEvent.loaded / ProgressEvent.total) * 100) + \"%\";\r\n                setProgress(progressBar);\r\n            },\r\n        }).then((response) => {\r\n            setData(response.data);\r\n            setAuth(prev => {\r\n                return {\r\n                    ...prev,\r\n                    user: {\r\n                        ...user,\r\n                        profile_image: response?.data?.profile_image.replace(baseURL.remote, \"\"),\r\n                    }\r\n                }\r\n            });\r\n        }).catch((error) => {\r\n            setError(error.response);\r\n        })\r\n    }, [file]);\r\n\r\n    useEffect(() => {\r\n        if (file) {\r\n            fileUpload().then(r => r);\r\n        }\r\n    }, [file, fileUpload]);\r\n\r\n\r\n    const ProfilePreview = () =>{\r\n      return(\r\n        <>\r\n          <label className=\"form-label-border\">\r\n              <LazyLoad\r\n                  src={user?.profile_image}\r\n                  alt={user?.first_name}\r\n              />\r\n          </label>\r\n          <Button className=\"edit-btn\"><Icon icon=\"lucide:edit-2\" /></Button>\r\n          <input type=\"file\" name=\"profile_image\" onChange={handleChange} />\r\n        </>\r\n      )\r\n    }\r\n    const ProfileLoader = () =>{\r\n      return(\r\n        <>\r\n          <div className='progressBar' style={{ \"--percentage\": progress }}>\r\n              <div className=\"wrapper\">\r\n                <b>{progress}</b>\r\n                <span>uploading..</span>\r\n              </div>\r\n          </div>\r\n        </>\r\n      )\r\n    }\r\n    const ProfileUploadText = () =>{\r\n      return(\r\n        <>\r\n          <div className='form-label'>\r\n              <div className=\"wrapper\">\r\n                <span>Please upload your image</span>\r\n                <input type=\"file\" name=\"profile_image\" onChange={handleChange} />\r\n              </div>\r\n          </div>\r\n        </>\r\n      )\r\n    }\r\n    \r\n  return (\r\n    <>\r\n      <div className=\"user-profile-upload\">\r\n        {data ? (\r\n          <>\r\n            {progress > \"1\" && !error && progress !== \"100%\" ? (\r\n              <ProfileLoader />\r\n            ) : (\r\n              <ProfilePreview />\r\n            )}\r\n          </>\r\n        ) : (\r\n          <>\r\n          {user?.profile_image ? (\r\n            <>\r\n            {progress > \"1\"  && progress !== \"100%\" ? (\r\n              <ProfileLoader />\r\n            ) : (\r\n              <ProfilePreview />\r\n            )}\r\n          </>\r\n          ) : (\r\n            <>\r\n            {progress > \"1\" && error?.status !== 400 ? (\r\n              < ProfileLoader />\r\n            ) : (\r\n              <ProfileUploadText />\r\n            )\r\n\r\n            }\r\n            </>\r\n          )}\r\n            \r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <>\r\n        {error?.data &&\r\n          error.data.profile_image.map((error, i) => {\r\n            return (\r\n              <span key={i} className=\"text-danger small\">\r\n                {error}\r\n              </span>\r\n            );\r\n          })}\r\n      </>\r\n    </>\r\n  );\r\n};\r\nImageUpload.propTypes = {\r\n  progress: PropTypes.number,\r\n};\r\n\r\nexport default ImageUpload;\r\n","import {useEffect, useState} from \"react\";\r\nimport {placeholder} from \"./placeholder\";\r\n\r\nconst LazyLoad = (props) => {\r\n    const {src, alt, imageClass, converted} = props;\r\n    const [imageSrc, setImageSrc] = useState(null)\r\n    const [imageRef, setImageRef] = useState('')\r\n\r\n    const onLoad = (event) => {\r\n        event.target.classList.add('loaded')\r\n    }\r\n    const onError = (event) => {\r\n        event.target.classList.add('has-error')\r\n    }\r\n\r\n    useEffect(() => {\r\n        let observer\r\n        let didCancel = false\r\n\r\n        if (imageRef && imageSrc !== src) {\r\n            if (IntersectionObserver) {\r\n                observer = new IntersectionObserver(\r\n                    (entries) => {\r\n                        entries.forEach((entry) => {\r\n                            if (\r\n                                !didCancel &&\r\n                                (entry.intersectionRatio > 0 || entry.isIntersecting)\r\n                            ) {\r\n                                setImageSrc(src)\r\n                                observer.unobserve(imageRef)\r\n                            }\r\n                        })\r\n                    },\r\n                    {\r\n                        threshold: 0.01,\r\n                        rootMargin: '75%',\r\n                    }\r\n                )\r\n                observer.observe(imageRef)\r\n            } else {\r\n                setImageSrc(src)\r\n            }\r\n        }\r\n        return () => {\r\n            didCancel = true\r\n            if (observer && observer.unobserve) {\r\n                observer.unobserve(imageRef)\r\n            }\r\n        }\r\n    }, [src, imageSrc, imageRef, converted])\r\n\r\n    return (\r\n        <>\r\n            <img\r\n                className={imageClass ? imageClass + ' img-fluid' : 'img-fluid'}\r\n                ref={setImageRef}\r\n                src={imageSrc}\r\n                alt={alt}\r\n                onLoad={onLoad}\r\n                onError={onError}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LazyLoad;"],"names":["props","useState","user","setUser","open","handleClose","modalClass","data","useEffect","className","isOpen","centered","backdrop","keyboard","onClick","src","Images","alt","md","ImageUpload","token","access","first_name","last_name","email","ReactCountryFlag","country","country_code","location","to","routeUrls","firebaseApp","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","messaging","getMessaging","notificationArray","setNotificationArray","auth","useAuth","show","setShow","notification","setNotification","isTokenFound","setTokenFound","notificationDropdown","setNotificationDropdown","setData","notificationDropDownRef","useRef","Notification","requestPermission","then","permission","catch","e","console","log","id","userId","getToken","vapidKey","currentToken","axios","baseURL","headers","response","error","err","getTokens","r","useLayoutEffect","Promise","resolve","onMessage","payload","handleNotificationStatusUpdate","notificaitonIds","setTimeout","toggle","icon","ref","container","header","length","event","map","item","push","notification_id","toString","document","querySelectorAll","forEach","classList","add","handleMarkAsRead","index","animation","content","from_user","image","title","body","moment","sent_at","fromNow","divider","style","height","setAuth","persist","setPersist","isLoginModal","setIsLoginModal","isRegisterModal","setIsRegisterModal","isChangePasswordModal","setIsChangePasswordModal","showMenu","setShowMenu","showUserMenu","setShowUserMenu","showUserProfilePopup","setShowUserProfilePopup","aboutDropdown","setAboutDropdown","resourcesDropdown","setResourcesDropdown","communityDropdown","setCommunityDropdown","active","setActive","homeUrl","useLocation","pathname","navigate","useNavigate","addEventListener","scroll","window","pageYOffset","documentElement","scrollTop","navbarEl","querySelector","remove","href","split","results","handleLoginModal","handleRegisterModal","handleChangePasswordModal","admin","is_superuser","is_trained","is_user","expand","light","cdn","navbar","color","width","profile_image","LazyLoad","localStorage","removeItem","sessionStorage","LoginPopup","RegisterPopup","ChangePasswordPopup","is_first_login","ChangePassword","lazy","Suspense","fallback","file","setFile","progress","setProgress","setError","handleChange","target","files","fileUpload","useCallback","formData","FormData","append","Authorization","withCredentials","onUploadProgress","ProgressEvent","progressBar","Math","round","loaded","total","prev","replace","ProfilePreview","type","name","onChange","ProfileLoader","ProfileUploadText","status","i","imageClass","converted","imageSrc","setImageSrc","imageRef","setImageRef","observer","didCancel","IntersectionObserver","entries","entry","intersectionRatio","isIntersecting","unobserve","threshold","rootMargin","observe","onLoad","onError"],"sourceRoot":""}