{"version":3,"file":"static/js/1752.557fcfda.chunk.js","mappings":"kKAiBA,IAfiB,WACb,OACI,iBAAKA,UAAU,iBAAf,WACI,gBACIC,IAAKC,EAAAA,EAAAA,YACLC,IAAI,gBACJH,UAAU,UAEd,0BACI,cAAGA,UAAU,yBAAb,mBADJ,yB,+ECRCI,EAAW,SAACC,GACrB,IAAOC,EAAkBD,EAAlBC,eACP,OACI,SAAC,KAAD,CAAQN,UAAU,kDAAkDO,QAAS,kBAAKD,KAAlF,yB,+NCLD,IAAME,EAAO,CAChBC,kBAAoB,oBACpBC,iBAAmB,mBACnBC,iBAAmB,oBAGVC,EAAiB,CAC1BC,eAAgB,iBAChBC,cAAe,iBAGNC,EAAe,CACxBC,QAAU,UACVC,UAAY,YACZC,SAAW,YAGFC,EAAU,CACnBC,QAAS,WACTC,SAAW,WACXC,WAAY,aACZC,OAAQ,SACRC,MAAO,SAaEC,EAA0B,SAACC,EAAQC,EAAWC,EAAMC,GAC7D,MAAO,CACHC,GAAKJ,EACLK,gBAAgB,EAChBC,iBAAiB,EACjBC,MAAQN,EACRO,aAAY,OAAEN,QAAF,IAAEA,OAAF,EAAEA,EAAMM,aACpBC,KAAI,OAAEP,QAAF,IAAEA,OAAF,EAAEA,EAAMO,KACZP,KAAMA,EACNQ,SAAUP,EAAeA,EAAaO,SAAW,QACjDC,UAAWR,EAAeA,EAAaQ,UAAY,QACnDC,SAAU,2BACVC,aAAc,KACdC,SAAU,KACVC,SAAU,KACVC,SAAU,iBACVC,QAAS,IACTC,cAAc,GACdC,mBAAmB,EACnBC,aAAc,CACVC,SAAU,GACVC,UAAU,EACVC,YAAa,MAKZC,EAAiB,CAC1B,CAACf,KAAM,IAAKgB,MAAO,IAAK/B,SAAU,GAClC,CAACe,KAAM,KAAMgB,MAAO,GAAI/B,SAAU,GAClC,CAACe,KAAM,IAAKgB,MAAO,GAAI/B,SAAU,GACjC,CAACe,KAAM,KAAMgB,MAAO,IAAK/B,SAAU,GACnC,CAACe,KAAM,IAAKgB,MAAO,IAAK/B,SAAU,GAClC,CAACe,KAAM,KAAMgB,MAAO,IAAK/B,SAAU,GACnC,CAACe,KAAM,IAAKgB,MAAO,IAAK/B,SAAU,GAClC,CAACe,KAAM,KAAMgB,MAAO,IAAK/B,SAAU,IAG1BgC,EAAqB,SAACC,GAE/B,IAAIC,EACJ,OAAQD,GACJ,IAAK,IACDC,EAAS,IACT,MACJ,IAAK,KACDA,EAAS,GACT,MACJ,IAAK,IACDA,EAAS,GACT,MACJ,IAAK,KACDA,EAAS,IACT,MACJ,IAAK,IACDA,EAAS,IACT,MACJ,IAAK,KACDA,EAAS,IACT,MACJ,IAAK,IACDA,EAAS,IACT,MACJ,IAAK,KACDA,EAAS,IACT,MAEJ,QACIA,EAASD,EAGjB,OAAOC,GAGEC,EAAoB,SAACF,GAE9B,IAAIF,EACJ,OAAQE,GACJ,KAAK,IAyBL,QACIF,EAAQ,IACR,MAxBJ,KAAK,GACDA,EAAQ,KACR,MACJ,KAAK,GACDA,EAAQ,IACR,MACJ,KAAK,IACDA,EAAQ,KACR,MACJ,KAAK,IACDA,EAAQ,IACR,MACJ,KAAK,IACDA,EAAQ,KACR,MACJ,KAAK,IACDA,EAAQ,IACR,MACJ,KAAK,IACDA,EAAQ,KAOhB,OAAOA,I,gDCpIX,IAPwB,WACpB,IAAQK,GAAsBC,EAAAA,EAAAA,YAAWC,EAAAA,oBAAjCF,kBAGR,OADAG,EAAAA,EAAAA,eAAcH,GAAmB,SAAAA,GAAiB,OAAqB,OAAjBA,QAAiB,IAAjBA,GAAAA,EAAmBI,KAAO,aAAe,qBACxFH,EAAAA,EAAAA,YAAWC,EAAAA,sB,gDCEtB,IAN4B,WACxB,IAAQG,GAAwBJ,EAAAA,EAAAA,YAAWK,EAAAA,GAAnCD,oBAER,OADAF,EAAAA,EAAAA,eAAcE,GAAqB,SAAAA,GAAmB,OAAIA,EAAsB,gBAAkB,2BAC3FJ,EAAAA,EAAAA,YAAWK,EAAAA,K,+QCahBC,GAAqBC,EAAAA,EAAAA,OAAK,kBAAM,sEAChCC,GAAwBD,EAAAA,EAAAA,OAAK,kBAAM,mGACnCE,GAA4BF,EAAAA,EAAAA,OAAK,kBACnC,mCAqQJ,UAlQuB,WAAO,IAAD,UAClBG,GAAQC,EAAAA,EAAAA,KAARD,KACP,GAAwEE,EAAAA,EAAAA,KAAjEC,EAAP,EAAOA,mBAAoBC,EAA3B,EAA2BA,oBAAqBC,EAAhD,EAAgDA,qBAChD,GAAsDC,EAAAA,EAAAA,KAA/CZ,EAAP,EAAOA,oBAAqBa,EAA5B,EAA4BA,uBAC5B,GAA8DC,EAAAA,EAAAA,WAAS,GAAvE,eAAOC,EAAP,KAAiCC,EAAjC,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAoCJ,EAAAA,EAAAA,UAAS,YAA7C,eAAOK,EAAP,KAAmBC,EAAnB,KACA,GAA0DN,EAAAA,EAAAA,YAA1D,eAAOO,EAAP,KAA8BC,EAA9B,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAsCV,EAAAA,EAAAA,UAClC,8CADJ,gBAAOW,GAAP,MAAoBC,GAApB,MAGA,IACIZ,EAAAA,EAAAA,WAAS,GADb,iBAAOa,GAAP,MAAmCC,GAAnC,MAWMC,GAAuC,mCAAG,WAAO9B,GAAP,wEAC5CY,EAAqB,IACrBF,EAAmB,IAFyB,SAGtCqB,GAAoB/B,GAHkB,iCAIrC,GAJqC,2CAAH,sDAOvC+B,GAAsB,SAAC/B,GACzBW,GAAoB,SAACqB,GACjB,OAAO,kBACAA,GADP,IAEIC,MAAO,EACPC,OAAQ,EACRC,MAAK,QACDC,QAAQ,GACLpC,SAMbqC,GAAqB,WAAwC,IAAD,EAE1DC,EAFoBC,EAAsC,wDAAvBC,EAAuB,uDAAf,WAC/CnB,EAAcmB,GAKVF,GAHU,IAAVC,GAAmBb,GAG0CA,GAAYe,QAAQ,OAAQ,SAFtF,UAAMC,EAAAA,GAAAA,IAAN,qDAA8DF,EAA9D,WAIPG,EAAAA,EAAAA,IAAA,UACYL,GAAO,CACXM,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,cAAYtC,QAAZ,IAAYA,GAAZ,UAAYA,EAAMuC,aAAlB,aAAY,EAAaC,WAG7CC,MAAK,SAACC,GAAa,IAAD,IAEU,EADrBjD,EAAI,OAAGiD,QAAH,IAAGA,GAAH,UAAGA,EAASjD,YAAZ,aAAG,EAAekD,QAC1B,OAAID,QAAJ,IAAIA,GAAJ,UAAIA,EAASjD,YAAb,OAAI,EAAemD,KACfxB,GAAc,OAACsB,QAAD,IAACA,GAAD,UAACA,EAASjD,YAAV,aAAC,EAAemD,MAE9BxB,GAAe,MAGnB,IACIyB,EADAC,EAAO,OAAGrD,QAAH,IAAGA,OAAH,EAAGA,EAAMA,KAGG,OAAnBC,QAAmB,IAAnBA,GAAAA,EAAqBqD,OAASf,GAC9Ba,GAAQ,OAAOnD,EAAoBqD,MACnCF,EAAQ,kBAAOA,IAAP,OAAoBC,KAE5BD,EAAQ,OAAGpD,QAAH,IAAGA,OAAH,EAAGA,EAAMA,KAIrBc,GAAuB,SAACkB,GACpB,OAAO,kBACAA,GADP,IAEIsB,KAAMF,EACNG,MAAO,CACH9F,SAAQ,OAAEuC,QAAF,IAAEA,OAAF,EAAEA,EAAMwD,eAChB9F,WAAU,OAAEsC,QAAF,IAAEA,OAAF,EAAEA,EAAMyD,iBAClB9F,OAAM,OAAEqC,QAAF,IAAEA,OAAF,EAAEA,EAAM0D,aACd9F,MAAK,OAAEoC,QAAF,IAAEA,OAAF,EAAEA,EAAM2D,YACb1B,OACQ,OAAJjC,QAAI,IAAJA,OAAA,EAAAA,EAAMwD,iBAAN,OACAxD,QADA,IACAA,OADA,EACAA,EAAMyD,mBADN,OAEAzD,QAFA,IAEAA,OAFA,EAEAA,EAAM0D,eAFN,OAGA1D,QAHA,IAGAA,OAHA,EAGAA,EAAM2D,mBAKtBxC,GAAY,MAEfyC,OAAM,SAACC,GACJC,QAAQC,IAAIF,EAAMG,cASxBC,GAA0B,SAACC,GAC7BrC,IAA4B,GAC5BR,EAAc6C,GAEdpD,GAAuB,SAACkB,GACpB,OAAO,kBACAA,GADP,IAEIsB,KAAM,QAIdjB,IAAmB,EAAM6B,GAEzBC,YAAW,WACPtC,IAA4B,KAC7B,MAODuC,GAAS,OAAGnE,QAAH,IAAGA,OAAH,EAAGA,EAAqBsD,MAkBvC,OAhBAc,EAAAA,EAAAA,YAAU,WACNvD,GAAuB,SAACkB,GAAU,IAAD,EAC7B,OAAO,kBACAA,GADP,IAEIE,OAAM,OAAEjC,QAAF,IAAEA,GAAF,UAAEA,EAAqBqD,YAAvB,aAAE,EAA4BhC,GACpCF,WAAYA,SAGrB,CAACJ,EAA0BI,KAE9BiD,EAAAA,EAAAA,YAAU,WACNhC,IAAmB,EAAM,YACzBlB,GAAY,KACb,CAACD,KAGY,OAATkD,SAAS,IAATA,QAAA,EAAAA,GAAWnC,OAAQ,GACtB,qBAAS7F,UAAU,sBAAnB,WACI,SAAC,KAAD,WACI,gBAAKA,UAAU,wBAAf,UACI,UAAC,KAAD,YACI,SAAC,KAAD,CAAKkI,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGpI,UAAU,qBAArC,UACI,iBACIA,UAAU,iGADd,WAEI,kBACIA,UACIgF,IAAe7D,EAAAA,GAAAA,SACT,qBACA,eAEVZ,QAAS,kBAAMsH,GAAwB1G,EAAAA,GAAAA,WAN3C,8BAQa0C,QARb,IAQaA,GARb,UAQaA,EAAqBsD,aARlC,aAQa,EAA4B9F,SARzC,QAUA,kBACIrB,UACIgF,IAAe7D,EAAAA,GAAAA,WACT,qBACA,eAEVZ,QAAS,kBAAMsH,GAAwB1G,EAAAA,GAAAA,aAN3C,gCAQiB0C,QARjB,IAQiBA,GARjB,UAQiBA,EAAqBsD,aARtC,aAQiB,EAA4B7F,WAR7C,QAUA,kBACItB,UACIgF,IAAe7D,EAAAA,GAAAA,OACT,qBACA,eAEVZ,QAAS,kBAAMsH,GAAwB1G,EAAAA,GAAAA,SAN3C,4BAQW0C,QARX,IAQWA,GARX,UAQWA,EAAqBsD,aARhC,aAQW,EAA4B5F,OARvC,QAUA,kBACIvB,UACIgF,IAAe7D,EAAAA,GAAAA,MACT,qBACA,eAEVZ,QAAS,kBAAMsH,GAAwB1G,EAAAA,GAAAA,QAN3C,4BAQW0C,QARX,IAQWA,GARX,UAQWA,EAAqBsD,aARhC,aAQW,EAA4B3F,MARvC,aAYR,SAAC,KAAD,CAAK0G,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGpI,UAAU,8BAArC,UACI,gBACIA,UAAU,6FADd,UAEI,UAAC,KAAD,CACIqI,GAAI,IAAMC,EAAAA,GAAAA,gBACVtI,UAAU,6CAFd,WAII,SAAC,KAAD,CACIuI,KAAK,2BACLC,MAAM,KACNC,OAAO,OAPf,qCAmBpB,SAAC,KAAD,UACKjD,IACG,SAAC,IAAD,KACmB,OAAnB3B,QAAmB,IAAnBA,GAAA,UAAAA,EAAqBqD,YAArB,eAA2BwB,QAAS,GACpC,UAAC,EAAAC,SAAD,CAAUC,UAAU,mBAApB,WACI,SAAC3E,EAAD,CACIe,WAAYA,EACZ6D,gBAAe,OAAEhF,QAAF,IAAEA,OAAF,EAAEA,EAAqBqD,KACtCtC,yBAA0BA,EAC1BC,0BAA2BA,EAC3BM,yBAA0BA,IAE7BG,KAAe,SAAC,IAAD,CAAUhF,eA1GvB,WACnB2F,IAAmB,EAAOjB,UA4Gd,SAAC,IAAD,OAIR,SAAC,EAAA2D,SAAD,CAAUC,UAAU,mBAApB,UACI,SAAC7E,EAAD,CACIH,KAAI,OAAEC,QAAF,IAAEA,OAAF,EAAEA,EAAqBiC,OAC3Bd,WAAYA,EACZ8D,WAAW,4BACXC,KAAMnE,EACNoE,YA9IqB,SAAClH,GAClC+C,GAA2BD,GAC3BO,EAAyBrD,IA6IbmH,mBAvOc,SAACrF,GAC3B8B,GAAwC9B,GAAMgD,MAAK,SAACsC,GAAD,OAAOA,KAC1DrE,GAA0B,GAC1BkD,YAAW,WACP3C,EAAS,0BACV,MAmOS+D,yBAA0BlD,GAC1BmD,YAAanD,WAKzB,SAAC,EAAA0C,SAAD,CAAUC,UAAU,mBAApB,UACI,SAAC1E,EAAD,CAA2BiD,MAAOa,S,oJCnRjCtE,GAAqB2F,EAAAA,EAAAA,eAAc,IAoDhD,UAlDqB,WACjB,OAA8C1E,EAAAA,EAAAA,UAAS,CACnD2E,WAAY,IADhB,eAAOC,EAAP,KAAwBC,EAAxB,KAIA,GAAgD7E,EAAAA,EAAAA,UAAS,CACrDkB,MAAO,EACPC,OAAQ,EACRC,KAAM,CACFC,QAAQ,KAJhB,eAAOyD,EAAP,KAAyBlF,EAAzB,KAOA,GAAkDI,EAAAA,EAAAA,UAAS,IAA3D,eAAOnB,EAAP,KAA0BgB,EAA1B,KACA,GAA0CG,EAAAA,EAAAA,UAAS+E,EAAAA,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAsDjF,EAAAA,EAAAA,UAAS,IAA/D,eAAOkF,EAAP,KAA4BC,EAA5B,KACA,GAA8CnF,EAAAA,EAAAA,UAAS,IAAvD,eAAOoF,EAAP,KAAwBzF,EAAxB,KAaA,OAXA2D,EAAAA,EAAAA,YAAU,WACN,IAAIrE,EAAO,OAACJ,QAAD,IAACA,GAAAA,EAAmBI,MAApB,cAAgCJ,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAmBI,MAAQ,GACtEU,EAAmB,CAEfgF,WAAU,OAAEC,QAAF,IAAEA,OAAF,EAAEA,EAAiBD,WAC7BU,SAAUpG,EACVqG,gBAAiB,KACjBC,UAAY,OAEjB,QAAC1G,QAAD,IAACA,OAAD,EAACA,EAAmBI,KAApB,OAA0B6F,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAkBU,SAA5C,OAAsDZ,QAAtD,IAAsDA,OAAtD,EAAsDA,EAAiBD,cAGtE,SAAC5F,EAAmB0G,SAApB,CAA6BhE,MACzB,CACImD,gBAAAA,EACAC,mBAAAA,EACAC,iBAAAA,EACAlF,oBAAAA,EACAf,kBAAAA,EACAgB,qBAAAA,EACAqF,oBAAAA,EACAC,uBAAAA,EACAC,gBAAAA,EACAzF,mBAAAA,EACAqF,cAAAA,EACAC,iBAAAA,GAbR,UAgBI,SAAC,KAAD,Q","sources":["components/Common/NotFound.jsx","components/Shared/LoadMore.jsx","helpers/observation.js","hooks/useObservations.js","hooks/useObservationsData.js","pages/Observation/MyObservations.jsx","pages/Observation/Observations.jsx"],"sourcesContent":["import Images from \"../../static/images\";\n\nconst NotFound = () => {\n    return (\n        <div className=\"data-not-found\">\n            <img\n                src={Images.NoDataFound}\n                alt=\"No data found\"\n                className=\"mb-3\"\n            />\n            <p>\n                <b className=\"text-secondary fw-bold\">Opps!</b> No Data Found\n            </p>\n        </div>\n    )\n}\n\nexport default NotFound;","import { Button} from 'reactstrap';\n\nexport const LoadMore = (props) => {\n    const {handleLoadMore} = props;\n    return (\n        <Button className='gray-outline-btn d-block mx-auto px-4 fw-normal' onClick={()=> handleLoadMore()}>Load more</Button>\n    )\n};","export const Tabs = {\n    ObservationImages : \"ObservationImages\",\n    DateTimeLocation : \"DateTimeLocation\",\n    EquipmentDetails : \"EquipmentDetails\",\n}\n\nexport const MultiImageTabs = {\n    MultipleImages: \"MultipleImages\",\n    ImageSequence: \"ImageSequence\"\n}\n\nexport const imageDetails = {\n    Details : \"Details\",\n    Equipment : \"Equipment\",\n    Comments : \"Comments\",\n}\n\nexport const obvType = {\n    default: \"verified\",\n    verified : \"verified\",\n    unverified: \"unverified\",\n    denied: \"denied\",\n    draft: \"draft\"\n}\n\nexport const masonryConfig = (selector, width, gutter, fit=false, transition) => {\n    return {\n        columnWidth: width,\n        gutter: gutter,\n        itemSelector: selector,\n        fitWidth: false,\n        transitionDuration: transition,\n    }\n}\n\nexport const uploadImageDefaultState = (random, baseImage, item, userLocation) => {\n    return {\n        id : random,\n        sameAsFirstMap: false,\n        sameAsFirstDate: false,\n        image : baseImage,\n        lastModified: item?.lastModified,\n        name: item?.name,\n        item: item,\n        latitude: userLocation ? userLocation.latitude : 28.5204,\n        longitude: userLocation ? userLocation.longitude : 25.8567,\n        location: 'Pune, Maharashtra, India',\n        country_code: 'IN',\n        obs_date: null,\n        obs_time: null,\n        timezone: 'Africa/Abidjan',\n        azimuth: 360,\n        time_accuracy:'',\n        is_precise_azimuth:0,\n        category_map: {\n            category: [],\n            is_other: false,\n            other_value: ''\n        }\n    }\n}\n\nexport const directionValue = [\n    {name: 'N', angle: 360, default : true},\n    {name: 'NE', angle: 45, default : false},\n    {name: 'E', angle: 90, default : false},\n    {name: 'SE', angle: 135, default : false},\n    {name: 'S', angle: 180, default : false},\n    {name: 'SW', angle: 235, default : false},\n    {name: 'W', angle: 270, default : false},\n    {name: 'NW', angle: 315, default : false},\n]\n\nexport const getdirectionDegree = (key) => {\n    \n    let degree;\n    switch (key) {\n        case 'N':\n            degree = 360;\n            break;\n        case 'NE':\n            degree = 45;\n            break;\n        case 'E':\n            degree = 90;\n            break;\n        case 'SE':\n            degree = 135;\n            break;\n        case 'S':\n            degree = 180;\n            break;\n        case 'SW':\n            degree = 235;\n            break;\n        case 'W':\n            degree = 270;\n            break;\n        case 'NW':\n            degree = 315;\n            break;\n    \n        default:\n            degree = key;\n            break;\n    }\n    return degree\n}\n\nexport const getdirectionAngle = (key) => {\n    \n    let angle;\n    switch (key) {\n        case 360:\n            angle = 'N';\n            break;\n        case 45:\n            angle = 'NE';\n            break;\n        case 90:\n            angle = 'E';\n            break;\n        case 135:\n            angle = 'SE';\n            break;\n        case 180:\n            angle = 'S';\n            break;\n        case 235:\n            angle = 'SW';\n            break;\n        case 270:\n            angle = 'W';\n            break;\n        case 315:\n            angle = 'NW';\n            break;\n    \n        default:\n            angle = 'N';\n            break;\n    }\n    return angle\n}","import {useContext, useDebugValue} from \"react\";\nimport {ObservationContext} from \"../pages/Observation/Observations\";\n\nconst useObservations = () => {\n    const { observationImages } = useContext(ObservationContext);\n    // useDebugValue(observationSteps, observationSteps => observationSteps ? 'Steps set' : \"Steps not set\")\n    useDebugValue(observationImages, observationImages => observationImages?.data ? 'Images set' : \"Images not set\")\n    return useContext(ObservationContext);\n}\n\nexport default useObservations;","import {useContext, useDebugValue} from \"react\";\nimport {observationViewContext} from \"../layouts/PersistLogin\";\n\nconst useObservationsData = () => {\n    const { observationListData } = useContext(observationViewContext);\n    useDebugValue(observationListData, observationListData => observationListData ? 'List data set' : \"Listing data not set\")\n    return useContext(observationViewContext);\n}\n\nexport default useObservationsData;","import \"../../assets/scss/component/myObservation.scss\";\nimport {Col, Container, Row} from \"reactstrap\";\nimport {Link, useNavigate} from \"react-router-dom\";\nimport {Icon} from \"@iconify/react\";\nimport axios from \"../../api/axios\";\n\nimport {lazy, Suspense, useEffect, useState} from \"react\";\n\nimport useAuth from \"../../hooks/useAuth\";\nimport useObservationsData from \"../../hooks/useObservationsData\";\n//Todo should not be used two context for same thing\nimport useObservations from \"../../hooks/useObservations\";\n\nimport {LoadMore} from \"../../components/Shared/LoadMore\";\nimport {obvType} from \"../../helpers/observation\";\nimport {baseURL, routeUrls} from \"../../helpers/url\";\nimport Loader from \"../../components/Shared/Loader\";\nimport NotFound from \"../../components/Common/NotFound\";\n\nconst ObservationDetails = lazy(() => import(\"./ObservationDetails\"));\nconst ObservationDetailPage = lazy(() => import(\"./ObservationListPage\"));\nconst InitialUploadObservations = lazy(() =>\n    import(\"../InitialUploadObservations\")\n);\n\nconst MyObservations = () => {\n    const {auth} = useAuth();\n    const {setObservationData, setObservationSteps, setObservationImages} = useObservations();\n    const {observationListData, setObservationListData} = useObservationsData();\n    const [isObservationDetailModal, setObservationDetailModal] = useState(false);\n    const [isLoaded, setIsLoaded] = useState(true);\n    const [activeType, setActiveType] = useState(\"verified\");\n    const [selectedObservationId, setSelectedObservationId] = useState();\n    const navigate = useNavigate();\n    const [nextPageUrl, setNextPageUrl] = useState(\n        \"/observation/observation_collection/?type=\"\n    );\n    const [isActiveTypeChangeFinished, setActiveTypeChangeFinished] =\n        useState(false);\n\n    const handleObservationEdit = (data) => {\n        cleaningUpObservationDataForDraftSaving(data).then((r) => r);\n        setObservationDetailModal(false);\n        setTimeout(function () {\n            navigate(\"/observations/update\");\n        }, 100);\n    };\n\n    const cleaningUpObservationDataForDraftSaving = async (data) => {\n        setObservationImages([]);\n        setObservationData([]);\n        await updateStateForDraft(data);\n        return true;\n    };\n\n    const updateStateForDraft = (data) => {\n        setObservationSteps((prev) => {\n            return {\n                ...prev,\n                total: 3,\n                active: 1,\n                mode: {\n                    update: true,\n                    ...data,\n                },\n            };\n        });\n    };\n\n    const getObservationData = (reset = false, value = \"verified\") => {\n        setActiveType(value);\n        let url;\n        if (reset === true || !nextPageUrl) {\n            url = `${baseURL.api}/observation/observation_collection/?type=${value}&page=1`;\n        } else {\n            url = process.env.NODE_ENV === \"development\" ? nextPageUrl : nextPageUrl.replace('http', 'https');\n        }\n        axios\n            .get(`${url}`, {\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${auth?.token?.access}`,\n                },\n            })\n            .then((success) => {\n                let data = success?.data?.results;\n                if (success?.data?.next) {\n                    setNextPageUrl(success?.data?.next);\n                } else {\n                    setNextPageUrl(null);\n                }\n\n                let records = data?.data;\n                let prevData;\n\n                if (observationListData?.list && !reset) {\n                    prevData = [...observationListData.list];\n                    prevData = [...prevData, ...records];\n                } else {\n                    prevData = data?.data;\n                }\n\n                // Global State\n                setObservationListData((prev) => {\n                    return {\n                        ...prev,\n                        list: prevData,\n                        count: {\n                            verified: data?.verified_count,\n                            unverified: data?.unverified_count,\n                            denied: data?.denied_count,\n                            draft: data?.draft_count,\n                            total:\n                                data?.verified_count +\n                                data?.unverified_count +\n                                data?.denied_count +\n                                data?.draft_count,\n                        },\n                    };\n                });\n\n                setIsLoaded(false);\n            })\n            .catch((error) => {\n                console.log(error.response);\n            });\n    };\n\n    const handleObservationDetailModal = (id) => {\n        setObservationDetailModal(!isObservationDetailModal);\n        setSelectedObservationId(id);\n    };\n\n    const handleTypeOfObservation = (type) => {\n        setActiveTypeChangeFinished(true);\n        setActiveType(type);\n\n        setObservationListData((prev) => {\n            return {\n                ...prev,\n                list: [],\n            };\n        });\n\n        getObservationData(true, type);\n\n        setTimeout(function () {\n            setActiveTypeChangeFinished(false);\n        }, 300);\n    };\n\n    const handleLoadMore = () => {\n        getObservationData(false, activeType);\n    };\n\n    const listCount = observationListData?.count;\n\n    useEffect(() => {\n        setObservationListData((prev) => {\n            return {\n                ...prev,\n                active: observationListData?.list?.[selectedObservationId],\n                activeType: activeType\n            };\n        });\n    }, [isObservationDetailModal, activeType]);\n\n    useEffect(() => {\n        getObservationData(true, \"verified\");\n        setIsLoaded(false);\n    }, [isLoaded]);\n\n\n    return listCount?.total > 0 ? (\n        <section className=\"my-observation-data\">\n            <Container>\n                <div className=\"filtered-data_wrapper\">\n                    <Row>\n                        <Col sm={12} md={8} lg={6} className=\"order-2 order-md-1\">\n                            <div\n                                className=\"d-flex align-items-center justify-content-start h-100 text-truncate overflow-auto mb-3 mb-md-0\">\n                                <span\n                                    className={\n                                        activeType === obvType.verified\n                                            ? \"filter-link active\"\n                                            : \"filter-link \"\n                                    }\n                                    onClick={() => handleTypeOfObservation(obvType.verified)}\n                                >\n                                  Verified ({observationListData?.count?.verified})\n                                </span>\n                                <span\n                                    className={\n                                        activeType === obvType.unverified\n                                            ? \"filter-link active\"\n                                            : \"filter-link \"\n                                    }\n                                    onClick={() => handleTypeOfObservation(obvType.unverified)}\n                                >\n                                    Unverified ({observationListData?.count?.unverified})\n                                </span>\n                                <span\n                                    className={\n                                        activeType === obvType.denied\n                                            ? \"filter-link active\"\n                                            : \"filter-link \"\n                                    }\n                                    onClick={() => handleTypeOfObservation(obvType.denied)}\n                                >\n                                  Denied ({observationListData?.count?.denied})\n                                </span>\n                                <span\n                                    className={\n                                        activeType === obvType.draft\n                                            ? \"filter-link active\"\n                                            : \"filter-link \"\n                                    }\n                                    onClick={() => handleTypeOfObservation(obvType.draft)}\n                                >\n                                  Drafts ({observationListData?.count?.draft})\n                                </span>\n                            </div>\n                        </Col>\n                        <Col sm={12} md={4} lg={6} className=\"text-end order-1 order-md-2\">\n                            <div\n                                className=\"d-flex align-items-center justify-content-end h-100  flex-wrap flex-lg-nowrap mb-2 mb-md-0\">\n                                <Link\n                                    to={\"/\" + routeUrls.observationsAdd}\n                                    className=\"btn btn-secondary ms-2 ms-xl-4 shadow-none\"\n                                >\n                                    <Icon\n                                        icon=\"heroicons-outline:upload\"\n                                        width=\"16\"\n                                        height=\"20\"\n                                    />\n                                    Upload Observations\n                                </Link>\n                            </div>\n                        </Col>\n                    </Row>\n                </div>\n            </Container>\n\n            {/*Data block*/}\n\n            <Container>\n                {isActiveTypeChangeFinished ? (\n                    <Loader/>\n                ) : observationListData?.list?.length > 0 ? (\n                    <Suspense fallback={<div></div>}>\n                        <ObservationDetailPage\n                            activeType={activeType}\n                            observationList={observationListData?.list}\n                            isObservationDetailModal={isObservationDetailModal}\n                            setObservationDetailModal={setObservationDetailModal}\n                            setSelectedObservationId={setSelectedObservationId}\n                        />\n                        {nextPageUrl && <LoadMore handleLoadMore={handleLoadMore}/>}\n                    </Suspense>\n                ) : (\n                    <NotFound/>\n                )}\n            </Container>\n\n            <Suspense fallback={<div></div>}>\n                <ObservationDetails\n                    data={observationListData?.active}\n                    activeType={activeType}\n                    modalClass=\"observation-details_modal\"\n                    open={isObservationDetailModal}\n                    handleClose={handleObservationDetailModal}\n                    handleContinueEdit={handleObservationEdit}\n                    handleApproveRejectEvent={getObservationData}\n                    refreshData={getObservationData}\n                />\n            </Suspense>\n        </section>\n    ) : (\n        <Suspense fallback={<div></div>}>\n            <InitialUploadObservations count={listCount}/>\n        </Suspense>\n    );\n};\nexport default MyObservations;","import { Outlet } from \"react-router-dom\";\nimport {createContext, useEffect, useState} from \"react\";\nimport { cameraSettingFields } from \"../../helpers/url\";\n\nexport const ObservationContext = createContext({});\n\nconst Observations = () => {\n    const [observationType, setObservationType] = useState({\n        image_type: 1\n    });\n\n    const [observationSteps, setObservationSteps] = useState({\n        total: 3,\n        active: 1,\n        mode: {\n            update: false\n        }\n    });\n    const [observationImages, setObservationImages] = useState([]);\n    const [cameraDetails, setCameraDetails] = useState(cameraSettingFields);\n    const [observationCategory, setObservationCategory] = useState([]);\n    const [observationData, setObservationData] = useState({});\n\n    useEffect(()=> {\n        let data = (observationImages?.data) ? [...observationImages?.data] : []\n        setObservationData({\n            // is_draft: observationSteps?.is_draft ? 1 : 0,\n            image_type: observationType?.image_type,\n            map_data: data,\n            elevation_angle: null,\n            video_url : ''\n        })\n    }, [observationImages?.data, observationSteps?.is_draft, observationType?.image_type])\n\n    return(\n        <ObservationContext.Provider value={\n            {\n                observationType,\n                setObservationType,\n                observationSteps,\n                setObservationSteps,\n                observationImages,\n                setObservationImages,\n                observationCategory,\n                setObservationCategory,\n                observationData,\n                setObservationData,\n                cameraDetails, \n                setCameraDetails\n            }\n        }>\n            <Outlet />\n        </ObservationContext.Provider>\n    )\n}\n\nexport default Observations;"],"names":["className","src","Images","alt","LoadMore","props","handleLoadMore","onClick","Tabs","ObservationImages","DateTimeLocation","EquipmentDetails","MultiImageTabs","MultipleImages","ImageSequence","imageDetails","Details","Equipment","Comments","obvType","default","verified","unverified","denied","draft","uploadImageDefaultState","random","baseImage","item","userLocation","id","sameAsFirstMap","sameAsFirstDate","image","lastModified","name","latitude","longitude","location","country_code","obs_date","obs_time","timezone","azimuth","time_accuracy","is_precise_azimuth","category_map","category","is_other","other_value","directionValue","angle","getdirectionDegree","key","degree","getdirectionAngle","observationImages","useContext","ObservationContext","useDebugValue","data","observationListData","observationViewContext","ObservationDetails","lazy","ObservationDetailPage","InitialUploadObservations","auth","useAuth","useObservations","setObservationData","setObservationSteps","setObservationImages","useObservationsData","setObservationListData","useState","isObservationDetailModal","setObservationDetailModal","isLoaded","setIsLoaded","activeType","setActiveType","selectedObservationId","setSelectedObservationId","navigate","useNavigate","nextPageUrl","setNextPageUrl","isActiveTypeChangeFinished","setActiveTypeChangeFinished","cleaningUpObservationDataForDraftSaving","updateStateForDraft","prev","total","active","mode","update","getObservationData","url","reset","value","replace","baseURL","axios","headers","Authorization","token","access","then","success","results","next","prevData","records","list","count","verified_count","unverified_count","denied_count","draft_count","catch","error","console","log","response","handleTypeOfObservation","type","setTimeout","listCount","useEffect","sm","md","lg","to","routeUrls","icon","width","height","length","Suspense","fallback","observationList","modalClass","open","handleClose","handleContinueEdit","r","handleApproveRejectEvent","refreshData","createContext","image_type","observationType","setObservationType","observationSteps","cameraSettingFields","cameraDetails","setCameraDetails","observationCategory","setObservationCategory","observationData","map_data","elevation_angle","video_url","is_draft","Provider"],"sourceRoot":""}