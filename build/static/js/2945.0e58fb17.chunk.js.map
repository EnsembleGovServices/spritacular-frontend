{"version":3,"file":"static/js/2945.0e58fb17.chunk.js","mappings":"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","sources":["components/Shared/AdvancedFilter.jsx"],"sourcesContent":["import \"../../assets/scss/component/advancedFilter.scss\";\nimport {\n    Button,\n    Card,\n    CardBody,\n    Col,\n    Collapse,\n    FormGroup,\n    Label,\n    Row,\n    Dropdown,\n    DropdownItem,\n    DropdownMenu,\n    DropdownToggle\n} from \"reactstrap\";\nimport {useState} from 'react';\nimport {Icon} from '@iconify/react';\nimport Images from \"../../static/images\";\nimport moment from \"moment\";\nimport PropTypes from \"prop-types\";\n\nconst AdvancedFilter = (props) => {\n    const {\n        selectedFilterVertical,\n        handleFilterOpen,\n        isFilterOpen,\n        setIsFilterOpen,\n        handleFilterValue,\n        resetFilters,\n        handleFilterInput\n    } = props;\n    const [isDateTimeOpen, setIsDateTimeOpen] = useState(true);\n    const [isEquipmentDetailsOpen, setIsEquipmentDetailsOpen] = useState(true);\n    return (\n        <div className='advanced-filter d-flex flex-column'>\n            <Row className=\" overflow-auto\">\n                <Col xs={12} className='d-flex justify-content-end d-md-none'>\n                    <Button className=\"close-icon bg-transparent shadow-none border-0 rounded-0\"\n                            onClick={() => handleFilterOpen()}>\n                        <img src={Images.Modalcloseicon} alt=\"close-icon\"/>\n                    </Button>\n                </Col>\n                <div className=\"inner-wrapper\">\n                    <Col xs={12}>\n                        <FormGroup>\n                            <Button\n                                color=\"primary\"\n                                onClick={() => setIsDateTimeOpen(!isDateTimeOpen)}\n                                className={`collapse-btn fw-bold text-uppercase bg-transparent w-100 mb-0 rounded-0 border-0 shadow-none text-black p-0 d-flex justify-content-between align-items-center ${isDateTimeOpen ? 'open' : ''}`}\n                            >\n                                Observation Date/time\n                                <Icon icon=\"ci:chevron-down\" color=\"black\"/>\n                            </Button>\n                            <Collapse isOpen={isDateTimeOpen}>\n                                <Card className='border-0 rounded-0 pt-3'>\n                                    <CardBody className='p-0'>\n                                        <Row>\n                                            <Col xs={12}>\n                                                <FormGroup>\n                                                    <Label className='fw-normal text-black'>From</Label>\n                                                    <div className='d-flex justify-content-between date-time_row'>\n                                                        <div className=\"position-relative date-box\">\n                                                            <input className=\"form-control\"\n                                                                   type=\"date\"\n                                                                   name=\"obs_start_date\"\n                                                                   value={selectedFilterVertical?.obs_start_date === null ? \"\" : selectedFilterVertical?.obs_start_date}\n                                                                   max={moment(new Date()).format('Y-MM-DD')}\n                                                                   onChange={(e) => handleFilterInput(e)}/>\n                                                        </div>\n                                                        <div className=\"position-relative time-box\">\n                                                            <input className=\"form-control\"\n                                                                   type=\"time\"\n                                                                   name=\"obs_start_time\"\n                                                                   value={selectedFilterVertical?.obs_start_time === null ? \"\" : selectedFilterVertical?.obs_start_time}\n                                                                   onChange={(e) => handleFilterInput(e)}/>\n                                                        </div>\n                                                    </div>\n                                                </FormGroup>\n                                            </Col>\n                                            <Col xs={12}>\n                                                <FormGroup>\n                                                    <Label className='fw-normal text-black'>To</Label>\n                                                    <div className='d-flex justify-content-between date-time_row'>\n                                                        <div className=\"position-relative date-box\">\n                                                            <input className=\"form-control\"\n                                                                   type=\"date\"\n                                                                   name=\"obs_end_date\"\n                                                                   value={selectedFilterVertical?.obs_end_date === null ? \"\" : selectedFilterVertical?.obs_end_date}\n                                                                   max={moment(new Date()).format('Y-MM-DD')}\n                                                                   onChange={(e) => handleFilterInput(e)}/>\n                                                        </div>\n                                                        <div className=\"position-relative time-box\">\n                                                            <input className=\"form-control\"\n                                                                   type=\"time\"\n                                                                   name=\"obs_end_time\"\n                                                                   value={selectedFilterVertical?.obs_end_time === null ? \"\" : selectedFilterVertical?.obs_end_time}\n                                                                   onChange={(e) => handleFilterInput(e)}/>\n                                                        </div>\n                                                    </div>\n                                                </FormGroup>\n                                            </Col>\n                                        </Row>\n                                    </CardBody>\n                                </Card>\n                            </Collapse>\n                        </FormGroup>\n                    </Col>\n                    {/*<Col xs={12}>*/}\n                    {/*    <div>*/}\n                    {/*        <Button*/}\n                    {/*            color=\"primary\"*/}\n                    {/*            onClick={() => setIsEquipmentDetailsOpen(!isEquipmentDetailsOpen)}*/}\n                    {/*            className={`collapse-btn fw-bold text-uppercase bg-transparent w-100 mb-0 rounded-0 border-0 shadow-none text-black p-0 d-flex justify-content-between align-items-center ${isEquipmentDetailsOpen ? 'open' : ''}`}*/}\n                    {/*        >*/}\n                    {/*            Equipment Details*/}\n                    {/*            <Icon icon=\"ci:chevron-down\" color=\"black\"/>*/}\n                    {/*        </Button>*/}\n                    {/*        <Collapse isOpen={isEquipmentDetailsOpen}>*/}\n                    {/*            <Card className='border-0 rounded-0 pt-3'>*/}\n                    {/*                <CardBody className='p-0'>*/}\n                    {/*                    <Row>*/}\n                    {/*                        <Col xs={12}>*/}\n                    {/*                            <FormGroup className=\"m-0 d-inline-block form-group w-100\">*/}\n                    {/*                                <Label htmlFor=\"CameraType\">Camera Type</Label>*/}\n                    {/*                                <input className=\"form-control\"*/}\n                    {/*                                       type=\"text\"*/}\n                    {/*                                       name=\"camera_type\"*/}\n                    {/*                                       placeholder=\"Canon\"*/}\n                    {/*                                       value={selectedFilterVertical?.camera_type}*/}\n                    {/*                                       onChange={(e) => handleFilterInput(e)}/>*/}\n                    {/*                            </FormGroup>*/}\n                    {/*                        </Col>*/}\n                    {/*                        <Col xs={12}>*/}\n                    {/*                            <FormGroup className=\"m-0 d-inline-block form-group w-100\">*/}\n                    {/*                                <Label htmlFor=\"FrameRate\">Frame Rate</Label>*/}\n                    {/*                                <Dropdown className=\"dropdown-with-search\"*/}\n                    {/*                                          toggle={() => setIsFilterOpen({*/}\n                    {/*                                              ...isFilterOpen,*/}\n                    {/*                                              isRateOpen: !isFilterOpen.isRateOpen*/}\n                    {/*                                          })} isOpen={isFilterOpen.isRateOpen}>*/}\n                    {/*                                    <DropdownToggle*/}\n                    {/*                                        className=\"px-2 px-xl-3 shadow-none border-0 text-black fw-normal text-start d-flex justify-content-between align-items-center w-100\">*/}\n                    {/*                                    <span*/}\n                    {/*                                        className=\"text-truncate\">{(selectedFilterVertical.fps) ? selectedFilterVertical.fps : 'All'}</span>*/}\n                    {/*                                        <Icon icon=\"fe:arrow-down\" className=\"down-arrow ms-1\"/>*/}\n                    {/*                                    </DropdownToggle>*/}\n                    {/*                                    <DropdownMenu className=\"py-0 shadow\">*/}\n                    {/*                                        <DropdownItem value='24 FPS'*/}\n                    {/*                                                      onClick={(e) => handleFilterInput(e)}*/}\n                    {/*                                                      name=\"fps\"*/}\n                    {/*                                                      className=\"px-2 fw-normal\">24*/}\n                    {/*                                            FPS</DropdownItem>*/}\n                    {/*                                        <DropdownItem value='30 FPS'*/}\n                    {/*                                                      onClick={(e) => handleFilterInput(e)}*/}\n                    {/*                                                      name=\"fps\"*/}\n                    {/*                                                      className=\"px-2 fw-normal\">30*/}\n                    {/*                                            FPS</DropdownItem>*/}\n                    {/*                                        <DropdownItem value='50 FPS'*/}\n                    {/*                                                      onClick={(e) => handleFilterInput(e)}*/}\n                    {/*                                                      name=\"fps\"*/}\n                    {/*                                                      className=\"px-2 fw-normal\">50*/}\n                    {/*                                            FPS</DropdownItem>*/}\n                    {/*                                        <DropdownItem value='60 FPS'*/}\n                    {/*                                                      onClick={(e) => handleFilterInput(e)}*/}\n                    {/*                                                      name=\"fps\"*/}\n                    {/*                                                      className=\"px-2 fw-normal\">60*/}\n                    {/*                                            FPS</DropdownItem>*/}\n                    {/*                                    </DropdownMenu>*/}\n                    {/*                                </Dropdown>*/}\n                    {/*                            </FormGroup>*/}\n                    {/*                        </Col>*/}\n                    {/*                        <Col xs={12}>*/}\n                    {/*                            <FormGroup>*/}\n                    {/*                                <Label className='fw-normal text-black'>ISO</Label>*/}\n                    {/*                                <input className=\"form-control\"*/}\n                    {/*                                       type=\"number\"*/}\n                    {/*                                       name=\"iso\"*/}\n                    {/*                                       value={selectedFilterVertical.iso}*/}\n                    {/*                                       onChange={(e) => handleFilterInput(e)}/>*/}\n                    {/*                            </FormGroup>*/}\n                    {/*                        </Col>*/}\n                    {/*                        <Col xs={12}>*/}\n                    {/*                            <FormGroup className=\"m-0 d-inline-block form-group w-100\">*/}\n                    {/*                                <Label htmlFor=\"FOV\">FOV (Field of View)</Label>*/}\n                    {/*                                <Dropdown className=\"dropdown-with-search\"*/}\n                    {/*                                          toggle={() => setIsFilterOpen({*/}\n                    {/*                                              ...isFilterOpen,*/}\n                    {/*                                              isFOVOpen: !isFilterOpen.isFOVOpen*/}\n                    {/*                                          })} isOpen={isFilterOpen.isFOVOpen}>*/}\n                    {/*                                    <DropdownToggle*/}\n                    {/*                                        className=\"px-2 px-xl-3 shadow-none border-0 text-black fw-normal text-start d-flex justify-content-between align-items-center w-100\">*/}\n                    {/*                                    <span*/}\n                    {/*                                        className=\"text-truncate\">{(selectedFilterVertical.fov) ? selectedFilterVertical.fov : 'All'}</span>*/}\n                    {/*                                        <Icon icon=\"fe:arrow-down\" className=\"down-arrow ms-1\"/>*/}\n                    {/*                                    </DropdownToggle>*/}\n                    {/*                                    <DropdownMenu className=\"py-0 shadow\">*/}\n                    {/*                                        <DropdownItem value='10 mm'*/}\n                    {/*                                                      onClick={(e) => handleFilterInput(e)}*/}\n                    {/*                                                      name=\"fov\"*/}\n                    {/*                                                      className=\"px-2 fw-normal\">10*/}\n                    {/*                                            mm</DropdownItem>*/}\n                    {/*                                        <DropdownItem value='11 mm'*/}\n                    {/*                                                      onClick={(e) => handleFilterInput(e)}*/}\n                    {/*                                                      name=\"fov\"*/}\n                    {/*                                                      className=\"px-2 fw-normal\">11*/}\n                    {/*                                            mm</DropdownItem>*/}\n                    {/*                                        <DropdownItem value='12 mm'*/}\n                    {/*                                                      onClick={(e) => handleFilterInput(e)}*/}\n                    {/*                                                      name=\"fov\"*/}\n                    {/*                                                      className=\"px-2 fw-normal\">12*/}\n                    {/*                                            mm</DropdownItem>*/}\n                    {/*                                    </DropdownMenu>*/}\n                    {/*                                </Dropdown>*/}\n                    {/*                            </FormGroup>*/}\n                    {/*                        </Col>*/}\n                    {/*                        <Col xs={12}>*/}\n                    {/*                            <FormGroup>*/}\n                    {/*                                <Label className='fw-normal text-black'>Shutter Speed</Label>*/}\n                    {/*                                <input className=\"form-control\"*/}\n                    {/*                                       type=\"text\"*/}\n                    {/*                                       name=\"shutter_speed\"*/}\n                    {/*                                       value={selectedFilterVertical.shutter_speed}*/}\n                    {/*                                       onChange={(e) => handleFilterInput(e)}/>*/}\n                    {/*                            </FormGroup>*/}\n                    {/*                        </Col>*/}\n                    {/*                        <Col xs={12}>*/}\n                    {/*                            <FormGroup className=\"m-0 d-inline-block form-group w-100\">*/}\n                    {/*                                <Label htmlFor=\"LensType\">Lens Type</Label>*/}\n                    {/*                                <Dropdown className=\"dropdown-with-search\"*/}\n                    {/*                                          toggle={() => setIsFilterOpen({*/}\n                    {/*                                              ...isFilterOpen,*/}\n                    {/*                                              isLensTypeOpen: !isFilterOpen.isLensTypeOpen*/}\n                    {/*                                          })} isOpen={isFilterOpen.isLensTypeOpen}>*/}\n                    {/*                                    <DropdownToggle*/}\n                    {/*                                        className=\"px-2 px-xl-3 shadow-none border-0 text-black fw-normal text-start d-flex justify-content-between align-items-center w-100\">*/}\n                    {/*                                    <span*/}\n                    {/*                                        className=\"text-truncate\">{(selectedFilterVertical.lens_type) ? selectedFilterVertical.lens_type : 'All'}</span>*/}\n                    {/*                                        <Icon icon=\"fe:arrow-down\" className=\"down-arrow ms-1\"/>*/}\n                    {/*                                    </DropdownToggle>*/}\n                    {/*                                    <DropdownMenu className=\"py-0 shadow\">*/}\n                    {/*                                        <DropdownItem value='Wide angle'*/}\n                    {/*                                                      onClick={(e) => handleFilterInput(e)}*/}\n                    {/*                                                      name=\"lens_type\" className=\"px-2 fw-normal\">Wide*/}\n                    {/*                                            angle</DropdownItem>*/}\n                    {/*                                        <DropdownItem value='Standard'*/}\n                    {/*                                                      onClick={(e) => handleFilterInput(e)}*/}\n                    {/*                                                      name=\"lens_type\"*/}\n                    {/*                                                      className=\"px-2 fw-normal\">Standard</DropdownItem>*/}\n                    {/*                                        <DropdownItem value='Short telephoto'*/}\n                    {/*                                                      onClick={(e) => handleFilterInput(e)}*/}\n                    {/*                                                      name=\"lens_type\" className=\"px-2 fw-normal\">Short*/}\n                    {/*                                            telephoto</DropdownItem>*/}\n                    {/*                                    </DropdownMenu>*/}\n                    {/*                                </Dropdown>*/}\n                    {/*                            </FormGroup>*/}\n                    {/*                        </Col>*/}\n                    {/*                    </Row>*/}\n                    {/*                </CardBody>*/}\n                    {/*            </Card>*/}\n                    {/*        </Collapse>*/}\n                    {/*    </div>*/}\n                    {/*</Col>*/}\n                </div>\n            </Row>\n            <Row className=\"\">\n                <Col className=\"pt-3\">\n                    <div className=\"d-flex align-items-center justify-content-between\">\n                        <button onClick={() => handleFilterValue('filter', 'filter')}\n                                className=\"btn btn-primary w-100 me-1\">Filter\n                        </button>\n                        <button onClick={() => resetFilters()} className=\"btn btn-dark w-100\">Reset</button>\n                    </div>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nAdvancedFilter.propTypes = {\n    handleFilterValue: PropTypes.func,\n    resetFilters: PropTypes.func,\n    handleFilterInput: PropTypes.func,\n};\n\nexport default AdvancedFilter;"],"names":["props","selectedFilterVertical","handleFilterOpen","handleFilterValue","isFilterOpen","setIsFilterOpen","resetFilters","handleFilterInput","useState","isDateTimeOpen","setIsDateTimeOpen","className","xs","onClick","src","Images","alt","color","icon","isOpen","type","name","value","obs_start_date","max","moment","Date","format","onChange","e","obs_start_time","obs_end_date","obs_end_time"],"sourceRoot":""}