{"version":3,"file":"static/js/7925.0051ead3.chunk.js","mappings":"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","sources":["components/Account/UpdateProfile.jsx","helpers.jsx","components/LocationSearchInput.jsx"],"sourcesContent":["import {Button, Form, FormFeedback, FormGroup, Input, Label, UncontrolledAlert} from \"reactstrap\";\r\nimport axios from \"../../api/axios\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {baseURL} from \"../../helpers/url\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport PlacesAutocomplete from \"../LocationSearchInput\";\r\nimport {addScriptTagToHead} from \"../../helpers/addScriptTagToHead\";\r\n\r\n\r\nconst UpdateProfile = (props) => {\r\n    const {user} = props;\r\n    const {setAuth} = useAuth();\r\n    const [updateUser, setUpdatedUser] = useState()\r\n    const [success, setSuccess] = useState();\r\n    const [error, setError] = useState();\r\n\r\n    const handleInput = (e) => {\r\n        e.preventDefault();\r\n        let name = e.target.name,\r\n            value = e.target.value;\r\n        setUpdatedUser({\r\n            ...updateUser,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleLocations = (location) => {\r\n        setUpdatedUser({\r\n            ...updateUser,\r\n            location: location['address'],\r\n            place_uid: location['placeId'],\r\n            country_code: location['countryCode'],\r\n            location_metadata: {\r\n                lat: location['lat'],\r\n                lng: location['lng'],\r\n            }\r\n        });\r\n    }\r\n\r\n    const handleProfileUpdate = async (e) => {\r\n        e.preventDefault();\r\n        setSuccess('');\r\n        setError('');\r\n        await axios.patch(baseURL.api + '/users/user_profile/' + user?.user?.id + '/', {\r\n            first_name: updateUser?.first_name,\r\n            last_name: updateUser?.last_name,\r\n            email: updateUser?.email,\r\n            location: updateUser?.location,\r\n            place_uid: updateUser?.place_uid,\r\n            country_code: updateUser?.country_code,\r\n            location_metadata: {\r\n                lat: updateUser?.location_metadata?.lat,\r\n                lng: updateUser?.location_metadata?.lng,\r\n\r\n            }\r\n        }, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${user?.token?.access}`\r\n            },\r\n            withCredentials: true,\r\n        }).then((success) => {\r\n            setSuccess(success)\r\n            setAuth(prev => {\r\n                return {\r\n                    ...prev,\r\n                    user: updateUser\r\n                }\r\n            });\r\n        }).catch((error) => {\r\n            console.log(error.response);\r\n            setError(error.response)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setUpdatedUser(user?.user)\r\n    }, [user?.user]);\r\n\r\n\r\n    // useEffect(() => {\r\n    //     addScriptTagToHead(true, 'https://maps.googleapis.com/maps/api/js?', 'key', `${baseURL.mapApiKey}&libraries=places`);\r\n    // }, [])\r\n\r\n    return (\r\n        <>\r\n            {success && success?.status === 200 &&\r\n                <UncontrolledAlert variant=\"success\" data-dismiss=\"alert\" dismissible=\"true\">\r\n                    Profile updated successfully\r\n                </UncontrolledAlert>\r\n            }\r\n            <Form onSubmit={handleProfileUpdate}>\r\n                <FormGroup>\r\n                    <Label htmlFor=\"first_name\">First Name</Label>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"first_name\"\r\n                        value={updateUser?.first_name ?? \"\"}\r\n                        onChange={(e) => handleInput(e)}\r\n                        invalid={!!error?.data?.first_name}\r\n                        placeholder=\"First Name\"\r\n                    />\r\n                    <FormFeedback>{error?.data?.first_name}</FormFeedback>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label htmlFor=\"last_name\">Last Name</Label>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"last_name\"\r\n                        placeholder=\"Last Name\"\r\n                        value={updateUser?.last_name ?? \"\"}\r\n                        invalid={!!error?.data?.last_name}\r\n                        onChange={(e) => handleInput(e)}\r\n                    />\r\n                    <FormFeedback>{error?.data?.last_name}</FormFeedback>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label htmlFor=\"email\">Email</Label>\r\n                    <Input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Enter Your Email\"\r\n                        value={updateUser?.email ?? \"\"}\r\n                        invalid={!!error?.data?.email}\r\n                        onChange={(e) => handleInput(e)}\r\n                    />\r\n                    <FormFeedback>{error?.data?.email}</FormFeedback>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"location\">Location</Label>\r\n                    <PlacesAutocomplete handleLocations={handleLocations} address={user?.user?.location}/>\r\n                    <FormFeedback>{error?.data?.location}</FormFeedback>\r\n                </FormGroup>\r\n                <FormGroup className=\"profile-bottom-btn \">\r\n                    <Button type=\"submit\" className=\"save-btn\">Save Changes</Button>\r\n                </FormGroup>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\nexport default UpdateProfile;","const getCity = ( addressArray ) => {\r\n    let city = '';\r\n    for( let i = 0; i < addressArray.length; i++ ) {\r\n        if ( addressArray[ i ].types[0] && 'administrative_area_level_2' === addressArray[ i ].types[0] ) {\r\n            city = addressArray[ i ].long_name;\r\n            return city;\r\n        }\r\n    }\r\n};\r\n\r\nexport default getCity;\r\n\r\nexport const getState = ( addressArray ) => {\r\n    let state = '';\r\n    for( let i = 0; i < addressArray.length; i++ ) {\r\n        for( let i = 0; i < addressArray.length; i++ ) {\r\n            if ( addressArray[ i ].types[0] && 'administrative_area_level_1' === addressArray[ i ].types[0] ) {\r\n                state = addressArray[ i ].long_name;\r\n                return state;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport const getArea = ( addressArray ) => {\r\n    let area = '';\r\n    for( let i = 0; i < addressArray.length; i++ ) {\r\n        if ( addressArray[ i ].types[0]  ) {\r\n            for ( let j = 0; j < addressArray[ i ].types.length; j++ ) {\r\n                if ( 'sublocality_level_1' === addressArray[ i ].types[j] || 'locality' === addressArray[ i ].types[j] || 'colloquial_area' === addressArray[ i ].types[j] ) {\r\n                    area = addressArray[ i ].long_name;\r\n                    return area;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport const getPostalCode = ( addressArray ) => {\r\n    let postalCode = '';\r\n    for( let i = 0; i < addressArray.length; i++ ) {\r\n        for( let i = 0; i < addressArray.length; i++ ) {\r\n            if ( addressArray[ i ].types[0] && '\"postal_code\"' === addressArray[ i ].types[0] ) {\r\n                postalCode['long_name'] = addressArray[ i ].long_name;\r\n                \r\n                return postalCode;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport const getCountry = ( addressArray ) => {\r\n    let country = [];\r\n    for( let i = 0; i < addressArray.length; i++ ) {\r\n        for( let i = 0; i < addressArray.length; i++ ) {\r\n            if ( addressArray[ i ].types[0] && 'country' === addressArray[ i ].types[0] ) {\r\n                country['long_name'] = addressArray[ i ].long_name;\r\n                country['short_name'] = addressArray[ i ].short_name;\r\n                return country;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport const getCategoryImage = (key) => {\r\n    return `/assets/images/category/${key.toLowerCase().replaceAll(\" \", \"\")}.png`;\r\n}","/* eslint-disable no-undef */\r\nimport React from \"react\";\r\nimport PlacesAutocomplete from \"react-places-autocomplete\";\r\nimport { Input,FormFeedback } from \"reactstrap\";\r\nimport Loader from \"../components/Shared/Loader\";\r\n\r\nimport getCity, { getState , getCountry} from '../helpers';\r\n\r\n\r\nclass LocationSearchInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { address: this.props.address};\r\n  }\r\n  \r\n  handleChange = address => {\r\n    this.setState({ address });\r\n  };\r\n\r\n  handleSelect = (address,placeId,suggestion) => {\r\n    const placesService = new google.maps.places.PlacesService(\r\n      document.createElement(\"div\")\r\n    );\r\n    let place;\r\n    this.address = \"\";\r\n    placesService.getDetails({ placeId: placeId }, results => {\r\n      place = results;\r\n      if (!place.geometry) {\r\n        return;\r\n      }\r\n      let city = getCity(place.address_components);\r\n      let state = getState(place.address_components);\r\n      let country = getCountry(place.address_components);\r\n\r\n       let Addresses = [city,state,country['long_name']].filter(x => x !== undefined && x !== null );\r\n       let addressArray = [];\r\n       addressArray['address'] = Addresses.join(', ');//place.formatted_address;\r\n       addressArray['lat'] = place.geometry.location.lat();\r\n       addressArray['lng'] = place.geometry.location.lng();\r\n       addressArray['placeId'] = placeId;\r\n       addressArray['countryCode'] = country['short_name'];\r\n       this.props.handleLocations(addressArray);\r\n       this.setState({ addressArray });\r\n    });\r\n  };\r\n\r\n  render() {    \r\n    return (\r\n      <PlacesAutocomplete\r\n        value={this.state.address ?? ''}\r\n        onChange={this.handleChange}\r\n        onSelect={this.handleSelect}\r\n      >\r\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n          <div className=\"position-relative setplaceholdersize\">\r\n            <Input\r\n              {...getInputProps({\r\n                placeholder: \"Enter name of your city or country of residence\",\r\n                className: \"location-search-input form-control\",\r\n              })}\r\n              value={this.state.address ?? ''}\r\n              invalid ={this.props.error?.data?.location}\r\n            />\r\n            <FormFeedback>{this.props.error?.data?.location}</FormFeedback>\r\n            <div className=\"autocomplete-dropdown-container\">\r\n              {loading && <Loader fixContent={false} />}\r\n              {suggestions.map((suggestion, index) => {\r\n                const className = suggestion.active\r\n                  ? \"suggestion-item suggestion-item--active\"\r\n                  : \"suggestion-item\";\r\n                const style = suggestion.active\r\n                  ? { backgroundColor: \"#ffebeb\",color: \"#990000\", cursor: \"pointer\" }\r\n                  : { backgroundColor: \"transparent\",color: \"#000\", cursor: \"pointer\" };\r\n                  const suggesionClick = () => {\r\n                    this.setState({address: suggestion.description });\r\n                  \r\n                  }\r\n                return (\r\n                  <div key={index}\r\n                    {...getSuggestionItemProps(suggestion, {\r\n                      className,\r\n                      style,\r\n                    })}\r\n                  >\r\n                    <span onClick={suggesionClick}>{suggestion.description}</span>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </PlacesAutocomplete>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LocationSearchInput;\r\n"],"names":["props","user","setAuth","useAuth","useState","updateUser","setUpdatedUser","success","setSuccess","error","setError","handleInput","e","preventDefault","name","target","value","handleProfileUpdate","axios","baseURL","id","first_name","last_name","email","location","place_uid","country_code","location_metadata","lat","lng","headers","token","access","withCredentials","then","prev","catch","console","log","response","useEffect","status","variant","dismissible","onSubmit","htmlFor","type","onChange","invalid","data","placeholder","handleLocations","address","className","addressArray","i","length","types","long_name","LocationSearchInput","handleChange","setState","handleSelect","placeId","suggestion","place","placesService","google","maps","places","PlacesService","document","createElement","getDetails","results","geometry","city","getCity","address_components","state","getState","country","short_name","getCountry","Addresses","filter","x","undefined","join","this","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","Loader","fixContent","map","index","active","style","backgroundColor","color","cursor","onClick","description","React"],"sourceRoot":""}