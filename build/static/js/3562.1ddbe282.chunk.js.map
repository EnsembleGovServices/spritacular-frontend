{"version":3,"file":"static/js/3562.1ddbe282.chunk.js","mappings":"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","sources":["components/Shared/LoadMore.jsx","hooks/useObservations.js","helpers/dashboard.js","pages/Dashboard/Dashboard.jsx","pages/Observation/Observations.jsx"],"sourcesContent":["import { Button} from 'reactstrap';\r\n\r\nexport const LoadMore = (props) => {\r\n    const {handleLoadMore} = props;\r\n    return (\r\n        <Button className='gray-outline-btn d-block mx-auto px-4 fw-normal' onClick={()=> handleLoadMore()}>Load more</Button>\r\n    )\r\n};","import {useContext, useDebugValue} from \"react\";\r\nimport {ObservationContext} from \"../pages/Observation/Observations\";\r\n\r\nconst useObservations = () => {\r\n    const { observationImages } = useContext(ObservationContext);\r\n    // useDebugValue(observationSteps, observationSteps => observationSteps ? 'Steps set' : \"Steps not set\")\r\n    useDebugValue(observationImages, observationImages => observationImages?.data ? 'Images set' : \"Images not set\")\r\n    return useContext(ObservationContext);\r\n}\r\n\r\nexport default useObservations;","export const dashboardHelper = {\r\n    filterState: {\r\n        isCountryOpen:false,\r\n        isTypeOpen:false,\r\n        isStatusOpen:false,\r\n        isRateOpen:false,\r\n        isFOVOpen:false,\r\n        isLensTypeOpen:false,\r\n    },\r\n    horizontal: {\r\n        country: {\r\n            name:'',\r\n            code:''\r\n        },\r\n        type:'',\r\n        status:'',\r\n    },\r\n    vertical: {\r\n        from_obs_data: null,\r\n        to_obs_data: null,\r\n        obs_start_date: null,\r\n        obs_end_date: null,\r\n        obs_start_time: null,\r\n        obs_end_time: null,\r\n        camera_type: \"\",\r\n        fps: \"\",\r\n        iso: \"\",\r\n        fov: \"\",\r\n        shutter_speed: \"\",\r\n        lens_type: \"\",\r\n    },\r\n    nextPageUrl: '/observation/dashboard/?country=&category=&status='\r\n}","import \"../../assets/scss/component/dashboard.scss\";\r\nimport {lazy, Suspense, useEffect, useState} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport useObservationsData from \"../../hooks/useObservationsData\";\r\n\r\nimport useObservations from \"../../hooks/useObservations\";\r\nimport {LoadMore} from \"../../components/Shared/LoadMore\";\r\n\r\nimport axios from \"../../api/axios\";\r\nimport moment from \"moment\";\r\nimport Images from \"../../static/images\";\r\nimport {dashboardHelper} from \"../../helpers/dashboard\";\r\nimport {baseURL} from \"../../helpers/url\";\r\n\r\nconst FilterSelectMenu = lazy(() =>\r\n    import(\"../../components/Shared/FilterSelectMenu\")\r\n);\r\nconst AdvancedFilter = lazy(() =>\r\n    import(\"../../components/Shared/AdvancedFilter\")\r\n);\r\nconst ObservationDetailPage = lazy(() =>\r\n    import(\"../Observation/ObservationDetailPage\")\r\n);\r\nconst ObservationListView = lazy(() =>\r\n    import(\"../Observation/ObservationListView\")\r\n);\r\nconst ObservationDetails = lazy(() =>\r\n    import(\"../Observation/ObservationDetails\")\r\n);\r\n\r\nconst Dashboard = () => {\r\n    const navigate = useNavigate();\r\n    const {auth} = useAuth();\r\n    const [isObservationDetailModal, setObservationDetailModal] = useState(false);\r\n    const [selectedObservationId, setSelectedObservationId] = useState();\r\n    const {setObservationData, setObservationSteps, setObservationImages} = useObservations();\r\n    const [filterShow, setFilterShow] = useState(true);\r\n    const [listView, setListView] = useState(false);\r\n    const [gridView, setGridView] = useState(true);\r\n\r\n    const [searchCountry, setSearchCountry] = useState(\"\");\r\n    const [isFilterOpen, setIsFilterOpen] = useState(dashboardHelper.filterState);\r\n    const [selectedFilterHorizontal, setSelectedFilterHorizontal] = useState(\r\n        dashboardHelper.horizontal\r\n    );\r\n    const [selectedFilterVertical, setSelectedFilterVertical] = useState(\r\n        dashboardHelper.vertical\r\n    );\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const {observationListData, setObservationListData} = useObservationsData();\r\n    const [nextPageUrl, setNextPageUrl] = useState(dashboardHelper.nextPageUrl);\r\n    const [filterReset, setFilterReset] = useState(false);\r\n\r\n    const getObservationData = (\r\n        reset = false,\r\n        country = `${selectedFilterHorizontal?.country?.code}`,\r\n        category = `${selectedFilterHorizontal?.type}`,\r\n        status = `${selectedFilterHorizontal?.status}`\r\n    ) => {\r\n        if (auth?.user?.is_superuser) {\r\n            let url;\r\n            if (reset === true || !nextPageUrl) {\r\n                url = `${baseURL.api}/observation/dashboard/?country=${country}&category=${category}&status=${status}&page=1`;\r\n            } else {\r\n                url = nextPageUrl;\r\n            }\r\n\r\n            if (selectedFilterVertical.obs_start_date !== null) {\r\n                if (selectedFilterVertical.obs_start_time !== null) {\r\n                    selectedFilterVertical.from_obs_data = moment(\r\n                        selectedFilterVertical.obs_start_date +\r\n                        \" \" +\r\n                        selectedFilterVertical.obs_start_time\r\n                    ).format(\"DD/MM/Y H:mm\");\r\n                } else {\r\n                    selectedFilterVertical.from_obs_data = moment(\r\n                        selectedFilterVertical.obs_start_date + \" 00:00\"\r\n                    ).format(\"DD/MM/Y HH:mm\");\r\n                }\r\n            }\r\n            if (selectedFilterVertical.obs_end_date !== null) {\r\n                if (selectedFilterVertical.obs_end_time !== null) {\r\n                    selectedFilterVertical.to_obs_data = moment(\r\n                        selectedFilterVertical.obs_end_date +\r\n                        \" \" +\r\n                        selectedFilterVertical.obs_end_time\r\n                    ).format(\"DD/MM/Y HH:mm\");\r\n                } else {\r\n                    selectedFilterVertical.to_obs_data = moment(\r\n                        selectedFilterVertical.obs_end_date + \" 23:59\"\r\n                    ).format(\"DD/MM/Y HH:mm\");\r\n                }\r\n            }\r\n\r\n            axios\r\n                .post(url, selectedFilterVertical, {\r\n                    headers: {\r\n                        \"Content-type\": \"application/json\",\r\n                        Authorization: `Bearer ${auth?.token?.access}`,\r\n                    },\r\n                })\r\n                .then((success) => {\r\n                    setFilterReset(false);\r\n                    if (success?.data?.results?.data !== undefined) {\r\n                        if (success?.data?.next) {\r\n                            setNextPageUrl(success?.data?.next);\r\n                        } else {\r\n                            setNextPageUrl(null);\r\n                        }\r\n                        let records = success?.data?.results?.data;\r\n                        let prevData;\r\n\r\n                        if (observationListData?.list?.length > 0 && reset === false) {\r\n                            prevData = [...observationListData?.list];\r\n                            prevData = [...prevData, ...records];\r\n                        } else {\r\n                            prevData = success?.data?.results?.data;\r\n                        }\r\n                        setObservationListData((prev) => {\r\n                            return {\r\n                                ...prev,\r\n                                list: prevData,\r\n                            };\r\n                        });\r\n                        setIsLoaded(true);\r\n                    } else {\r\n                        setNextPageUrl(null);\r\n                        setObservationListData({list: [], active: {}});\r\n                    }\r\n                    // setObservationList(success?.data?.results?.data)\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error.response);\r\n                });\r\n        }\r\n    };\r\n\r\n    const handleLoadMoreData = () => {\r\n        getObservationData(false);\r\n    };\r\n\r\n    const handleObservationDetailModal = (id) => {\r\n        setObservationDetailModal(!isObservationDetailModal);\r\n        setSelectedObservationId(id);\r\n    };\r\n    const cleaningUpObservationDataForDraftSaving = async (data) => {\r\n        setObservationImages([]);\r\n        setObservationData([]);\r\n        await updateStateForDraft(data);\r\n        return true;\r\n    };\r\n    const updateStateForDraft = (data) => {\r\n        setObservationSteps((prev) => {\r\n            return {\r\n                ...prev,\r\n                total: 3,\r\n                active: 1,\r\n                mode: {\r\n                    update: true,\r\n                    ...data,\r\n                },\r\n            };\r\n        });\r\n    };\r\n\r\n    const handleObservationEdit = (data) => {\r\n        cleaningUpObservationDataForDraftSaving(data).then((r) => r);\r\n        setObservationDetailModal(false);\r\n        setTimeout(function () {\r\n            navigate(\"/observations/update\");\r\n        }, 100);\r\n    };\r\n    const handleFilterOpen = () => {\r\n        setFilterShow(!filterShow);\r\n    };\r\n    const handleListView = () => {\r\n        setListView(true);\r\n        setGridView(false);\r\n    };\r\n    const handleGridView = () => {\r\n        setGridView(true);\r\n        setListView(false);\r\n    };\r\n    const findCountry = (e) => {\r\n        let value = e.target.value.toLowerCase();\r\n        setSearchCountry(value);\r\n    };\r\n\r\n    const handleFilterValue = (value, type) => {\r\n        if (type === \"status\") {\r\n            value = value.toLowerCase();\r\n            getObservationData(\r\n                true,\r\n                selectedFilterHorizontal.country?.code,\r\n                selectedFilterHorizontal.type,\r\n                value\r\n            );\r\n        }\r\n\r\n        if (type === \"category\") {\r\n            getObservationData(\r\n                true,\r\n                selectedFilterHorizontal.country?.code,\r\n                value,\r\n                selectedFilterHorizontal.status\r\n            );\r\n        }\r\n\r\n        if (type === \"country\") {\r\n            getObservationData(\r\n                true,\r\n                value.code,\r\n                selectedFilterHorizontal.type,\r\n                selectedFilterHorizontal.status\r\n            );\r\n        }\r\n        if (type === \"filter\") {\r\n            getObservationData(\r\n                true,\r\n                selectedFilterHorizontal.country.code,\r\n                selectedFilterHorizontal.type,\r\n                selectedFilterHorizontal.status\r\n            );\r\n        }\r\n    };\r\n\r\n    //  Handle Filtered Input\r\n    const handleFilterInput = (e) => {\r\n        let name = e.target.name,\r\n            value = e.target.value;\r\n\r\n        console.log(name, value);\r\n        setSelectedFilterVertical({\r\n            ...selectedFilterVertical,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    //  Reset Filters\r\n    const resetFilters = () => {\r\n        setFilterReset(true);\r\n        setSelectedFilterHorizontal(dashboardHelper.horizontal);\r\n        setSelectedFilterVertical(dashboardHelper.vertical);\r\n        getObservationData(true, \"\", \"\", \"\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        getObservationData(true);\r\n    }, [filterReset]);\r\n\r\n    useEffect(() => {\r\n        setObservationListData((prev) => {\r\n            return {\r\n                ...prev,\r\n                activeType: \"\",\r\n                list: []\r\n            }\r\n        })\r\n        getObservationData(true, \"\", \"\", \"\");\r\n\r\n        if (window.innerWidth < 768) {\r\n            setFilterShow(false);\r\n        }\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setObservationListData((prev) => {\r\n            return {\r\n                ...prev,\r\n                active: observationListData?.list?.[selectedObservationId],\r\n            };\r\n        });\r\n    }, [isObservationDetailModal]);\r\n\r\n    return (\r\n        <>\r\n            <Suspense fallback={<div>please wait...</div>}>\r\n                <FilterSelectMenu\r\n                    dashboardFilter={true}\r\n                    galleryFilter={true}\r\n                    filterShow={filterShow}\r\n                    handleFilterOpen={handleFilterOpen}\r\n                    handleListView={handleListView}\r\n                    handleGridView={handleGridView}\r\n                    listView={listView}\r\n                    gridView={gridView}\r\n                    isFilterOpen={isFilterOpen}\r\n                    setIsFilterOpen={setIsFilterOpen}\r\n                    selectedFilterHorizontal={selectedFilterHorizontal}\r\n                    setSelectedFilterHorizontal={setSelectedFilterHorizontal}\r\n                    searchCountry={searchCountry}\r\n                    findCountry={findCountry}\r\n                    handleFilterValue={handleFilterValue}\r\n                />\r\n            </Suspense>\r\n\r\n            <div className=\"observation-dashboard_content\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"set-dash-content\">\r\n                                {filterShow && (\r\n                                    <Suspense fallback={<div>please wait...</div>}>\r\n                                        <AdvancedFilter\r\n                                            selectedFilterVertical={selectedFilterVertical}\r\n                                            setSelectedFilterVertical={setSelectedFilterVertical}\r\n                                            handleFilterValue={handleFilterValue}\r\n                                            handleFilterOpen={handleFilterOpen}\r\n                                            isFilterOpen={isFilterOpen}\r\n                                            setIsFilterOpen={setIsFilterOpen}\r\n                                            resetFilters={resetFilters}\r\n                                            handleFilterInput={handleFilterInput}\r\n                                        />\r\n                                    </Suspense>\r\n                                )}\r\n\r\n                                <div\r\n                                    className={`dashboard-card overflow-hidden ${\r\n                                        filterShow ? \"sm-card\" : \"maximize-dash-content\"\r\n                                    }`}\r\n                                >\r\n                                    {observationListData?.list?.length > 0 ? (\r\n                                        listView ? (\r\n                                            <Suspense fallback={<div>please wait...</div>}>\r\n                                                <ObservationListView\r\n                                                    observationList={observationListData?.list}\r\n                                                    isObservationDetailModal={isObservationDetailModal}\r\n                                                    setObservationDetailModal={setObservationDetailModal}\r\n                                                    setSelectedObservationId={setSelectedObservationId}\r\n                                                />\r\n                                            </Suspense>\r\n                                        ) : (\r\n                                            <Suspense fallback={<div>please wait...</div>}>\r\n                                                <ObservationDetailPage\r\n                                                    observationList={observationListData?.list}\r\n                                                    isObservationDetailModal={isObservationDetailModal}\r\n                                                    setObservationDetailModal={setObservationDetailModal}\r\n                                                    setSelectedObservationId={setSelectedObservationId}\r\n                                                />\r\n                                            </Suspense>\r\n                                        )\r\n                                    ) : (\r\n                                        <div className=\"data-not-found\">\r\n                                            <img\r\n                                                src={Images.NoDataFound}\r\n                                                alt=\"No data found\"\r\n                                                className=\"mb-3\"\r\n                                            />\r\n                                            <p>\r\n                                                <b className=\"text-secondary fw-bold\">Opps!</b> No Data\r\n                                                Found\r\n                                            </p>\r\n                                        </div>\r\n                                    )}\r\n\r\n                                    {nextPageUrl && observationListData?.list?.length > 0 && (\r\n                                        <LoadMore handleLoadMore={handleLoadMoreData}/>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <Suspense fallback={<div>please wait...</div>}>\r\n                                    <ObservationDetails\r\n                                        data={observationListData?.active}\r\n                                        modalClass=\"observation-details_modal\"\r\n                                        open={isObservationDetailModal}\r\n                                        handleClose={handleObservationDetailModal}\r\n                                        handleContinueEdit={handleObservationEdit}\r\n                                        activeType={\r\n                                            observationListData?.active?.is_verified\r\n                                                ? \"verified\"\r\n                                                : observationListData?.active?.is_reject\r\n                                                    ? \"denied\"\r\n                                                    : observationListData?.active?.is_submit\r\n                                                        ? \"unverified\"\r\n                                                        : \"draft\"\r\n                                        }\r\n                                        handleApproveRejectEvent={getObservationData}\r\n                                        refreshData={getObservationData}\r\n                                    />\r\n                                </Suspense>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import { Outlet } from \"react-router-dom\";\r\nimport {createContext, useEffect, useState} from \"react\";\r\nimport { cameraSettingFields } from \"../../helpers/url\";\r\n\r\nexport const ObservationContext = createContext({});\r\n\r\nconst Observations = () => {\r\n    const [observationType, setObservationType] = useState({\r\n        image_type: 1\r\n    });\r\n\r\n    const [observationSteps, setObservationSteps] = useState({\r\n        total: 3,\r\n        active: 1,\r\n        mode: {\r\n            update: false\r\n        }\r\n    });\r\n    const [observationImages, setObservationImages] = useState([]);\r\n    const [cameraDetails, setCameraDetails] = useState(cameraSettingFields);\r\n    const [observationCategory, setObservationCategory] = useState([]);\r\n    const [observationData, setObservationData] = useState({});\r\n\r\n    useEffect(()=> {\r\n        let data = (observationImages?.data) ? [...observationImages?.data] : []\r\n        setObservationData({\r\n            // is_draft: observationSteps?.is_draft ? 1 : 0,\r\n            image_type: observationType?.image_type,\r\n            map_data: data,\r\n            elevation_angle: null,\r\n            video_url : ''\r\n        })\r\n    }, [observationImages?.data, observationSteps?.is_draft, observationType?.image_type])\r\n\r\n    return(\r\n        <ObservationContext.Provider value={\r\n            {\r\n                observationType,\r\n                setObservationType,\r\n                observationSteps,\r\n                setObservationSteps,\r\n                observationImages,\r\n                setObservationImages,\r\n                observationCategory,\r\n                setObservationCategory,\r\n                observationData,\r\n                setObservationData,\r\n                cameraDetails, \r\n                setCameraDetails\r\n            }\r\n        }>\r\n            <Outlet />\r\n        </ObservationContext.Provider>\r\n    )\r\n}\r\n\r\nexport default Observations;"],"names":["LoadMore","props","handleLoadMore","className","onClick","observationImages","useContext","ObservationContext","useDebugValue","data","dashboardHelper","isCountryOpen","isTypeOpen","isStatusOpen","isRateOpen","isFOVOpen","isLensTypeOpen","country","name","code","type","status","from_obs_data","to_obs_data","obs_start_date","obs_end_date","obs_start_time","obs_end_time","camera_type","fps","iso","fov","shutter_speed","lens_type","FilterSelectMenu","lazy","AdvancedFilter","ObservationDetailPage","ObservationListView","ObservationDetails","navigate","useNavigate","auth","useAuth","useState","isObservationDetailModal","setObservationDetailModal","selectedObservationId","setSelectedObservationId","useObservations","setObservationData","setObservationSteps","setObservationImages","filterShow","setFilterShow","listView","setListView","gridView","setGridView","searchCountry","setSearchCountry","isFilterOpen","setIsFilterOpen","selectedFilterHorizontal","setSelectedFilterHorizontal","selectedFilterVertical","setSelectedFilterVertical","setIsLoaded","useObservationsData","observationListData","setObservationListData","nextPageUrl","setNextPageUrl","filterReset","setFilterReset","getObservationData","url","reset","category","user","is_superuser","baseURL","moment","format","axios","headers","Authorization","token","access","then","success","undefined","results","next","prevData","records","list","length","prev","active","catch","error","console","log","response","cleaningUpObservationDataForDraftSaving","updateStateForDraft","total","mode","update","handleFilterOpen","handleFilterValue","value","toLowerCase","useEffect","activeType","window","innerWidth","Suspense","fallback","dashboardFilter","galleryFilter","handleListView","handleGridView","findCountry","e","target","resetFilters","handleFilterInput","observationList","src","Images","alt","modalClass","open","handleClose","id","handleContinueEdit","r","setTimeout","is_verified","is_reject","is_submit","handleApproveRejectEvent","refreshData","createContext","image_type","observationType","setObservationType","observationSteps","cameraSettingFields","cameraDetails","setCameraDetails","observationCategory","setObservationCategory","observationData","map_data","elevation_angle","video_url","is_draft","Provider"],"sourceRoot":""}