{"version":3,"file":"static/js/7103.5cf8c570.chunk.js","mappings":"4WA+BMA,GAAgBC,EAAAA,EAAAA,OAAK,kBAAM,0CAC3BC,GAAyBD,EAAAA,EAAAA,OAAK,kBAAM,mCACpCE,GAAmCF,EAAAA,EAAAA,OAAK,kBAAM,mCAC9CG,GAAWH,EAAAA,EAAAA,OAAK,kBAAM,oEACtBI,GAAoBJ,EAAAA,EAAAA,OAAK,kBAAM,2CAqVrC,EAnV2B,SAACK,GAAW,IAAD,gCAC3BC,GAAQC,EAAAA,EAAAA,KAARD,KACDE,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,UAEhBC,EAQAP,EARAO,WACAC,EAOAR,EAPAQ,KACAC,EAMAT,EANAS,YACAC,EAKAV,EALAU,KACAC,EAIAX,EAJAW,WACAC,EAGAZ,EAHAY,mBACAC,EAEAb,EAFAa,yBACAC,EACAd,EADAc,YAGJ,GAAuCC,EAAAA,EAAAA,UAASC,EAAAA,GAAAA,SAAhD,eAAOC,EAAP,KAAkBC,EAAlB,KACA,IAA2EC,EAAAA,EAAAA,KAApEC,GAAP,GAAOA,oBAAqBC,GAA5B,GAA4BA,uBAAwBC,GAApD,GAAoDA,oBAC9CC,IAAkBjB,EAAAA,EAAAA,QAAO,MAC/B,IAAsCS,EAAAA,EAAAA,WAAS,GAA/C,iBAAOS,GAAP,MAAoBC,GAApB,MACA,IAA0CV,EAAAA,EAAAA,WAAS,GAAnD,iBAAOW,GAAP,MAAsBC,GAAtB,MAEMC,GAAwB,SAACC,GACvBZ,IAAcY,GACdX,EAAkBW,IAKpBC,GAAgB,yCAAG,yGACRC,EAAAA,EAAAA,KAELC,EAAAA,GAAAA,IAAc,yCAAd,OAAwDtB,QAAxD,IAAwDA,OAAxD,EAAwDA,EAAMuB,IAAK,IACnE,KACA,CACIC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,cAAYlC,QAAZ,IAAYA,GAAZ,UAAYA,EAAMmC,aAAlB,aAAY,EAAaC,WAIjDC,MAAK,SAACC,GAAc,IAAD,IAChBd,GAAc,OAACc,QAAD,IAACA,GAAD,UAACA,EAAU7B,YAAX,iBAAC,EAAgBA,YAAjB,aAAC,EAAsB8B,SAAS,UAEjDC,OAAM,SAACC,GACJC,QAAQC,IAAIF,MAhBC,mFAAH,qDAoBhBG,GAAsB,SAACC,GACzBnB,GAAiBmB,IA+CrB,OA3CAC,EAAAA,EAAAA,YAAU,WACNpB,IAAiB,GACjBT,EAAkBF,EAAAA,GAAAA,WACnB,CAACR,EAAD,OAAOE,QAAP,IAAOA,OAAP,EAAOA,EAAMuB,MAEhBc,EAAAA,EAAAA,YAAU,WAAO,IAAD,IACZ,GAAIvC,GAAI,OAAIE,QAAJ,IAAIA,GAAAA,EAAMuB,IAAMT,IAApB,OAAmCvB,QAAnC,IAAmCA,GAAnC,UAAmCA,EAAM+C,YAAzC,OAAmC,EAAYf,GAK/C,OAJA5B,EAAY4C,QAAUC,aAAY,WAC9BpB,KAAmBQ,MAAK,SAACa,GAAD,OAAOA,OAChC,KAEI,WACHC,cAAc/C,EAAY4C,UAEvBzC,GAAI,OAAIE,QAAJ,IAAIA,GAAAA,EAAMuB,IAAMT,KAAe,OAACvB,QAAD,IAACA,GAAD,UAACA,EAAM+C,YAAP,QAAC,EAAYf,KACvDoB,YAAW,WACP5B,IAAe,KAChB,OAER,QAACf,QAAD,IAACA,OAAD,EAACA,EAAMuB,GAAIT,GAAahB,EAAxB,OAA8BP,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAM+C,QAEvCD,EAAAA,EAAAA,YAAU,WACDvB,IAAerB,EAASmD,WAAT,WAA0BC,EAAAA,GAAAA,iBAC1CzC,GAAY,EAAMH,KAGvB,CAACa,GAAarB,KAEjB4C,EAAAA,EAAAA,YAAU,WACa,IAAD,EAAbvB,KACkB,OAAnBF,SAAmB,IAAnBA,IAAA,UAAAA,GAAqBkC,YAArB,SAA2BC,QAAO,SAAAC,GAAS,IAAD,EACtC,OAAOA,EAAKzB,MAAL,OAAYX,SAAZ,IAAYA,IAAZ,UAAYA,GAAqBqC,cAAjC,aAAY,EAA6B1B,OACjD2B,KAAI,SAAAF,GACH,OAAOrC,IAAuB,SAACwC,GAC3B,OAAO,kBACAA,GADP,IAEIF,OAAQD,aAKzB,CAACpC,GAAoBkC,QAGpB,+BACI,UAAC,KAAD,CACIM,UAAWvD,GAA0B,GACrCwD,OAAQvD,EACRwD,UAAU,EACVC,UAAU,EACVC,YAAY,EACZC,KAAK,KACLC,OAAQ3D,EACR4D,IAAK9C,GART,WAUI,UAAC,KAAD,CAAauC,UAAU,0DAAvB,WACI,iBAAKA,UAAU,kDAAf,WACI,SAAC,KAAD,CACIA,UAAU,oEACVQ,QAAS,kBAAM7D,KAFnB,UAII,gBAAK8D,IAAKC,EAAAA,EAAAA,eAAuBC,IAAI,kBAEzC,eAAIX,UAAU,qBAAd,SAAwC,OAAJpD,QAAI,IAAJA,GAAA,UAAAA,EAAMgE,qBAAN,SAAsB,GAAtB,OAA2BhE,QAA3B,IAA2BA,GAA3B,UAA2BA,EAAMgE,qBAAjC,iBAA2B,EAAsB,UAAjD,aAA2B,EAA0BC,KAAO,QAChG,UAAC,KAAD,CACIb,UAAS,yBACU,aAAfnD,EAA4B,gBAAkB,IAFtD,UAKoB,aAAfA,IACG,SAAC,KAAD,CACIiE,KAAK,qBACLC,MAAM,UACNf,UAAU,OACVgB,MAAM,KACNC,OAAO,OAGdpE,QAKO,UAAfA,IACG,0BACI,SAAC,KAAD,CACIqE,QAAQ,UACRV,QAAS,kBACL1D,EAAmB,CAACqB,GAAE,OAAEvB,QAAF,IAAEA,OAAF,EAAEA,EAAMuB,GAAIgD,KAAMtE,KAHhD,oCAWZ,SAAC,KAAD,WACI,UAAC,KAAD,YACI,SAAC,KAAD,CAAKuE,GAAI,EAAT,UACI,iBAAKpB,UAAU,qBAAf,WACI,iBAAKA,UAAU,8BAAf,YAC4B,KAAjB,OAAJpD,QAAI,IAAJA,OAAA,EAAAA,EAAMyE,eACqB,KAArB,OAAJzE,QAAI,IAAJA,GAAA,UAAAA,EAAM0E,cAAN,eAAcC,SACX,gBACId,IAAKC,EAAAA,EAAAA,aACLC,IAAI,eACJX,UAAU,6BAEbtC,IASD,iBACIsC,UAAU,0FADd,WAEI,SAAC,KAAD,CAASe,MAAM,UAAUV,KAAK,UAC9B,eAAIL,UAAU,OAAd,qCAXJ,SAAC,EAAAwB,SAAD,CAAUC,UAAU,mBAApB,UACI,SAAC7F,EAAD,CAAe8F,MAAK,OAAE9E,QAAF,IAAEA,GAAF,UAAEA,EAAM0E,cAAR,iBAAE,EAAe,UAAjB,aAAE,EAAmBI,MAC1BC,QAAO,OAAE/E,QAAF,IAAEA,GAAF,UAAEA,EAAM0E,cAAR,iBAAE,EAAe,UAAjB,aAAE,EAAmBI,MAC5Bf,IAAG,OAAE/D,QAAF,IAAEA,GAAF,UAAEA,EAAM0E,cAAR,iBAAE,EAAe,UAAjB,aAAE,EAAmBjF,SACxBuB,cAAemB,QAUpB,KAAjB,OAAJnC,QAAI,IAAJA,OAAA,EAAAA,EAAMyE,cACH,SAACpF,EAAD,CACI2F,aAAY,OAAEhF,QAAF,IAAEA,OAAF,EAAEA,EAAM0E,OACpBO,QAAQ,EACRjE,cAAemB,SAK3B,UAAC,KAAD,YACI,UAAC,KAAD,CACI+C,GAAI,EACJ9B,UAAU,iFAFd,UAIKpC,KACG,gBAAKoC,UAAU,sBAAf,UACI,SAAC,IAAD,CAAUiB,OAAQ,GAAID,MAAM,WAGpC,iBACIhB,UAAU,mEADd,WAEI,cAAGA,UAAU,8BAAb,UACI,gBACIgB,MAAM,OACNC,OAAO,OACPR,IACQ,OAAJ7D,QAAI,IAAJA,GAAA,UAAAA,EAAMmF,iBAAN,SAAiBC,cAAjB,OACMpF,QADN,IACMA,GADN,UACMA,EAAMmF,iBADZ,aACM,EAAiBC,cACjBtB,EAAAA,EAAAA,eAEVC,IAAI,UACJX,UAAU,sBAGlB,eAAIA,UAAU,+CAAd,UACS,OAAJpD,QAAI,IAAJA,GAAA,UAAAA,EAAMmF,iBAAN,eAAiBE,YACd,KADH,OAEGrF,QAFH,IAEGA,GAFH,UAEGA,EAAMmF,iBAFT,aAEG,EAAiBG,oBAIjC,SAAC,KAAD,CACIJ,GAAI,EACJ9B,UAAU,kEAFd,UAII,gBAAKA,UAAU,6CAAf,UACS,OAAJpD,QAAI,IAAJA,GAAA,UAAAA,EAAMgE,qBAAN,eAAqBW,QAAS,IAA9B,OACG3E,QADH,IACGA,GADH,UACGA,EAAMgE,qBADT,aACG,EAAqBd,KAAI,SAACF,EAAMuC,GAAW,IAAD,IACtC,OACI,iBAAiBnC,UAAU,qBAA3B,UACKpC,KACG,gBAAKoC,UAAU,WAAf,UACI,SAAC,IAAD,CAAUoC,QAAM,EAACnB,OAAQ,GAAID,MAAO,QAG5C,gBAAKhB,UAAU,oBAAf,UACI,iBACI7B,GAAE,OAAEyB,QAAF,IAAEA,GAAF,UAAEA,EAAMiB,YAAR,aAAE,EAAYwB,cAAcC,WAAW,IAAK,IAC9CtC,UAAU,8CAFd,UAII,SAAC,KAAD,CACIuC,UAAU,cACVC,QAAO,OAAE5C,QAAF,IAAEA,OAAF,EAAEA,EAAMiB,KAFnB,UAII,gBACIJ,IAAG,yCAA6Bb,QAA7B,IAA6BA,GAA7B,UAA6BA,EAAMiB,YAAnC,aAA6B,EAC1BwB,cACDC,WAAW,IAAK,IAFlB,QAGH3B,IAAG,OAAEf,QAAF,IAAEA,OAAF,EAAEA,EAAMiB,KACXG,MAAO,GAAIC,OAAQ,aApB7BkB,oBAiC1C,UAAC,KAAD,CAAKf,GAAI,EAAT,WACI,UAAC,KAAD,CAAKqB,MAAI,EAAT,WACI,SAAC,KAAD,WACI,SAAC,KAAD,CACIzC,UACI7C,IAAcD,EAAAA,GAAAA,QAAuB,SAAW,GAEpDsD,QAAS,WACL1C,GAAsBZ,EAAAA,GAAAA,UAL9B,wBAWJ,SAAC,KAAD,WACI,SAAC,KAAD,CACI8C,UACI7C,IAAcD,EAAAA,GAAAA,UAAyB,SAAW,GAEtDsD,QAAS,WACL1C,GAAsBZ,EAAAA,GAAAA,YAL9B,0BAWJ,SAAC,KAAD,WACI,UAAC,KAAD,CACI8C,UACI7C,IAAcD,EAAAA,GAAAA,SAAwB,SAAW,GAErDsD,QAAS,WACL1C,GAAsBZ,EAAAA,GAAAA,WAL9B,qBAQa,IAC+B,KAApB,OAAnBI,SAAmB,IAAnBA,QAAA,EAAAA,GAAqBoF,eAChB,GADL,kBAESpF,SAFT,IAESA,QAFT,EAESA,GAAqBoF,cAF9B,cAMb,UAAC,KAAD,CAAYvF,UAAWA,EAAvB,WACI,SAAC,KAAD,CAASwF,MAAOzF,EAAAA,GAAAA,QAAhB,UACI,SAAC,EAAAsE,SAAD,CAAUC,UAAU,4CAApB,UACI,SAAC3F,EAAD,CACI8G,YAAajG,EACbkG,mBAAoB9F,EACpB+F,gBAAe,OAAExF,SAAF,IAAEA,QAAF,EAAEA,GAAqBoF,cACtC9F,KAAMA,EACNC,WAAYA,SAIxB,SAAC,KAAD,CAAS8F,MAAOzF,EAAAA,GAAAA,UAAhB,UACI,SAAC,EAAAsE,SAAD,CAAUC,UAAU,4CAApB,UACI,SAAC1F,EAAD,CACI+G,gBAAe,OAAExF,SAAF,IAAEA,QAAF,EAAEA,GAAqBoF,cACtC9F,KAAI,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAMmG,mBAIxB,SAAC,KAAD,CAASJ,MAAOzF,EAAAA,GAAAA,SAAhB,UACI,SAAC,EAAAsE,SAAD,CAAUC,UAAU,4CAApB,UACI,SAACzF,EAAD,CAAUgH,MAAK,OAAEpG,QAAF,IAAEA,OAAF,EAAEA,EAAMuB","sources":["pages/Observation/ObservationDetails.jsx"],"sourcesContent":["import \"../../assets/scss/component/observationDetails.scss\";\r\nimport {lazy, Suspense, useEffect, useRef, useState} from \"react\";\r\nimport {\r\n    Badge,\r\n    Button,\r\n    Col,\r\n    Modal,\r\n    ModalBody,\r\n    ModalHeader,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Row,\r\n    Spinner,\r\n    TabContent,\r\n    TabPane,\r\n} from \"reactstrap\";\r\n\r\nimport {Icon} from \"@iconify/react\";\r\nimport Tippy from \"@tippyjs/react\";\r\n\r\nimport Images from \"./../../static/images\";\r\nimport {imageDetails} from \"../../helpers/observation\";\r\nimport axios from \"../../api/axios\";\r\nimport {baseURL, routeUrls} from \"../../helpers/url\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport {PropTypes} from \"prop-types\";\r\nimport {useLocation} from \"react-router-dom\";\r\nimport useObservationsData from \"../../hooks/useObservationsData\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst BlurImageComp = lazy(() => import(\"../../components/Common/BlurImage\"));\r\nconst ObservationMoreDetails = lazy(() => import(\"../../components/Observation/ObservationDetails/ObservationMoreDetails\"));\r\nconst ObservationMoreEquipementDetails = lazy(() => import(\"../../components/Observation/ObservationDetails/ObservationMoreEquipementDetails\"));\r\nconst Comments = lazy(() => import(\"../../components/Observation/ObservationDetails/Comments\"));\r\nconst CardImageCarousel = lazy(() => import(\"../../components/Shared/CardImageCarousel\"));\r\n\r\nconst ObservationDetails = (props) => {\r\n    const {auth} = useAuth();\r\n    const location = useLocation();\r\n    const intervalRef = useRef();\r\n    const {\r\n        modalClass,\r\n        open,\r\n        handleClose,\r\n        data,\r\n        activeType,\r\n        handleContinueEdit,\r\n        handleApproveRejectEvent,\r\n        refreshData\r\n    } = props;\r\n\r\n    const [activeTab, setActiveImageTab] = useState(imageDetails.Details);\r\n    const {observationComments, setObservationListData, observationListData} = useObservationsData();\r\n    const obvDetailsModal = useRef(null);\r\n    const [isImageNull, setIsImageNull] = useState(true);\r\n    const [loaderLoading, setLoaderLoading] = useState(true);\r\n    // Toggle Tabs\r\n    const toggleImageDetailsTab = (tab) => {\r\n        if (activeTab !== tab) {\r\n            setActiveImageTab(tab);\r\n        }\r\n    };\r\n\r\n    // Fetch image for observation for null checking\r\n    const checkNulledImage = async () => {\r\n        return await axios\r\n            .post(\r\n                baseURL.api + \"/observation/get_observation_details/\" + data?.id + \"/\",\r\n                null,\r\n                {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${auth?.token?.access}`,\r\n                    },\r\n                }\r\n            )\r\n            .then((response) => {\r\n                setIsImageNull(response?.data?.data?.includes(null));\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    const handleLoaderLoading = (state) => {\r\n        setLoaderLoading(state);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setLoaderLoading(true);\r\n        setActiveImageTab(imageDetails.Details);\r\n    }, [open, data?.id]);\r\n\r\n    useEffect(() => {\r\n        if (open && data?.id && isImageNull && auth?.user?.id) {\r\n            intervalRef.current = setInterval(() => {\r\n                checkNulledImage().then((r) => r);\r\n            }, 1000);\r\n\r\n            return () => {\r\n                clearInterval(intervalRef.current);\r\n            };\r\n        } else if (open && data?.id && isImageNull && !auth?.user?.id) {\r\n            setTimeout(function () {\r\n                setIsImageNull(false);\r\n            }, 1000)\r\n        }\r\n    }, [data?.id, isImageNull, open, auth?.user]);\r\n\r\n    useEffect(() => {\r\n        if (!isImageNull && location.pathname === `/${routeUrls.myObservations}`) {\r\n            refreshData(true, activeType);\r\n        }\r\n\r\n    }, [isImageNull, location]);\r\n\r\n    useEffect(() => {\r\n        if (!isImageNull) {\r\n            observationListData?.list?.filter(item => {\r\n                return item.id === observationListData?.active?.id\r\n            }).map(item => {\r\n                return setObservationListData((prev) => {\r\n                    return {\r\n                        ...prev,\r\n                        active: item\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    }, [observationListData.list])\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                className={modalClass ? modalClass : \"\"}\r\n                isOpen={open}\r\n                backdrop={true}\r\n                keyboard={false}\r\n                scrollable={false}\r\n                size=\"xl\"\r\n                toggle={handleClose}\r\n                ref={obvDetailsModal}\r\n            >\r\n                <ModalHeader className=\"d-flex justify-content-between align-items-center w-100\">\r\n                    <div className=\"d-flex align-items-center justify-content-start\">\r\n                        <Button\r\n                            className=\"close-icon bg-transparent rounded-0 border-0 shadow-none p-0 me-3\"\r\n                            onClick={() => handleClose()}\r\n                        >\r\n                            <img src={Images.Modalcloseicon} alt=\"close-icon\"/>\r\n                        </Button>\r\n                        <h4 className=\"d-inline-block m-0\">{data?.category_data?.[0] ? data?.category_data?.[0]?.name : null}</h4>\r\n                        <Badge\r\n                            className={`text-uppercase ${\r\n                                activeType === \"verified\" ? \"badge-success\" : \"\"\r\n                            }`}\r\n                        >\r\n                            {activeType === \"verified\" && (\r\n                                <Icon\r\n                                    icon=\"mdi:check-decagram\"\r\n                                    color=\"#27ae60\"\r\n                                    className=\"me-1\"\r\n                                    width=\"13\"\r\n                                    height=\"13\"\r\n                                />\r\n                            )}\r\n                            {activeType}\r\n                        </Badge>\r\n                    </div>\r\n                    {/*<h4>Data ID: {data?.id}</h4>*/}\r\n\r\n                    {activeType === \"draft\" && (\r\n                        <div>\r\n                            <Button\r\n                                variant=\"primary\"\r\n                                onClick={() =>\r\n                                    handleContinueEdit({id: data?.id, type: activeType})\r\n                                }\r\n                            >\r\n                                Continue Editing\r\n                            </Button>\r\n                        </div>\r\n                    )}\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <div className=\"mb-4 mb-md-0 h-100\">\r\n                                <div className=\"preview-detail mb-3 mb-md-2\">\r\n                                    {!(data?.image_type === 3) &&\r\n                                        (data?.images?.length === 0 ? (\r\n                                            <img\r\n                                                src={Images.NotAvailable}\r\n                                                alt=\"No available\"\r\n                                                className=\"object-contain img-fluid\"\r\n                                            />\r\n                                        ) : !isImageNull ? (\r\n                                            <Suspense fallback={<div></div>}>\r\n                                                <BlurImageComp image={data?.images?.[0]?.image}\r\n                                                               preview={data?.images?.[0]?.image}\r\n                                                               alt={data?.images?.[0]?.location}\r\n                                                               loaderLoading={handleLoaderLoading}\r\n                                                />\r\n                                            </Suspense>\r\n                                        ) : (\r\n                                            <div\r\n                                                className=\"d-flex flex-column h-100 align-items-center justify-content-center bg-gradient bg-light\">\r\n                                                <Spinner color=\"primary\" size=\"20px\"/>\r\n                                                <h5 className=\"mt-3\">Processing image...</h5>\r\n                                            </div>\r\n                                        ))}\r\n                                    {data?.image_type === 3 && (\r\n                                        <CardImageCarousel\r\n                                            carouselData={data?.images}\r\n                                            detail={true}\r\n                                            loaderLoading={handleLoaderLoading}\r\n                                        />\r\n                                    )}\r\n                                </div>\r\n\r\n                                <Row>\r\n                                    <Col\r\n                                        sm={6}\r\n                                        className=\"justify-content-start d-flex align-items-center mb-2 mb-sm-0 position-relative\"\r\n                                    >\r\n                                        {loaderLoading &&\r\n                                            <div className=\"obv-user-cat-loader\">\r\n                                                <Skeleton height={32} width=\"80%\"/>\r\n                                            </div>\r\n                                        }\r\n                                        <div\r\n                                            className=\"d-flex card-user_details align-items-center overflow-hidden mx-1\">\r\n                                            <i className=\"profile-icon rounded-circle\">\r\n                                                <img\r\n                                                    width=\"100%\"\r\n                                                    height=\"100%\"\r\n                                                    src={\r\n                                                        data?.user_data?.profile_image\r\n                                                            ? data?.user_data?.profile_image\r\n                                                            : Images.DefaultProfile\r\n                                                    }\r\n                                                    alt=\"Profile\"\r\n                                                    className=\"rounded-circle\"\r\n                                                />\r\n                                            </i>\r\n                                            <h5 className=\"pe-2 mb-0 text-truncate fw-normal text-black\">\r\n                                                {data?.user_data?.first_name +\r\n                                                    \" \" +\r\n                                                    data?.user_data?.last_name}\r\n                                            </h5>\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col\r\n                                        sm={6}\r\n                                        className=\"justify-content-end d-flex align-items-center position-relative\"\r\n                                    >\r\n                                        <div className=\"observation_type d-flex align-items-center\">\r\n                                            {data?.category_data?.length > 0 &&\r\n                                                data?.category_data?.map((item, index) => {\r\n                                                    return (\r\n                                                        <div key={index} className=\"cat-loader m-0 gap\">\r\n                                                            {loaderLoading &&\r\n                                                                <div className=\"skeleton\">\r\n                                                                    <Skeleton circle height={28} width={28}/>\r\n                                                                </div>\r\n                                                            }\r\n                                                            <div className=\"obv-cat-item mt-1\">\r\n                                                                <span\r\n                                                                    id={item?.name?.toLowerCase().replaceAll(\" \", \"\")}\r\n                                                                    className=\"rounded-circle bg-white me-1 cursor-pointer\"\r\n                                                                >\r\n                                                                    <Tippy\r\n                                                                        animation=\"perspective\"\r\n                                                                        content={item?.name}\r\n                                                                    >\r\n                                                                        <img\r\n                                                                            src={`/assets/images/category/${item?.name\r\n                                                                                ?.toLowerCase()\r\n                                                                                .replaceAll(\" \", \"\")}.png`}\r\n                                                                            alt={item?.name}\r\n                                                                            width={16} height={16}\r\n                                                                        />\r\n                                                                    </Tippy>\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    );\r\n                                                })}\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <Nav tabs>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={\r\n                                            activeTab === imageDetails.Details ? \"active\" : \"\"\r\n                                        }\r\n                                        onClick={() => {\r\n                                            toggleImageDetailsTab(imageDetails.Details);\r\n                                        }}\r\n                                    >\r\n                                        Details\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={\r\n                                            activeTab === imageDetails.Equipment ? \"active\" : \"\"\r\n                                        }\r\n                                        onClick={() => {\r\n                                            toggleImageDetailsTab(imageDetails.Equipment);\r\n                                        }}\r\n                                    >\r\n                                        Equipment\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={\r\n                                            activeTab === imageDetails.Comments ? \"active\" : \"\"\r\n                                        }\r\n                                        onClick={() => {\r\n                                            toggleImageDetailsTab(imageDetails.Comments);\r\n                                        }}\r\n                                    >\r\n                                        Comments{\" \"}\r\n                                        {observationComments?.comment_count === 0\r\n                                            ? \"\"\r\n                                            : `(${observationComments?.comment_count})`}\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <TabContent activeTab={activeTab}>\r\n                                <TabPane tabId={imageDetails.Details}>\r\n                                    <Suspense fallback={<div>please wait...</div>}>\r\n                                        <ObservationMoreDetails\r\n                                            handlePopup={handleClose}\r\n                                            approveRejectEvent={handleApproveRejectEvent}\r\n                                            obvCommentCount={observationComments?.comment_count}\r\n                                            data={data}\r\n                                            activeType={activeType}\r\n                                        />\r\n                                    </Suspense>\r\n                                </TabPane>\r\n                                <TabPane tabId={imageDetails.Equipment}>\r\n                                    <Suspense fallback={<div>please wait...</div>}>\r\n                                        <ObservationMoreEquipementDetails\r\n                                            obvCommentCount={observationComments?.comment_count}\r\n                                            data={data?.camera_data}\r\n                                        />\r\n                                    </Suspense>\r\n                                </TabPane>\r\n                                <TabPane tabId={imageDetails.Comments}>\r\n                                    <Suspense fallback={<div>please wait...</div>}>\r\n                                        <Comments obvId={data?.id}/>\r\n                                    </Suspense>\r\n                                </TabPane>\r\n                            </TabContent>\r\n                        </Col>\r\n                    </Row>\r\n                </ModalBody>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nObservationDetails.propTypes = {\r\n    hasNulledImage: PropTypes.func,\r\n    refreshData: PropTypes.func\r\n};\r\n\r\nexport default ObservationDetails;\r\n"],"names":["BlurImageComp","lazy","ObservationMoreDetails","ObservationMoreEquipementDetails","Comments","CardImageCarousel","props","auth","useAuth","location","useLocation","intervalRef","useRef","modalClass","open","handleClose","data","activeType","handleContinueEdit","handleApproveRejectEvent","refreshData","useState","imageDetails","activeTab","setActiveImageTab","useObservationsData","observationComments","setObservationListData","observationListData","obvDetailsModal","isImageNull","setIsImageNull","loaderLoading","setLoaderLoading","toggleImageDetailsTab","tab","checkNulledImage","axios","baseURL","id","headers","Authorization","token","access","then","response","includes","catch","error","console","log","handleLoaderLoading","state","useEffect","user","current","setInterval","r","clearInterval","setTimeout","pathname","routeUrls","list","filter","item","active","map","prev","className","isOpen","backdrop","keyboard","scrollable","size","toggle","ref","onClick","src","Images","alt","category_data","name","icon","color","width","height","variant","type","md","image_type","images","length","Suspense","fallback","image","preview","carouselData","detail","sm","user_data","profile_image","first_name","last_name","index","circle","toLowerCase","replaceAll","animation","content","tabs","comment_count","tabId","handlePopup","approveRejectEvent","obvCommentCount","camera_data","obvId"],"sourceRoot":""}