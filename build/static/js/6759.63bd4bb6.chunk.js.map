{"version":3,"file":"static/js/6759.63bd4bb6.chunk.js","mappings":"8SA2LA,EAnLsB,SAACA,GACnB,IAAOC,EAA0ED,EAA1EC,KAAMC,EAAoEF,EAApEE,QAASC,EAA2DH,EAA3DG,WAAYC,EAA+CJ,EAA/CI,WAAYC,EAAmCL,EAAnCK,YAAaC,EAAsBN,EAAtBM,SAAUC,EAAYP,EAAZO,SAC9DC,GAAQC,EAAAA,EAAAA,KAARD,KACP,GAAuBE,EAAAA,EAAAA,MACjBC,EAAoC,UAD1C,eAC0BC,IAAI,QAE9B,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAoCF,EAAAA,EAAAA,WAAS,GAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAAsCJ,EAAAA,EAAAA,UAAS,IAA/C,eAAOK,EAAP,KAAoBC,EAApB,KA+CA,IAAMC,EAAe,CACjBC,QAAS,CACLC,MAAO,CACH,OAAQ,OACR,WAAY,YAAa,sBAAuB,IAChD,UAAW,IAAK,YAAa,IAC7B,OAAQ,SAAU,IAAK,OAAQ,IAC/B,eAAgB,eAChB,cAAe,kBAAmB,IAClC,cAAe,YAAa,IAC5B,OAAQ,iBACR,oBAAqB,cACrB,aAEJC,wBAAwB,GAE5BC,cAAe,CAAC,SAChBC,aAAc,CAvBlB,SAAsBC,GAClBA,EAAOC,QAAQf,IAAI,kBAAkBgB,oBAAsB,SAACC,GACxD,OAtCR,SAAuBA,GAEnB,OADAZ,GAAc,GACP,CACHa,OAAQ,WACJ,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAO,IAAIC,SACjB/B,GAAW,GACXyB,EAAOO,KAAKC,MAAK,SAACD,GAAU,IAAD,EACvBF,EAAKI,OAAO,QAASF,IACP,IAAIG,SACVD,OAAO,gBAAf,wBAA0C9B,QAA1C,IAA0CA,GAA1C,UAA0CA,EAAMgC,aAAhD,aAA0C,EAAaC,SACvDC,MAAM,GAAD,OAAIC,EAAAA,GAAAA,mBAA6B,CAClCC,OAAQ,OACRV,KAAMA,IAELG,MAAK,SAACQ,GAAD,OAASA,EAAIC,UAClBT,MAAK,SAACQ,GAEHzC,GAAW,GACX4B,EAAQ,CACJe,QAASF,EAAIG,MAEjBjC,GAAW,SAACkC,GAAD,wBACJA,GADI,CAEP,CAACC,GAAIL,EAAIM,SAAUH,IAAKH,EAAIG,aAGnCI,OAAM,SAACC,GACJpB,EAAOoB,cAUpBC,CAAczB,OAgE7B,OAxCA0B,EAAAA,EAAAA,YAAU,WACFrD,GACAA,GAAQ,SAAC+C,GACL,OAAO,kBACAA,GADP,IAEIO,UAAW1C,SAKxB,CAACA,EAASI,KAIbqC,EAAAA,EAAAA,YAAU,WACN,GAAIvC,GAAcF,EAAS,CAAC,IAAD,EACjB2C,EAAW,OAAGtD,QAAH,IAAGA,GAAH,UAAGA,EAAYqD,iBAAf,aAAG,EAAuBE,QAAO,SAAAC,GAC9C,OAAOzC,EAAY0C,SAASD,EAAKX,QAClCa,KAAI,SAACF,GACJ,OAAOA,KAEX5C,EAAW0C,MAGhB,CAACvC,EAAaF,KAGjBuC,EAAAA,EAAAA,YAAU,WACFlD,GACAA,EAAYM,KAGjB,CAACA,KASA,+BAEI,SAAC,EAAAmD,SAAD,CACIpC,OAAQqC,IACRC,OAAQ5C,EACRnB,KAAMA,GAAc,GACpBoC,KAAM,SAAA4B,GACFC,QAAQC,IAAIF,IAEhBG,QAAS,SAAA1C,GAOL,IAAM2C,EAAmB3C,EAAO4C,GAAGC,KAAKC,YACxC9C,EAAO+C,WAAanE,GAAsBC,EAEtCmB,EAAO+C,aACP/C,EAAO4C,GAAGC,KAAKG,IAAIC,OAAON,GAC1B3C,EAAO4C,GAAGC,KAAKK,SAASC,QAAQC,UAAUC,IAAI,OAC9CrD,EAAO4C,GAAGC,KAAKK,SAASC,QAAQC,UAAUC,IAAI,cAGtDC,SAAU,SAACC,EAAOvD,GACdT,GAAc,GAEd,IAAMhB,EAAOyB,EAAOwD,UAEpBxD,EAAOyD,MAAMC,SAASC,GAAG,eAAe,WACpCpE,GAAc,MAElB,IAAMqE,EAASC,MAAMC,MAAK,IAAIC,WAAYC,gBAAgBhE,EAAOwD,UAAW,aACvES,iBAAiB,QACjB9B,KAAI,SAAA+B,GAAG,OAAIA,EAAIC,aAAa,UAEjC1E,EAAemE,GAEXpF,GACAA,GAAQ,SAAC+C,GACL,OAAO,kBACAA,GADP,IAEI6C,QAAS7F,QAMzB8F,QAAS,SAACd,EAAOvD,KAIjBsE,OAAQ,SAACf,EAAOvD,W,2FCpHhC,IAvDyB,SAAC1B,GACtB,IAAOiG,EAA8CjG,EAA9CiG,KAAMH,EAAwC9F,EAAxC8F,QAASzF,EAA+BL,EAA/BK,YAAaC,EAAkBN,EAAlBM,SAAU4F,EAAQlG,EAARkG,KAC7C,OACI,+BACI,iBAAKC,UAAU,8BAAf,WACI,gBAAKA,UAAU,mBACf,oBAASA,UAAU,YAAnB,UACI,UAAC,KAAD,YACI,gBAAKA,UAAU,oBAAf,UACI,iBAAKA,UAAU,GAAf,WACI,UAAC,KAAD,CAAMC,GAAI,IAAMC,EAAAA,GAAAA,UAAsB,IAAMH,EACtCC,UAAU,uDADhB,WAEI,SAAC,KAAD,CAAMG,KAAK,aACX,kBAAMH,UAAU,OAAhB,qBACSD,SAGb,iBAAKC,UAAU,oDAAf,WACI,eAAIA,UAAU,OAAd,gBAAsBL,QAAtB,IAAsBA,OAAtB,EAAsBA,EAASS,SAC/B,SAAC,KAAD,CACIH,GAAIN,EAAO,WAAOO,EAAAA,GAAAA,UAAP,YAA8BH,EAA9B,YAAsCD,EAAtC,SAAoD,GAC/DE,UAAU,8BAFd,2BASZ,gBAAKA,UAAU,OAAf,UACI,gBAAKA,UAAU,MAAf,UACI,SAAC,KAAD,CAAKK,GAAI,GAAT,UACI,gBAAKL,UAAU,OAAf,UACI,iBAAKA,UAAU,gCAAf,WACI,iBAAMA,UAAU,kBAAhB,0BACA,cAAGA,UAAU,YAAb,gBACKL,QADL,IACKA,OADL,EACKA,EAASW,eAEd,0BACI,SAAC,UAAD,CAAexG,KAAI,OAAE6F,QAAF,IAAEA,OAAF,EAAEA,EAASA,QACfzF,YAAaA,EACbC,SAAUA,6B,mKCGzE,UAxCiB,WACb,IAAO2F,GAAQS,EAAAA,EAAAA,MAART,KACAzF,GAAQC,EAAAA,EAAAA,KAARD,KACDmG,GAAWC,EAAAA,EAAAA,MACjB,GAA8B/F,EAAAA,EAAAA,YAA9B,eAAOgG,EAAP,KAAgBC,EAAhB,KACA,GAAgCjG,EAAAA,EAAAA,WAAS,GAAzC,eAAOP,EAAP,KAAiBD,EAAjB,KAEM0G,EAAiB,mCAAG,oGAChBC,EAAAA,EAAAA,IAAA,UAAarE,EAAAA,GAAAA,iBAAb,OAAuCsD,EAAvC,KAAgD,CAClDgB,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,cAAY1G,QAAZ,IAAYA,GAAZ,UAAYA,EAAMgC,aAAlB,aAAY,EAAaC,WAE3CJ,MAAK,SAAA4B,GAAa,IAAD,EAEhB6C,EAAU,OAAC7C,QAAD,IAACA,GAAD,UAACA,EAAUhE,YAAX,aAAC,EAAgBA,SAE5BmD,OAAM,SAAA+D,GAAU,IAAD,EAEsB,OAA3B,OAALA,QAAK,IAALA,GAAA,UAAAA,EAAOlD,gBAAP,eAAiBmD,aACjBT,EAAS,OAAQ,CAACU,SAAS,OAbb,2CAAH,qDAuBvB,OALA9D,EAAAA,EAAAA,YAAU,WACNwD,IAAoB1E,MAAK,SAAAiF,GAAC,OAAIA,OAE/B,KAGC,SAAC,IAAD,CAAkBjH,YAAaA,EACbC,SAAUA,EACVwF,QAASe,EACTZ,KAAMA,EACNC,KAAK,W","sources":["components/Blog/ContentEditor.jsx","pages/Dashboard/BlogTutorial/ViewBlogTutorial.jsx","pages/Dashboard/Blog/BlogView.jsx"],"sourcesContent":["import \"../../assets/scss/styles/editors.css\";\r\nimport {CKEditor} from \"@ckeditor/ckeditor5-react\";\r\nimport FullEditor from \"@blowstack/ckeditor5-full-free-build\";\r\nimport {baseURL} from \"../../helpers/url\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {useSearchParams} from \"react-router-dom\";\r\n\r\nconst ContentEditor = (props) => {\r\n    const {data, setData, editorData, setLoading, setReadMode, readMode, readOnly} = props;\r\n    const {auth} = useAuth();\r\n    const [searchParams] = useSearchParams();\r\n    const mode = searchParams.get('mode') !== \"edit\";\r\n\r\n    const [imageId, setImageID] = useState([]);\r\n    const [changeData, setChangeData] = useState(false);\r\n    const [editorImage, setEditorImage] = useState([]);\r\n\r\n    // const [fakeLoading, setFakeLoading] = useState(true);\r\n\r\n\r\n    function uploadAdapter(loader) {\r\n        setChangeData(false);\r\n        return {\r\n            upload: () => {\r\n                return new Promise((resolve, reject) => {\r\n                    const body = new FormData();\r\n                    setLoading(true);\r\n                    loader.file.then((file) => {\r\n                        body.append(\"image\", file);\r\n                        let headers = new Headers();\r\n                        headers.append(\"Authorization\", `Bearer ${auth?.token?.access}`);\r\n                        fetch(`${baseURL.blog_image_upload}`, {\r\n                            method: \"post\",\r\n                            body: body\r\n                        })\r\n                            .then((res) => res.json())\r\n                            .then((res) => {\r\n                                // console.log(res);\r\n                                setLoading(false);\r\n                                resolve({\r\n                                    default: res.url\r\n                                });\r\n                                setImageID((prev) => [\r\n                                    ...prev,\r\n                                    {id: res.image_id, url: res.url}\r\n                                ])\r\n                            })\r\n                            .catch((err) => {\r\n                                reject(err);\r\n                            });\r\n                    });\r\n                });\r\n            }\r\n        };\r\n    }\r\n\r\n    function uploadPlugin(editor) {\r\n        editor.plugins.get(\"FileRepository\").createUploadAdapter = (loader) => {\r\n            return uploadAdapter(loader);\r\n        };\r\n    }\r\n\r\n    const editorConfig = {\r\n        toolbar: {\r\n            items: [\r\n                \"undo\", \"redo\",\r\n                \"fontsize\", \"fontColor\", \"fontBackgroundColor\", \"|\",\r\n                \"heading\", \"|\", \"alignment\", \"|\",\r\n                \"bold\", \"italic\", \"|\", \"link\", \"|\",\r\n                \"bulletedList\", \"numberedList\",\r\n                \"insertTable\", \"mergeTableCells\", \"|\",\r\n                \"insertImage\", \"codeBlock\", \"|\",\r\n                \"code\", \"HorizontalLine\",\r\n                \"SpecialCharacters\", \"ImageResize\",\r\n                \"pageBreak\",\r\n            ],\r\n            shouldNotGroupWhenFull: false\r\n        },\r\n        removePlugins: ['Title'],\r\n        extraPlugins: [uploadPlugin],\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (setData) {\r\n            setData((prev) => {\r\n                return {\r\n                    ...prev,\r\n                    image_ids: imageId\r\n                }\r\n            })\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [imageId, editorImage])\r\n\r\n\r\n    // For clearing image from the array\r\n    useEffect(() => {\r\n        if (changeData && imageId) {\r\n            const updatedItem = editorData?.image_ids?.filter(item => {\r\n                return editorImage.includes(item.url);\r\n            }).map((item) => {\r\n                return item;\r\n            });\r\n            setImageID(updatedItem);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [editorImage, changeData])\r\n\r\n    // SetEditMode\r\n    useEffect(() => {\r\n        if (setReadMode) {\r\n            setReadMode(mode);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [mode]);\r\n\r\n    // useEffect(() => {\r\n    //     setTimeout(function () {\r\n    //         setFakeLoading(false);\r\n    //     }, 1000)\r\n    // }, [fakeLoading])\r\n\r\n    return (\r\n        <>\r\n            {/*{fakeLoading ? <div>Please wait...</div> : ''}*/}\r\n            <CKEditor\r\n                editor={FullEditor}\r\n                config={editorConfig}\r\n                data={data ? data : \"\"}\r\n                then={response => {\r\n                    console.log(response);\r\n                }}\r\n                onReady={editor => {\r\n\r\n                    // console.log('ready editor')\r\n                    // console.log(editor.config._config.plugins.map(item => item.pluginName))\r\n                    // console.log(Array.from(editor.ui.componentFactory.names()));\r\n                    // console.log('isReadOnly', editor.isReadOnly)\r\n                    // editor.ui.view.editable.element.style.minHeight = \"180px\"\r\n                    const toolbarContainer = editor.ui.view.stickyPanel;\r\n                    editor.isReadOnly = readMode ? readMode : readOnly;\r\n\r\n                    if (editor.isReadOnly) {\r\n                        editor.ui.view.top.remove(toolbarContainer);\r\n                        editor.ui.view.editable.element.classList.add('p-0');\r\n                        editor.ui.view.editable.element.classList.add('border-0');\r\n                    }\r\n                }}\r\n                onChange={(event, editor) => {\r\n                    setChangeData(false);\r\n                    // console.log('event', event)\r\n                    const data = editor.getData();\r\n\r\n                    editor.model.document.on('change:data', () => {\r\n                        setChangeData(true);\r\n                    });\r\n                    const avlImg = Array.from(new DOMParser().parseFromString(editor.getData(), 'text/html')\r\n                        .querySelectorAll('img'))\r\n                        .map(img => img.getAttribute('src'))\r\n\r\n                    setEditorImage(avlImg);\r\n\r\n                    if (setData) {\r\n                        setData((prev) => {\r\n                            return {\r\n                                ...prev,\r\n                                content: data\r\n                            }\r\n                        })\r\n                    }\r\n\r\n                }}\r\n                onFocus={(event, editor) => {\r\n                    // console.log('focus')\r\n                    // editor.ui.view.editable.element.style.minHeight = \"180px\"\r\n                }}\r\n                onBlur={(event, editor) => {\r\n                    // editor.ui.view.editable.element.style.minHeight = \"180px\"\r\n                    // console.log('blurred')\r\n                }}\r\n            />\r\n        </>\r\n\r\n    )\r\n}\r\nContentEditor.propTypes = {};\r\nexport default ContentEditor;","import {Col, Container} from \"reactstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {routeUrls} from \"../../../helpers/url\";\r\nimport {Icon} from \"@iconify/react/dist/iconify\";\r\nimport ContentEditor from \"../../../components/Blog/ContentEditor\";\r\n\r\nconst ViewBlogTutorial = (props) => {\r\n    const {slug, content, setReadMode, readMode, type} = props;\r\n    return (\r\n        <>\r\n            <div className=\"blog_page position-relative\">\r\n                <div className=\"common-banner\"></div>\r\n                <section className=\"blog-main\">\r\n                    <Container>\r\n                        <div className=\"position-relative\">\r\n                            <div className=\"\">\r\n                                <Link to={'/' + routeUrls.dashboard + '/' + type}\r\n                                      className=\"d-flex align-items-center justify-content-start mb-3\">\r\n                                    <Icon icon=\"ep:back\"/>\r\n                                    <span className=\"ms-2\">\r\n                                    Back to {type}\r\n                                </span>\r\n                                </Link>\r\n                                <div className=\"d-flex align-items-center justify-content-between\">\r\n                                    <h2 className=\"mb-0\">{content?.title}</h2>\r\n                                    <Link\r\n                                        to={content ? `/${routeUrls.dashboard}/${type}/${slug}/edit` : ''}\r\n                                        className=\"btn btn-primary px-4 btn-sm\">\r\n                                        Edit\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"mt-5\">\r\n                            <div className=\"row\">\r\n                                <Col sm={12}>\r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-body p-4 py-md-5 px-md-5\">\r\n                                            <span className=\"text-light-dark\">Description</span>\r\n                                            <p className=\"card-text\">\r\n                                                {content?.description}\r\n                                            </p>\r\n                                            <div>\r\n                                                <ContentEditor data={content?.content}\r\n                                                               setReadMode={setReadMode}\r\n                                                               readMode={readMode}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </Container>\r\n                </section>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default ViewBlogTutorial;","import \"../../../assets/scss/component/blog.scss\";\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\nimport {baseURL} from \"../../../helpers/url\";\r\nimport axios from \"../../../api/axios\";\r\nimport {useEffect, useState} from \"react\";\r\nimport useAuth from \"../../../hooks/useAuth\";\r\n\r\nimport ViewBlogTutorial from \"../BlogTutorial/ViewBlogTutorial\";\r\n\r\nconst BlogView = () => {\r\n    const {slug} = useParams();\r\n    const {auth} = useAuth();\r\n    const navigate = useNavigate();\r\n    const [article, setArticle] = useState();\r\n    const [readMode, setReadMode] = useState(false);\r\n\r\n    const getArticleDetails = async () => {\r\n        await axios.get(`${baseURL.get_single_blog}${slug}/`, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${auth?.token?.access}`,\r\n            },\r\n        }).then(response => {\r\n            // console.log(response);\r\n            setArticle(response?.data?.data);\r\n            // console.log(response?.data?.data);\r\n        }).catch(error => {\r\n            // console.log(error);\r\n            if (error?.response?.statusCode !== 200) {\r\n                navigate('/404', {replace: true});\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getArticleDetails().then(r => r)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <ViewBlogTutorial setReadMode={setReadMode}\r\n                          readMode={readMode}\r\n                          content={article}\r\n                          slug={slug}\r\n                          type=\"blog\"\r\n        />\r\n    )\r\n}\r\n\r\nexport default BlogView;"],"names":["props","data","setData","editorData","setLoading","setReadMode","readMode","readOnly","auth","useAuth","useSearchParams","mode","get","useState","imageId","setImageID","changeData","setChangeData","editorImage","setEditorImage","editorConfig","toolbar","items","shouldNotGroupWhenFull","removePlugins","extraPlugins","editor","plugins","createUploadAdapter","loader","upload","Promise","resolve","reject","body","FormData","file","then","append","Headers","token","access","fetch","baseURL","method","res","json","default","url","prev","id","image_id","catch","err","uploadAdapter","useEffect","image_ids","updatedItem","filter","item","includes","map","CKEditor","FullEditor","config","response","console","log","onReady","toolbarContainer","ui","view","stickyPanel","isReadOnly","top","remove","editable","element","classList","add","onChange","event","getData","model","document","on","avlImg","Array","from","DOMParser","parseFromString","querySelectorAll","img","getAttribute","content","onFocus","onBlur","slug","type","className","to","routeUrls","icon","title","sm","description","useParams","navigate","useNavigate","article","setArticle","getArticleDetails","axios","headers","Authorization","error","statusCode","replace","r"],"sourceRoot":""}