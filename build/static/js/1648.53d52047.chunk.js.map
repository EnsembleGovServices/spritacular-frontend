{"version":3,"file":"static/js/1648.53d52047.chunk.js","mappings":"gLAsEA,IAlEsB,SAACA,GACnB,IACIC,EASAD,EATAC,SACAC,EAQAF,EARAE,YACAC,EAOAH,EAPAG,SACAC,EAMAJ,EANAI,kBACAC,EAKAL,EALAK,MACAC,EAIAN,EAJAM,MACAC,EAGAP,EAHAO,aACAC,EAEAR,EAFAQ,iBACAC,EACAT,EADAS,WAEJ,OACI,iBAAKC,UAAU,oBAAf,WACI,iBACIA,UAAS,+BAA0BJ,EAAQ,wBAA0B,GAA5D,YAAkEG,EAAa,kBAAoB,IADhH,WAEI,gBAAKC,UAAU,kBAAf,UACI,UAAC,KAAD,YACI,SAAC,KAAD,CAAOC,QAAQ,aAAf,UACI,iBAAKD,UAAU,cAAf,WACI,SAAC,KAAD,CAAME,KAAK,eAAeC,MAAM,UAAUC,MAAM,KAAKC,OAAO,QAC5D,uBAAIP,EAAmB,gCAAkC,4CACxDP,IAAY,iBAAMS,UAAU,aAAhB,kCACZR,IACG,yBACI,iFAShB,SAAC,KAAD,CACIc,KAAK,OACLC,KAAK,OACLC,GAAG,aACHC,OAAO,mCACPhB,SAAUA,EACViB,SAAU,SAACC,GAAD,OAAOjB,EAAkBiB,YAIzC,OAALhB,QAAK,IAALA,OAAA,EAAAA,EAAOiB,SACJ,kBAAMZ,UAAU,gDAAhB,iBAAiEL,QAAjE,IAAiEA,OAAjE,EAAiEA,EAAOiB,MAAxE,QAEE,OAALjB,QAAK,IAALA,OAAA,EAAAA,EAAOkB,QACJ,iBAAMb,UAAU,gDAAhB,gBAAiEL,QAAjE,IAAiEA,OAAjE,EAAiEA,EAAOkB,QAEtE,OAALlB,QAAK,IAALA,OAAA,EAAAA,EAAOmB,aACJ,iBAAMd,UAAU,8CAAhB,gBAA+DL,QAA/D,IAA+DA,OAA/D,EAA+DA,EAAOmB,eAG7EhB,IACG,gBAAKE,UAAS,UAAKF,EAAmB,cAAgB,IAAtD,UACI,oBAAQiB,QAAS,SAACJ,GAAD,OAAOd,EAAac,IAC7BX,UAAS,oBADjB,WAEI,SAAC,KAAD,CAAME,KAAK,2BAA2BE,MAAM,KAAKC,OAAO,OAF5D,+B,mICTpB,UA3CkC,SAACf,GAC/B,IAAOsB,EAAStB,EAATsB,MACDI,GAAWC,EAAAA,EAAAA,MACjB,GAAwEC,EAAAA,EAAAA,KAAjEC,EAAP,EAAOA,qBAAsBC,EAA7B,EAA6BA,oBAAqBC,EAAlD,EAAkDA,mBAClD,GAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAwBA,OAfAC,EAAAA,EAAAA,YAAU,WACNL,EAAoB,CAChBM,MAAO,EACPC,OAAQ,EACRC,KAAM,CACFC,QAAQ,EACRrB,IAAI,KAIZW,EAAqB,IACrBE,EAAmB,QACpB,CAACE,EAAWF,EAAoBF,EAAsBC,IAIpC,KAAZ,OAALR,QAAK,IAALA,OAAA,EAAAA,EAAOc,QACH,oBACI1B,UAAU,aADd,UAEI,SAAC,KAAD,WACI,SAAC,IAAD,CACIH,aA5BC,SAACc,GAGlB,OAFAA,EAAEmB,iBACFN,GAAa,GACNR,EAAS,IAAMe,EAAAA,GAAAA,kBA0BNjC,kBAAkB,QAI7B,K","sources":["components/Shared/UploadImageUI.jsx","pages/Page/InitialUploadObservations.jsx"],"sourcesContent":["import \"../../assets/scss/component/initialUploadobservations.scss\";\nimport {FormGroup, Input, Label} from \"reactstrap\";\nimport {Icon} from \"@iconify/react/dist/iconify\";\n\nconst UploadImageUI = (props) => {\n    const {\n        maxLimit,\n        imageFormat,\n        multiple,\n        handleUploadImage,\n        error,\n        small,\n        handleObvAdd,\n        defaultUploadBox,\n        blogUpload\n    } = props;\n    return (\n        <div className=\"position-relative\">\n            <div\n                className={`upload-image_wrapper ${small ? \"small-upload_box mb-5\" : ''} ${blogUpload ? 'blog-upload-box' : ''}`}>\n                <div className=\"upload-ob-inner\">\n                    <FormGroup>\n                        <Label htmlFor=\"UploadFile\">\n                            <div className=\"upload-info\">\n                                <Icon icon=\"bx:image-alt\" color=\"#737e96\" width=\"42\" height=\"42\"/>\n                                <p>{defaultUploadBox ? 'Upload your first observation' : 'Drag and drop images or click to upload'}</p>\n                                {maxLimit && <span className=\"text-black\">Max. Image Size: 5MB</span>}\n                                {imageFormat &&\n                                    <ul>\n                                        <li>\n                                            Common Image File Formats (JPEG or\n                                            JPG, PNG)\n                                        </li>\n                                    </ul>\n                                }\n\n                            </div>\n                        </Label>\n                        <Input\n                            type=\"file\"\n                            name=\"file\"\n                            id=\"UploadFile\"\n                            accept=\"image/jpg, image/jpeg, image/png\"\n                            multiple={multiple}\n                            onChange={(e) => handleUploadImage(e)}\n                        />\n                    </FormGroup>\n                </div>\n                {error?.count &&\n                    <span className=\"text-danger d-block small my-1 d-inline-block\">{error?.count} </span>\n                }\n                {error?.size &&\n                    <span className=\"text-danger d-block small my-1 d-inline-block\">{error?.size}</span>\n                }\n                {error?.duplicate &&\n                    <span className=\"text-info d-block small my-1 d-inline-block\">{error?.duplicate}</span>\n                }\n            </div>\n            {defaultUploadBox &&\n                <div className={`${defaultUploadBox ? 'mark-center' : ''}`}>\n                    <button onClick={(e) => handleObvAdd(e)}\n                            className={`btn btn-secondary`}>\n                        <Icon icon=\"heroicons-outline:upload\" width=\"25\" height=\"22\"/>\n                        Upload Observation\n                    </button>\n                </div>\n            }\n        </div>\n    )\n}\nexport default UploadImageUI;","import \"../../assets/scss/component/initialUploadobservations.scss\";\nimport {Container} from \"reactstrap\";\nimport {useNavigate} from \"react-router-dom\";\nimport {routeUrls} from '../../helpers/url';\nimport useObservations from \"../../hooks/useObservations\";\nimport {useEffect, useState} from \"react\";\nimport UploadImageUI from \"../../components/Shared/UploadImageUI\";\n\nconst InitialUploadObservations = (props) => {\n    const {count} = props;\n    const navigate = useNavigate();\n    const {setObservationImages, setObservationSteps, setObservationData} = useObservations();\n    const [isCleanUp, setIsCleanUp] = useState(false);\n\n    const handleObvAdd = (e) => {\n        e.preventDefault();\n        setIsCleanUp(true);\n        return navigate('/' + routeUrls.observationsAdd);\n    }\n\n\n    useEffect(() => {\n        setObservationSteps({\n            total: 3,\n            active: 1,\n            mode: {\n                update: true,\n                id: false\n            },\n\n        })\n        setObservationImages([])\n        setObservationData(null)\n    }, [isCleanUp, setObservationData, setObservationImages, setObservationSteps])\n\n\n    return (\n        count?.total === 0 ? (\n            <section\n                className=\"center_box\">\n                <Container>\n                    <UploadImageUI\n                        handleObvAdd={handleObvAdd}\n                        defaultUploadBox={true}\n                    />\n                </Container>\n            </section>\n        ) : ('')\n    );\n};\n\nexport default InitialUploadObservations;\n"],"names":["props","maxLimit","imageFormat","multiple","handleUploadImage","error","small","handleObvAdd","defaultUploadBox","blogUpload","className","htmlFor","icon","color","width","height","type","name","id","accept","onChange","e","count","size","duplicate","onClick","navigate","useNavigate","useObservations","setObservationImages","setObservationSteps","setObservationData","useState","isCleanUp","setIsCleanUp","useEffect","total","active","mode","update","preventDefault","routeUrls"],"sourceRoot":""}