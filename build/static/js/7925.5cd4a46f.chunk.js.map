{"version":3,"file":"static/js/7925.5cd4a46f.chunk.js","mappings":"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","sources":["components/Account/UpdateProfile.jsx","helpers.jsx","components/LocationSearchInput.jsx"],"sourcesContent":["import { Button, Form, FormFeedback, FormGroup, Input, Label, UncontrolledAlert} from \"reactstrap\";\nimport axios from \"../../api/axios\";\nimport {useEffect, useState} from \"react\";\nimport {baseURL} from \"../../helpers/url\";\nimport useAuth from \"../../hooks/useAuth\";\nimport PlacesAutocomplete from \"../LocationSearchInput\";\n\n\nconst UpdateProfile = (props) => {\n    const {user} = props;\n    const { setAuth } = useAuth();\n    const [updateUser, setUpdatedUser] = useState()\n    const [success, setSuccess] = useState();\n    const [error, setError] = useState();\n\n    const handleInput = (e) => {\n        e.preventDefault();\n        let name = e.target.name,\n            value = e.target.value;\n        setUpdatedUser({\n            ...updateUser,\n            [name]:value\n        })\n    }\n    useEffect(()=> {\n        setUpdatedUser(user?.user)\n    }, [user?.user])\n\n    const handleLocations = (location) => {\n        setUpdatedUser({\n            ...updateUser,\n            location: location['address'],\n            place_uid: location['placeId'],\n            country_code: location['countryCode'],\n            location_metadata: {\n                lat: location['lat'],\n                lng: location['lng'],\n            }\n        });\n    }\n\n    const handleProfileUpdate = async (e) => {\n        e.preventDefault();\n        setSuccess('');\n        setError('');\n        await axios.patch(baseURL.api+'/users/user_profile/'+user?.user?.id+'/', {\n            first_name: updateUser?.first_name,\n            last_name: updateUser?.last_name,\n            email: updateUser?.email,\n            location: updateUser?.location,\n            place_uid: updateUser?.place_uid,\n            country_code: updateUser?.country_code,\n            location_metadata: {\n                lat: updateUser?.location_metadata?.lat,\n                lng: updateUser?.location_metadata?.lng,\n                \n            }\n        }, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${user?.token?.access}`\n            },\n            withCredentials: true,\n        }).then((success) => {\n            setSuccess(success)\n            setAuth(prev => {\n                return {\n                    ...prev,\n                    user: updateUser\n                }\n            });\n        }).catch((error) => {\n            console.log(error.response);\n            setError(error.response)\n        })\n    }\n\n    return(\n        <>\n            {success && success?.status === 200 &&\n                <UncontrolledAlert variant=\"success\" data-dismiss=\"alert\" dismissible=\"true\">\n                    Profile updated successfully\n                </UncontrolledAlert>\n            }\n            <Form onSubmit={handleProfileUpdate}>\n                <FormGroup>\n                    <Label htmlFor=\"first_name\">First Name</Label>\n                    <Input\n                        type=\"text\"\n                        name=\"first_name\"\n                        value={updateUser?.first_name ?? \"\"}\n                        onChange={(e)=>handleInput(e)}\n                        invalid={!!error?.data?.first_name}\n                        placeholder=\"First Name\"\n                    />\n                    <FormFeedback>{error?.data?.first_name}</FormFeedback>\n                </FormGroup>\n                <FormGroup>\n                    <Label htmlFor=\"last_name\">Last Name</Label>\n                    <Input\n                        type=\"text\"\n                        name=\"last_name\"\n                        placeholder=\"Last Name\"\n                        value={updateUser?.last_name ?? \"\"}\n                        invalid={!!error?.data?.last_name}\n                        onChange={(e)=>handleInput(e)}\n                    />\n                    <FormFeedback>{error?.data?.last_name}</FormFeedback>\n                </FormGroup>\n                <FormGroup>\n                    <Label htmlFor=\"email\">Email</Label>\n                    <Input\n                        type=\"email\"\n                        name=\"email\"\n                        placeholder=\"Enter Your Email\"\n                        value={updateUser?.email ?? \"\"}\n                        invalid={!!error?.data?.email}\n                        onChange={(e)=>handleInput(e)}\n                    />\n                    <FormFeedback>{error?.data?.email}</FormFeedback>\n                </FormGroup>\n\n                <FormGroup>\n                    <Label htmlFor=\"location\">Location</Label>\n                    <PlacesAutocomplete handleLocations={handleLocations} address={user?.user?.location}/>\n                    <FormFeedback>{error?.data?.location}</FormFeedback>\n                </FormGroup>\n                <FormGroup className=\"profile-bottom-btn \">\n                    <Button type=\"submit\" className=\"save-btn\">Save Changes</Button>\n                </FormGroup>\n            </Form>\n        </>\n    )\n}\nexport default UpdateProfile;","const getCity = ( addressArray ) => {\n    let city = '';\n    for( let i = 0; i < addressArray.length; i++ ) {\n        if ( addressArray[ i ].types[0] && 'administrative_area_level_2' === addressArray[ i ].types[0] ) {\n            city = addressArray[ i ].long_name;\n            return city;\n        }\n    }\n};\n\nexport default getCity;\n\nexport const getState = ( addressArray ) => {\n    let state = '';\n    for( let i = 0; i < addressArray.length; i++ ) {\n        for( let i = 0; i < addressArray.length; i++ ) {\n            if ( addressArray[ i ].types[0] && 'administrative_area_level_1' === addressArray[ i ].types[0] ) {\n                state = addressArray[ i ].long_name;\n                return state;\n            }\n        }\n    }\n};\n\nexport const getArea = ( addressArray ) => {\n    let area = '';\n    for( let i = 0; i < addressArray.length; i++ ) {\n        if ( addressArray[ i ].types[0]  ) {\n            for ( let j = 0; j < addressArray[ i ].types.length; j++ ) {\n                if ( 'sublocality_level_1' === addressArray[ i ].types[j] || 'locality' === addressArray[ i ].types[j] || 'colloquial_area' === addressArray[ i ].types[j] ) {\n                    area = addressArray[ i ].long_name;\n                    return area;\n                }\n            }\n        }\n    }\n};\n\nexport const getPostalCode = ( addressArray ) => {\n    let postalCode = '';\n    for( let i = 0; i < addressArray.length; i++ ) {\n        for( let i = 0; i < addressArray.length; i++ ) {\n            if ( addressArray[ i ].types[0] && '\"postal_code\"' === addressArray[ i ].types[0] ) {\n                postalCode['long_name'] = addressArray[ i ].long_name;\n                \n                return postalCode;\n            }\n        }\n    }\n};\n\nexport const getCountry = ( addressArray ) => {\n    let country = [];\n    for( let i = 0; i < addressArray.length; i++ ) {\n        for( let i = 0; i < addressArray.length; i++ ) {\n            if ( addressArray[ i ].types[0] && 'country' === addressArray[ i ].types[0] ) {\n                country['long_name'] = addressArray[ i ].long_name;\n                country['short_name'] = addressArray[ i ].short_name;\n                return country;\n            }\n        }\n    }\n};\n\nexport const getCategoryImage = (key) => {\n    return `/assets/images/category/${key.toLowerCase().replaceAll(\" \", \"\")}.png`;\n}","/* eslint-disable no-undef */\nimport React from \"react\";\nimport PlacesAutocomplete from \"react-places-autocomplete\";\nimport { Input,FormFeedback } from \"reactstrap\";\nimport Loader from \"../components/Shared/Loader\";\n\nimport getCity, { getState , getCountry} from '../helpers';\n\n\nclass LocationSearchInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { address: this.props.address};\n  }\n  \n  handleChange = address => {\n    this.setState({ address });\n  };\n\n  handleSelect = (address,placeId,suggestion) => {\n    const placesService = new google.maps.places.PlacesService(\n      document.createElement(\"div\")\n    );\n    let place;\n    this.address = \"\";\n    placesService.getDetails({ placeId: placeId }, results => {\n      place = results;\n      if (!place.geometry) {\n        return;\n      }\n      let city = getCity(place.address_components);\n      let state = getState(place.address_components);\n      let country = getCountry(place.address_components);\n\n       let Addresses = [city,state,country['long_name']].filter(x => x !== undefined && x !== null );\n       let addressArray = [];\n       addressArray['address'] = Addresses.join(', ');//place.formatted_address;\n       addressArray['lat'] = place.geometry.location.lat();\n       addressArray['lng'] = place.geometry.location.lng();\n       addressArray['placeId'] = placeId;\n       addressArray['countryCode'] = country['short_name'];\n       this.props.handleLocations(addressArray);\n       this.setState({ addressArray });\n    });\n  };\n\n  render() {    \n    return (\n      <PlacesAutocomplete\n        value={this.state.address ?? ''}\n        onChange={this.handleChange}\n        onSelect={this.handleSelect}\n      >\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n          <div className=\"position-relative setplaceholdersize\">\n            <Input\n              {...getInputProps({\n                placeholder: \"Enter name of your city or country of residence\",\n                className: \"location-search-input form-control\",\n              })}\n              value={this.state.address ?? ''}\n              invalid ={this.props.error?.data?.location}\n            />\n            <FormFeedback>{this.props.error?.data?.location}</FormFeedback>\n            <div className=\"autocomplete-dropdown-container\">\n              {loading && <Loader fixContent={false} />}\n              {suggestions.map((suggestion, index) => {\n                const className = suggestion.active\n                  ? \"suggestion-item suggestion-item--active\"\n                  : \"suggestion-item\";\n                const style = suggestion.active\n                  ? { backgroundColor: \"#ffebeb\",color: \"#990000\", cursor: \"pointer\" }\n                  : { backgroundColor: \"transparent\",color: \"#000\", cursor: \"pointer\" };\n                  const suggesionClick = () => {\n                    this.setState({address: suggestion.description });\n                  \n                  }\n                return (\n                  <div key={index}\n                    {...getSuggestionItemProps(suggestion, {\n                      className,\n                      style,\n                    })}\n                  >\n                    <span onClick={suggesionClick}>{suggestion.description}</span>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </PlacesAutocomplete>\n    );\n  }\n}\n\nexport default LocationSearchInput;\n"],"names":["props","user","setAuth","useAuth","useState","updateUser","setUpdatedUser","success","setSuccess","error","setError","handleInput","e","preventDefault","name","target","value","useEffect","handleProfileUpdate","axios","baseURL","id","first_name","last_name","email","location","place_uid","country_code","location_metadata","lat","lng","headers","token","access","withCredentials","then","prev","catch","console","log","response","status","variant","dismissible","onSubmit","htmlFor","type","onChange","invalid","data","placeholder","handleLocations","address","className","addressArray","i","length","types","long_name","LocationSearchInput","handleChange","setState","handleSelect","placeId","suggestion","place","placesService","google","maps","places","PlacesService","document","createElement","getDetails","results","geometry","city","getCity","address_components","state","getState","country","short_name","getCountry","Addresses","filter","x","undefined","join","this","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","Loader","fixContent","map","index","active","style","backgroundColor","color","cursor","onClick","description","React"],"sourceRoot":""}