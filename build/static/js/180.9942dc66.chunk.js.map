{"version":3,"file":"static/js/180.9942dc66.chunk.js","mappings":"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","sources":["pages/Observation/ObservationListRow.jsx","pages/Observation/ObservationListView.jsx"],"sourcesContent":["import { Badge, CardSubtitle, CardTitle, FormGroup } from \"reactstrap\";\nimport { Icon } from \"@iconify/react\";\nimport moment from 'moment';\nimport {createRef, useEffect} from \"react\";\nimport CardImageCarousel from \"../../components/Shared/CardImageCarousel\";\n    import ReactCountryFlags from \"../../components/ReactCountryFlag\";\n\nconst ObservationListRow = (props) => {\n    const { cardItems, cardData, allChecked, setCheckedIds, index, getAllChecked, checkedIds, handleClick, loadMore} = props;\n    const childInput = createRef();\n\n    const setChecked = (id) => {\n        if(allChecked && loadMore){\n            return id;\n        }\n        else {\n            return !!(checkedIds.includes(id)) ;\n        }\n    }\n\n    const handleChecked = (e, id) => {\n        let checked = e.target.checked;\n        if(checked){\n            if(checkedIds.length > 0){\n                setCheckedIds([...checkedIds,id]);\n            }\n            else{\n                setCheckedIds([id]);\n            }\n        } else {\n            let ids = [...checkedIds];\n            ids = ids.filter((item,index)=> {\n                return item !== id;\n            })\n            setCheckedIds(ids);\n        }\n    }\n\n    useEffect(()=> {\n         getAllChecked(childInput.current);\n    }, [allChecked, loadMore]);\n\n    return (\n        <>\n            <th valign=\"middle\" className=\"check-box\">\n                <FormGroup check className=\"mb-0\">\n                    <input type=\"checkbox\"\n                           data-id={cardItems.id}\n                           id={cardItems.id}\n                           ref={childInput}\n                           name= {`is_other_${cardItems.id}`}\n                           className=\"me-0 form-check-input\"\n                           checked={setChecked(cardItems.id)}\n                           disabled={!!allChecked}\n                           onChange={(e) => handleChecked(e, cardItems.id)}\n                    />\n                </FormGroup>\n            </th>\n            <td valign=\"middle\" className=\"observationCard-box\">\n                <div className=\"h-100 position-relative\">\n                    { cardItems?.image_type === 3 && <div className=\"multiple-image_icon\"><Icon icon=\"codicon:list-filter\" color=\"black\" /></div>}\n                    {cardItems?.is_verified && <div className=\"verify-card\"><Icon icon=\"mdi:check-decagram\" color=\"#27ae60\" width=\"13\" height=\"13\" /></div>}\n                    { cardItems?.image_type === 3 ?\n                    <CardImageCarousel handleClick={handleClick} handleIndex={index} carouselData={cardItems?.images} />\n                    : <img\n                            alt=\"Card cap\"\n                            src={(cardData.compressed_image) ? cardData?.compressed_image : cardData?.image}\n                            className=\"img-fluid card-img\"\n                            onClick={(e) => {\n                                 handleClick(index);\n                            }}\n                        />\n                        }\n                </div>\n            </td>\n            <td valign=\"middle\" className=\"observationType-box\">\n                <div className=\"observation_type d-flex align-items-start justify-content-start flex-wrap flex-column\">\n                    {cardItems?.category_data?.map((item, index) => {\n                        let image = `/assets/images/category/${item?.name?.toLowerCase().replaceAll(\" \", \"\")}.png`;\n                        return (\n                            <div key={index} className=\"mb-2\">\n                                <i className=\"fst-normal rounded-circle me-2 d-inline-block\">\n                                    <img src={image} alt={item?.name} className=\"rounded-circle w-100 h-100\" />\n                                </i>\n                                <span>{item?.name}</span>\n                            </div>\n                        )\n                    })}\n                </div>\n            </td>\n            <td valign=\"middle\" className=\"location-box\">\n                <div className=\"observation_country\">\n                    <ReactCountryFlags country={cardData?.country_code} className=\"me-2\" />\n                    <span className=\"ms-1\">{cardData?.location}</span>\n                </div>\n            </td>\n            <td valign=\"middle\" className=\"date-time-box\">\n                <div className=\"card_desc\">\n                    <CardTitle className=\"font-bold\">{(cardData?.obs_date_time_as_per_utc) ? moment.utc(moment(cardData?.obs_date_time_as_per_utc).utc()).format(\"MMM DD, YYYY\") : (cardData?.obs_date) ? cardData?.obs_date : null }</CardTitle>\n                    <CardSubtitle className=\"d-flex align-items-center\">{(cardData?.obs_date_time_as_per_utc) ? moment.utc(moment(cardData?.obs_date_time_as_per_utc).utc()).format(\"hh:mm:ss A\"): (cardData?.obs_time) ? cardData?.obs_time : null} <Badge className=\"bg-black text-white ms-1\">{(cardData?.obs_date_time_as_per_utc)  ? 'UTC': (cardData?.obs_time) ?  \"UTC\" : ''}</Badge></CardSubtitle>\n                </div>\n            </td>\n            <td valign=\"middle\"><h6 className=\"mb-0 text-center\">{cardData?.azimuth}</h6></td>\n            <td valign=\"middle\"><h4 className=\"mb-0 location-value\">{parseFloat(cardData?.latitude).toFixed(1)}</h4></td>\n            <td valign=\"middle\"><h4 className=\"mb-0 location-value\">{parseFloat(cardData?.longitude).toFixed(1)}</h4></td>\n        </>\n    )\n}\nexport default ObservationListRow;","import \"../../assets/scss/component/observationList.scss\";\nimport {useState, useEffect} from \"react\";\nimport { FormGroup, Table } from \"reactstrap\";\nimport ObservationListRow from \"./ObservationListRow\";\nimport useObservationsData from \"../../hooks/useObservationsData\";\n\nconst ObservationListView = (props) => {\n    const { observationList, isObservationDetailModal, setObservationDetailModal, setSelectedObservationId } = props;\n    const [ allChecked, setAllChecked ] = useState(false);\n    const [ checkedIds, setCheckedIds ] = useState([]);\n\n    const {setObservationCSVId} = useObservationsData();\n\n    const handleObservationDetailModal = (id) => {\n        setObservationDetailModal(!isObservationDetailModal);\n        setSelectedObservationId(id);\n    };\n\n\n    const handleAllChecked = (e) => {\n        setAllChecked(e.target.checked);\n    }\n\n    const allCheckedItem = []\n\n    const getAllChecked = (selector) => {\n        let id = parseFloat(selector?.id);\n        return allCheckedItem.push(id);\n    }\n\n    useEffect(()=> {\n        if (allChecked) {\n            setCheckedIds(allCheckedItem)\n        }\n        else {\n            setCheckedIds([]);\n        }\n    }, [allChecked, observationList?.length]);\n\n\n\n\n    useEffect(()=> {\n        setObservationCSVId((prev) => {\n            return {\n                ...prev,\n                data: {\n                    observation: checkedIds\n                }\n            }\n        })\n    }, [checkedIds, setObservationCSVId])\n\n    return(\n        <>\n            <div className=\"table-responsive mb-4\">\n                <Table className=\"list-view\" borderless>\n                    <thead>\n                        <tr>\n                            <th valign=\"middle\" className=\"check-box\">\n                                <FormGroup className=\"mb-0\" check>\n                                    <input\n                                        type=\"checkbox\"\n                                        name=\"all_csv\"\n                                        className=\"me-0 form-check-input\"\n                                        onChange={(e) => handleAllChecked(e) } />\n                                </FormGroup>\n                            </th>\n                            <th valign=\"middle\">Observation</th>\n                            <th valign=\"middle\">Type</th>\n                            <th valign=\"middle\">Location</th>\n                            <th valign=\"middle\">Date/Time</th>\n                            <th valign=\"middle\" className=\"text-center\">Azimuth</th>\n                            <th valign=\"middle\">Lat</th>\n                            <th valign=\"middle\">Lon</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {observationList.length > 0 && observationList?.map((cardItems, index)=>{\n                            return(\n                                <tr key={index}>\n                                    <ObservationListRow\n                                        index={index}\n                                        cardItems={cardItems}\n                                        cardData={cardItems?.images[0]}\n                                        allChecked={allChecked}\n                                        setAllChecked={setAllChecked}\n                                        getAllChecked={getAllChecked}\n                                        setCheckedIds={setCheckedIds}\n                                        checkedIds={checkedIds}\n                                        loadMore={observationList?.length}\n                                        handleClick={handleObservationDetailModal}\n                                    />\n                                </tr>\n                            )\n                        })\n                        }\n                    </tbody>\n                </Table>\n            </div>\n        </>\n    )\n}\n\nexport default ObservationListView;"],"names":["props","id","cardItems","cardData","allChecked","setCheckedIds","index","getAllChecked","checkedIds","handleClick","loadMore","childInput","createRef","useEffect","current","valign","className","check","type","ref","name","checked","includes","disabled","onChange","e","target","length","ids","filter","item","handleChecked","image_type","icon","color","is_verified","width","height","CardImageCarousel","handleIndex","carouselData","images","alt","src","compressed_image","image","onClick","category_data","map","toLowerCase","replaceAll","ReactCountryFlag","country","country_code","location","obs_date_time_as_per_utc","moment","utc","format","obs_date","obs_time","azimuth","parseFloat","latitude","toFixed","longitude","observationList","isObservationDetailModal","setObservationDetailModal","setSelectedObservationId","useState","setAllChecked","setObservationCSVId","useObservationsData","handleObservationDetailModal","allCheckedItem","selector","push","prev","data","observation","borderless","handleAllChecked"],"sourceRoot":""}