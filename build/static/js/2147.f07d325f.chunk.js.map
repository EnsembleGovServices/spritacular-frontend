{"version":3,"file":"static/js/2147.f07d325f.chunk.js","mappings":"6LAyDA,UAtDkB,SAACA,GACf,IAAOC,EAAsFD,EAAtFC,QAASC,EAA6EF,EAA7EE,MAAOC,EAAsEH,EAAtEG,IAAvB,EAA6FH,EAAjEI,QAAAA,OAA5B,MAAsC,cAAtC,EAAqDC,EAAwCL,EAAxCK,YAAaC,EAA2BN,EAA3BM,SAAUC,EAAiBP,EAAjBO,cAC5E,GAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAAkBC,EAAAA,EAAAA,QAAO,OAQ/BC,EAAAA,EAAAA,YAAU,WALiB,IAACC,EAMxBJ,GAAW,GACPR,IAPoBY,EAQDH,EAAgBI,QAPhC,IAAIC,SAAQ,SAAAC,GACfH,EAAaI,OAASD,MAMsBE,MAAK,WAC7CT,GAAW,GACXH,GAAc,QAGvB,CAACL,IAOJ,OACI,+BACI,iBAAKkB,UAAU,iDAAiDC,MAN1D,CACVC,UAAW,QACXC,SAAU,UAIN,UACKd,IACG,gBAAKW,UAAU,eAAf,UACI,SAAC,IAAD,CAAUI,MAAO,EAAGC,OAAO,YAGnC,gBACIJ,MAAO,CACHK,MAAO,OACPC,WAAYvB,EACZwB,UAAW,QACXH,OAAQ,OACRH,UAAW,SAEfO,IAAK5B,EACLE,IAAKA,EACL2B,IAAKnB,EACLS,UAAS,UAAKd,EAAW,4CAA8C,0BACvEyB,QAAS1B,W,8FChB7B,UA3B0B,SAACL,GACvB,IAAOgC,EAAiEhC,EAAjEgC,aAAc3B,EAAmDL,EAAnDK,YAAa4B,EAAsCjC,EAAtCiC,YAAaC,EAAyBlC,EAAzBkC,OAAQ3B,EAAiBP,EAAjBO,cAEvD,OACI,+BACI,SAAC,KAAD,CAAQ4B,YAAY,EAAMC,QAAS,CAACC,EAAAA,IAApC,SACKL,EAAaM,OAAS,GAAKN,EAAaO,KAAI,SAACC,EAAMC,GAChD,OACI,SAAC,KAAD,WACI,SAAC,UAAD,CACIxC,QAAUiC,EAAD,OAAWM,QAAX,IAAWA,OAAX,EAAWA,EAAMtC,MAASsC,EAAKE,iBAAoBF,EAAKE,iBAA/B,OAAkDF,QAAlD,IAAkDA,OAAlD,EAAkDA,EAAMtC,MAC1FA,MAAQgC,EAAD,OAAWM,QAAX,IAAWA,OAAX,EAAWA,EAAMtC,MAASsC,EAAKE,iBAAoBF,EAAKE,iBAA/B,OAAkDF,QAAlD,IAAkDA,OAAlD,EAAkDA,EAAMtC,MACxFG,YAAa,SAACsC,GACVtC,EAAcA,EAAY4B,GAAeU,EAAEC,kBAE/CrC,cAAeA,EACfJ,IAAG,OAAEqC,QAAF,IAAEA,OAAF,EAAEA,EAAMK,QARDJ,Y","sources":["components/Common/BlurImage.jsx","components/Shared/CardImageCarousel.jsx"],"sourcesContent":["import {useEffect, useRef, useState} from 'react';\nimport Skeleton from 'react-loading-skeleton'\n\nconst BlurImage = (props) => {\n    const {preview, image, alt, bgColor = 'transparent', handleClick, homepage, loaderLoading} = props;\n    const [loading, setLoading] = useState(true);\n    const loadingImageRef = useRef(null);\n\n\n    const waitForImageToLoad = (imageElement) => {\n        return new Promise(resolve => {\n            imageElement.onload = resolve\n        })\n    }\n    useEffect(() => {\n        setLoading(true);\n        if (image) {\n            waitForImageToLoad(loadingImageRef.current).then(() => {\n                setLoading(false);\n                loaderLoading(false);\n            });\n        }\n    }, [image]);\n\n\n    const style = {\n        minHeight: \"217px\",\n        overflow: \"hidden\"\n    }\n    return (\n        <>\n            <div className=\"shadow-sm drop-shadow-lg h-100 loader-wrap-img\" style={style}>\n                {loading &&\n                    <div className=\"loadingImage\">\n                        <Skeleton count={1} height=\"100%\"/>\n                    </div>\n                }\n                <img\n                    style={{\n                        width: '100%',\n                        background: bgColor,\n                        objectFit: 'cover',\n                        height: '100%',\n                        minHeight: '217px'\n                    }}\n                    src={preview}\n                    alt={alt}\n                    ref={loadingImageRef}\n                    className={`${homepage ? 'img-fluid isLoadingImg card-img no-cursor' : 'isLoadingImg img-fluid'}`}\n                    onClick={handleClick}\n                />\n            </div>\n        </>\n\n    );\n};\n\nexport default BlurImage;","import {Swiper, SwiperSlide} from \"swiper/react\";\nimport {Navigation} from \"swiper\";\nimport 'swiper/css';\nimport 'swiper/css/navigation';\nimport BlurImage from \"../Common/BlurImage\";\n\nconst CardImageCarousel = (props) => {\n    const {carouselData, handleClick, handleIndex, detail, loaderLoading} = props;\n\n    return (\n        <>\n            <Swiper navigation={true} modules={[Navigation]}>\n                {carouselData.length > 0 && carouselData.map((item, id) => {\n                    return (\n                        <SwiperSlide key={id}>\n                            <BlurImage\n                                preview={(detail) ? item?.image : (item.compressed_image) ? item.compressed_image : item?.image}\n                                image={(detail) ? item?.image : (item.compressed_image) ? item.compressed_image : item?.image}\n                                handleClick={(e) => {\n                                    handleClick ? handleClick(handleIndex) : e.preventDefault()\n                                }}\n                                loaderLoading={loaderLoading}\n                                alt={item?.name}\n                            >\n                            </BlurImage>\n                        </SwiperSlide>\n                    )\n                })\n                }\n            </Swiper>\n        </>\n    )\n}\nexport default CardImageCarousel;"],"names":["props","preview","image","alt","bgColor","handleClick","homepage","loaderLoading","useState","loading","setLoading","loadingImageRef","useRef","useEffect","imageElement","current","Promise","resolve","onload","then","className","style","minHeight","overflow","count","height","width","background","objectFit","src","ref","onClick","carouselData","handleIndex","detail","navigation","modules","Navigation","length","map","item","id","compressed_image","e","preventDefault","name"],"sourceRoot":""}