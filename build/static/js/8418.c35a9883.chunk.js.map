{"version":3,"file":"static/js/8418.c35a9883.chunk.js","mappings":"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","sources":["components/Shared/FilterSelectMenu.jsx"],"sourcesContent":["import \"../../assets/scss/component/myObservation.scss\";\nimport axiosPrivate from \"../../api/axios\";\nimport moment from \"moment/moment\";\nimport useAuth from \"../../hooks/useAuth\";\nimport { observationStatus, countries } from \"../../helpers/timezone\";\nimport useObservationsData from \"../../hooks/useObservationsData\";\nimport { Button, Col, Container, FormGroup, Input, Label, Row,Dropdown, DropdownItem, DropdownMenu, DropdownToggle } from \"reactstrap\";\nimport { Icon } from \"@iconify/react\";\nimport { Link } from \"react-router-dom\";\nimport Images from './../../static/images';\nimport {baseURL, routeUrls} from \"../../helpers/url\";\n\nconst FilterSelectMenu = (props) =>{\n    const { filterShow, handleFilterOpen, galleryFilter,isFilterOpen,setIsFilterOpen,selectedFilterHorizontal,setSelectedFilterHorizontal,searchCountry,findCountry,handleFilterValue,dashboardFilter, handleListView, handleGridView, listView, gridView } =  props;\n    const { auth } = useAuth();\n    const { observationCSVId , setObservationCSVId } = useObservationsData();\n    const CSVID = observationCSVId?.data?.observation;\n\n    const handleCSVDownload = (id) => {\n        downloadSelectedDataAsCSV(id);\n    }\n    const downloadSelectedDataAsCSV = (data) => {\n        let name = moment.now();\n        let downloadUrl = baseURL.api+'/observation/get_observation_csv/';\n        axiosPrivate.post(downloadUrl, {\n            observation_ids: data\n        } , {\n            responseType: 'blob',\n            headers:{\n                'Content-type': 'application/json',\n                'Authorization': `Bearer ${auth?.token?.access}`,\n            },\n        }).then(response => {\n            setObservationCSVId((prev) => {\n                return {\n                    ...prev,\n                    error: {\n                        status: '',\n                        message: '',\n                        data: ''\n                    }\n                }\n            })\n            const downloadUrl = window.URL.createObjectURL(new Blob([response.data]));\n            const link = document.createElement('a');\n            link.href = downloadUrl;\n            link.setAttribute('download', `${name}.csv`);\n            document.body.appendChild(link);\n            link.click();\n            link.remove();\n        }).catch(error => {\n            setObservationCSVId((prev) => {\n                return {\n                    ...prev,\n                    error: {\n                        status: error.response.status,\n                        message: error.response.statusText,\n                        data: error.response.data\n                    }\n                }\n            })\n        })\n    }\n\n    return (\n        <>\n            <div className=\"observation-filter_wrapper\">\n                <Container>\n                    <div className={`d-flex ${auth?.user?.is_user ? 'py-3' : ''}`}>\n                        <div>\n                            {dashboardFilter && <FormGroup className={`filter-btn m-0 d-flex align-items-center h-100 form-group p-0 ${filterShow ? 'filter-open' : ''}`}>\n                                <Button onClick={()=>handleFilterOpen()} className=\"border-0 rounded-0 bg-transparent text-black shadow-none text-start w-auto w-md-100 d-flex align-items-center\">\n                                    <img src={Images.Filter} alt=\"Filter\" /> {filterShow && <span className=\"ms-0 ms-md-3\" >Advanced Filter</span> }\n                                </Button>\n                            </FormGroup>}\n                            \n                        </div>\n                        {\n                            auth?.user &&\n                        \n                        <div className='flex-fill' >\n                            <Row>\n                                <Col sm={12} lg={8} className='order-2 order-lg-1' >\n                                    { galleryFilter && !auth?.user?.is_user &&\n                                        <FormGroup className=\"m-0 d-inline-block form-group country-menu\">\n                                            <Label className=\"text-uppercase px-2 px-xl-3\" htmlFor=\"Country\">Country</Label>\n                                            <Dropdown className=\"dropdown-with-search\" toggle={() => setIsFilterOpen({...isFilterOpen,isCountryOpen:!isFilterOpen.isCountryOpen})} isOpen={isFilterOpen.isCountryOpen} >\n                                                <DropdownToggle className=\"px-2 px-xl-3 shadow-none border-0 text-black fw-normal text-start d-flex justify-content-between align-items-center w-100\">\n                                                    <span className=\"text-truncate\">{(selectedFilterHorizontal.country?.name !== '' ? selectedFilterHorizontal.country?.name: 'All countries' )}</span>\n\n                                                    <Icon icon=\"fe:arrow-down\" className=\"down-arrow ms-1\"/>\n                                                </DropdownToggle>\n                                                <DropdownMenu className=\"py-0 shadow\">\n                                                    <DropdownItem header className=\"mb-0 position-sticky start-0 top-0 end-0 p-2 bg-white\"><Input type=\"text\" className=\"p-2\"  placeholder=\"Search Country\" onChange={(e)=> findCountry(e)} /></DropdownItem>\n                                                    {countries?.filter(item => {\n                                                        return item.name.toLowerCase().indexOf(searchCountry.toLowerCase()) !== -1;\n                                                    }).map((item, index) => {\n                                                        return <DropdownItem  name=\"timezone\" className=\"px-2 fw-normal\" key={index} value={item.name} onClick={(e) => {setSelectedFilterHorizontal({...selectedFilterHorizontal,country:item}); handleFilterValue(item,'country');}}>{item.name}</DropdownItem>\n                                                    })}\n                                                </DropdownMenu>\n                                            </Dropdown>\n                                        </FormGroup> }\n                                    {galleryFilter && !auth?.user?.is_user &&\n                                        <FormGroup className=\"m-0 d-inline-block form-group type-menu\">\n                                            <Label className=\"text-uppercase px-2 px-xl-3\" htmlFor=\"TransientLuminousEvent\">Transient Luminous Event</Label>\n                                            <Dropdown className=\"dropdown-with-search\" toggle={() => setIsFilterOpen({...isFilterOpen,isTypeOpen:!isFilterOpen.isTypeOpen})} isOpen={isFilterOpen.isTypeOpen} >\n                                                <DropdownToggle className=\"px-2 px-xl-3 shadow-none border-0 text-black fw-normal text-start d-flex justify-content-between align-items-center w-100\">\n                                                    <span className=\"text-truncate\">{(selectedFilterHorizontal.type) ? selectedFilterHorizontal.type: 'All types' }</span>\n                                                    <Icon icon=\"fe:arrow-down\" className=\"down-arrow ms-1\"/>\n                                                </DropdownToggle>\n                                                <DropdownMenu className=\"py-0 shadow\">\n                                                    {auth.categoryList !== undefined  && auth?.categoryList?.map((item, index) => {\n                                                        return <DropdownItem  name=\"timezone\" className=\"px-2 fw-normal\" key={index} value ={item.name} onClick={(e) => {setSelectedFilterHorizontal({...selectedFilterHorizontal,type:e.target.value}); handleFilterValue(e.target.value,'category');}} >{item.name}</DropdownItem>\n                                                    })}\n                                                </DropdownMenu>\n                                            </Dropdown>\n                                        </FormGroup>  }\n                                    {galleryFilter && !auth?.user?.is_user &&\n                                        <FormGroup className=\"m-0 d-inline-block form-group status-menu\">\n                                            <Label className=\"text-uppercase px-2 px-xl-3\" htmlFor=\"ObservationStatus\">Observation Status</Label>\n                                            <Dropdown className=\"dropdown-with-search\" toggle={() => setIsFilterOpen({...isFilterOpen,isStatusOpen:!isFilterOpen.isStatusOpen})} isOpen={isFilterOpen.isStatusOpen} >\n                                                <DropdownToggle className=\"px-2 px-xl-3 shadow-none border-0 text-black fw-normal text-start d-flex justify-content-between align-items-center w-100\">\n                                                    <span className=\"text-truncate\">{(selectedFilterHorizontal.status) ? selectedFilterHorizontal.status.charAt(0).toUpperCase() + selectedFilterHorizontal.status.slice(1): 'All status'}</span>\n                                                    <Icon icon=\"fe:arrow-down\" className=\"down-arrow ms-1\"/>\n                                                </DropdownToggle>\n                                                <DropdownMenu className=\"py-0 shadow\">\n\n                                                    {observationStatus?.map((item, index) => {\n                                                        return <DropdownItem  name=\"timezone\" className=\"px-2 fw-normal\" key={index} value={item} onClick={(e) => {setSelectedFilterHorizontal({...selectedFilterHorizontal,status:e.target.value.toLowerCase()}); handleFilterValue(e.target.value,'status');}} >{item}</DropdownItem>\n                                                    })}\n                                                </DropdownMenu>\n                                            </Dropdown>\n                                        </FormGroup> }\n                                </Col>\n                                <Col sm={12} lg={4} className=\"text-end order-1 order-lg-2 my-2 my-lg-0\">\n                                    <div className=\"d-flex align-items-center justify-content-end h-100 \">\n                                        {dashboardFilter &&\n                                            <>\n                                                <div className=\"view-switch-wrap\">\n                                                    <Button onClick={()=> handleGridView()} className=\"bg-transparent rounded-0 border-0 p-0 shadow-none\"><Icon icon=\"mdi:view-grid-outline\" color={gridView ? '#900' : '#000'} /></Button>\n                                                    <Button onClick={()=> handleListView()} className=\"bg-transparent rounded-0 border-0 p-0 shadow-none ms-2 ms-xl-3 \"><Icon icon=\"ic:sharp-list\" color={listView ? '#900' : '#000'} /></Button>\n                                                </div>\n                                                <div className=\"border-start ps-2 ms-2 ps-xl-3 ms-xl-3\">\n                                                    <button\n                                                        className={`btn btn-secondary shadow-none ${CSVID?.length <= 0 || CSVID === undefined ? 'disabled' : ''}`}\n                                                        disabled={CSVID?.length <= 0 || CSVID === undefined}\n                                                        onClick={()=> handleCSVDownload(CSVID)}\n                                                    >\n                                                        <Icon icon=\"heroicons-outline:download\"  width=\"25\" height=\"22\" />\n                                                        Download CSV\n                                                    </button>\n                                                </div>\n                                            </>\n                                        }\n                                        {!dashboardFilter && <Link to={'/'+routeUrls.observationsAdd} className=\"btn btn-secondary shadow-none mt-2 mt-md-0\">\n                                            <Icon icon=\"heroicons-outline:upload\"  width=\"16\" height=\"20\" /> Upload Observation\n                                        </Link>}\n                                    </div>\n                                </Col>\n                            </Row>\n                        </div>\n                        }\n                    </div>\n                </Container>\n            </div>\n        </>\n    )\n}\nexport default FilterSelectMenu;"],"names":["props","filterShow","handleFilterOpen","galleryFilter","isFilterOpen","setIsFilterOpen","selectedFilterHorizontal","setSelectedFilterHorizontal","searchCountry","findCountry","handleFilterValue","dashboardFilter","handleListView","handleGridView","listView","gridView","auth","useAuth","useObservationsData","observationCSVId","setObservationCSVId","CSVID","data","observation","downloadSelectedDataAsCSV","name","moment","downloadUrl","baseURL","axiosPrivate","observation_ids","responseType","headers","token","access","then","response","prev","error","status","message","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","remove","catch","statusText","className","user","is_user","onClick","src","Images","alt","sm","lg","htmlFor","toggle","isCountryOpen","isOpen","country","icon","header","type","placeholder","onChange","e","countries","item","toLowerCase","indexOf","map","index","value","isTypeOpen","undefined","categoryList","target","isStatusOpen","charAt","toUpperCase","slice","observationStatus","color","length","disabled","width","height","to","routeUrls"],"sourceRoot":""}