{"version":3,"file":"static/js/3465.f0d354c1.chunk.js","mappings":"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","sources":["components/Common/BlurImage.jsx","components/ReactCountryFlag.jsx","components/Shared/CardImageCarousel.jsx","components/Shared/ObservationCard.jsx","pages/Observation/ObservationListPage.jsx"],"sourcesContent":["import {useEffect, useRef, useState} from 'react';\nimport Skeleton from 'react-loading-skeleton'\n\nconst BlurImage = (props) => {\n    const {preview, image, alt, bgColor = 'transparent', handleClick, homepage, loaderLoading} = props;\n    const [loading, setLoading] = useState(true);\n    const loadingImageRef = useRef(null);\n\n\n    const waitForImageToLoad = (imageElement) => {\n        return new Promise(resolve => {\n            imageElement.onload = resolve\n        })\n    }\n    useEffect(() => {\n        setLoading(true);\n        if (image) {\n            waitForImageToLoad(loadingImageRef.current).then(() => {\n                setLoading(false);\n                loaderLoading(false);\n            });\n        }\n    }, [image]);\n\n\n    const style = {\n        minHeight: \"217px\",\n        overflow: \"hidden\"\n    }\n    return (\n        <>\n            <div className=\"shadow-sm drop-shadow-lg h-100 loader-wrap-img\" style={style}>\n                {loading &&\n                    <div className=\"loadingImage\">\n                        <Skeleton count={1} height=\"100%\"/>\n                    </div>\n                }\n                <img\n                    style={{\n                        width: '100%',\n                        background: bgColor,\n                        objectFit: 'cover',\n                        height: '100%',\n                        minHeight: '217px'\n                    }}\n                    src={preview}\n                    alt={alt}\n                    ref={loadingImageRef}\n                    className={`${homepage ? 'img-fluid isLoadingImg card-img no-cursor' : 'isLoadingImg img-fluid'}`}\n                    onClick={handleClick}\n                />\n            </div>\n        </>\n\n    );\n};\n\nexport default BlurImage;","import ReactCountryFlag from \"react-country-flag\";\nconst ReactCountryFlags = ({country}) => {\n    return(\n\n        <ReactCountryFlag\n            countryCode={country}\n            svg\n            style={{\n                width: '1.5em',\n                height: '1.5em',\n            }}\n            title={country}\n        />\n    );\n}\nexport default ReactCountryFlags;","import {Swiper, SwiperSlide} from \"swiper/react\";\nimport {Navigation} from \"swiper\";\nimport 'swiper/css';\nimport 'swiper/css/navigation';\nimport BlurImage from \"../Common/BlurImage\";\n\nconst CardImageCarousel = (props) => {\n    const {carouselData, handleClick, handleIndex, detail, loaderLoading} = props;\n\n    return (\n        <>\n            <Swiper navigation={true} modules={[Navigation]}>\n                {carouselData.length > 0 && carouselData.map((item, id) => {\n                    return (\n                        <SwiperSlide key={id}>\n                            <BlurImage\n                                preview={(detail) ? item?.image : (item.compressed_image) ? item.compressed_image : item?.image}\n                                image={(detail) ? item?.image : (item.compressed_image) ? item.compressed_image : item?.image}\n                                handleClick={(e) => {\n                                    handleClick ? handleClick(handleIndex) : e.preventDefault()\n                                }}\n                                loaderLoading={loaderLoading}\n                                alt={item?.name}\n                            >\n                            </BlurImage>\n                        </SwiperSlide>\n                    )\n                })\n                }\n            </Swiper>\n        </>\n    )\n}\nexport default CardImageCarousel;","import \"../../assets/scss/component/observationCard.scss\";\nimport Images from \"../../static/images\";\nimport {Card, CardBody, CardTitle, CardSubtitle, Row, Col, Badge, CardFooter, Button} from \"reactstrap\";\nimport moment from \"moment\";\nimport {Icon} from \"@iconify/react\";\nimport ReactCountryFlags from \"../ReactCountryFlag\";\nimport {getdirectionDegree} from \"../../helpers/observation\";\nimport CardImageCarousel from \"./CardImageCarousel\";\nimport Tippy from \"@tippyjs/react\";\nimport BlurImage from \"../Common/BlurImage\";\nimport Skeleton from \"react-loading-skeleton\";\nimport {useState} from \"react\";\nimport {cdn} from \"../../helpers/url\";\n\nconst ObservationCard = (props) => {\n    const {cardItems, handleClick, userProfile, cardData, index, activeType, homepage} = props;\n    const [loaderLoading, setLoaderLoading] = useState(true);\n\n    const handleImageClick = () => {\n        return homepage ? null : userProfile && handleClick(index);\n    }\n\n    const handleLoaderLoading = (state) => {\n        setLoaderLoading(state);\n    }\n\n    return (\n        <Card\n            className={`${homepage ? 'observation_card overflow-hidden homepage_observation_card' : 'observation_card overflow-hidden'}`}>\n            <div\n                className=\"text-black card-link d-inline-block shadow-none bg-transparent rounded-0 border-0 p-0 text-start\">\n                {!userProfile && (\n                    <div className=\"observation_country\">\n                        <Badge className=\"bg-black text-white\">\n                            <ReactCountryFlags country={cardData?.country_code}/>\n                            {cardData?.location}\n                        </Badge>\n                    </div>\n                )}\n                {userProfile && cardItems?.image_type === 3 && (\n                    <div className=\"multiple-image_icon\">\n                        <Icon icon=\"codicon:list-filter\" color=\"black\"/>\n                    </div>\n                )}\n                {userProfile && activeType === \"draft\" && (\n                    <Button className=\"multiple-image_icon border-0 edit-icon\">\n                        <Icon icon=\"eva:edit-2-outline\"/>\n                    </Button>\n                )}\n                {cardItems?.is_verified && (\n                    <div className=\"verify-card\">\n                        <Icon icon=\"mdi:check-decagram\" color=\"#27ae60\" width=\"13\" height=\"13\"/>\n                    </div>\n                )}\n                {cardItems?.image_type === 3\n                    ? <CardImageCarousel carouselData={cardItems?.images} handleClick={handleClick}\n                                         handleIndex={index}\n                                         loaderLoading={handleLoaderLoading}\n                    />\n                    : <BlurImage\n                        preview={(cardData?.compressed_image) ? cardData?.compressed_image : cardData?.image}\n                        image={(cardData?.compressed_image) ? cardData?.compressed_image : cardData?.image}\n                        handleClick={handleImageClick}\n                        homepage={homepage}\n                        loaderLoading={handleLoaderLoading}\n                    >\n                    </BlurImage>\n                }\n                <CardBody className=\"position-relative observation-card_body\">\n                    <div className=\"observation_type\">\n                        {cardItems?.category_data?.length > 0 &&\n                            cardItems?.category_data?.map((item, index) => {\n                                let image = `${cdn.url}/category/${item?.name?.toLowerCase().replaceAll(\" \", \"\")}.png`;\n                                return (\n                                    <div className=\"cat-loader\" key={index}>\n                                        {loaderLoading &&\n                                            <div className=\"skeleton\">\n                                                <Skeleton\n                                                    circle\n                                                    width={32}\n                                                    height={32}\n                                                />\n                                            </div>\n                                        }\n                                        <i className=\"rounded-circle bg-white me-1\">\n                                            <Tippy animation=\"perspective\" content={item?.name}>\n                                                <img src={image} alt={item?.name} className=\"rounded-circle\"/>\n                                            </Tippy>\n                                        </i>\n                                    </div>\n                                );\n                            })\n                        }\n                    </div>\n                    {loaderLoading &&\n                        <div className=\"body-loader\">\n                            <div className=\"skeleton\">\n                                <Skeleton count={3} height={15}/>\n                            </div>\n                        </div>\n                    }\n                    <Row className=\"card-details\">\n                        <Col xs={6} lg={6} className=\"\">\n                            <div className=\"card_desc\">\n                                <CardTitle className=\"font-bold\">\n                                    {cardData?.obs_date_time_as_per_utc ? moment.utc(moment(cardData?.obs_date_time_as_per_utc).utc()).format(\"MMM DD, YYYY\") : cardData?.obs_date ? cardData?.obs_date : null}\n                                </CardTitle>\n                                <CardSubtitle>\n                                    {cardData?.obs_date_time_as_per_utc ? moment.utc(moment(cardData?.obs_date_time_as_per_utc).utc()).format(\"hh:mm:ss A\") : cardData?.obs_time ? cardData?.obs_time : null}{\" \"}\n                                    <Badge\n                                        className=\"bg-black text-white p-1\">{cardData?.obs_date_time_as_per_utc ? \"UTC\" : cardData?.obs_time ? \"UTC\" : \"\"}</Badge>\n                                </CardSubtitle>\n                            </div>\n                        </Col>\n                        <Col xs={6} lg={6} className=\" justify-content-end d-flex\">\n                            <div className=\"d-flex card-user_details align-items-center overflow-hidden\">\n                                <Tippy animation=\"perspective\"\n                                       content={userProfile ? userProfile?.first_name + \" \" + userProfile?.last_name : cardData.username}>\n                                    <h6 className=\"pe-2 mb-0 text-truncate\">{userProfile ? userProfile?.first_name + \" \" + userProfile?.last_name : cardData.username}</h6>\n                                </Tippy>\n                                <i className=\"profile-icon rounded-circle\">\n                                    <img\n                                        src={userProfile?.profile_image ? userProfile?.profile_image : Images.DefaultProfile}\n                                        width=\"100%\" height=\"100%\" alt=\"Profile\" className=\"rounded-circle\"/>\n                                </i>\n                            </div>\n                        </Col>\n                    </Row>\n                </CardBody>\n\n                {userProfile && !homepage &&\n                    <CardFooter className=\"position-relative\">\n                        {loaderLoading &&\n                            <div className=\"footer-loader\">\n                                <div className=\"skeleton\">\n                                    <Skeleton count={1} height={22}/>\n                                </div>\n                            </div>\n                        }\n                        <div className=\"location-details\">\n                            <h6 className=\"mb-0\">{cardData?.location}</h6>\n                        </div>\n                        <div className=\"direction-details\">\n                            <div className=\"card-user_location\"\n                                 style={{\"--card-location-angle\": `${getdirectionDegree(cardData?.azimuth)}deg`}}>\n                                <h6 className=\"me-1 mb-0\">\n                                    {cardData?.azimuth}\n                                    {Number(cardData?.azimuth) ? \"°\" : \"\"}\n                                </h6>\n                                {cardData?.azimuth &&\n                                    <span\n                                        className=\"card-direction rounded-circle position-relative d-flex justify-content-center align-items-start\">\n                                        <span className=\"direction-dot\"/>\n                                    </span>}\n                            </div>\n                        </div>\n                    </CardFooter>\n                }\n            </div>\n        </Card>\n    );\n};\n\nexport default ObservationCard;\n","import ObservationCard from \"../../components/Shared/ObservationCard\";\nimport Masonry from 'react-masonry-component';\n\nconst ObservationListPage = (props) => {\n    const {\n        observationList,\n        isObservationDetailModal,\n        setSelectedObservationId,\n        setObservationDetailModal,\n        activeType\n    } = props;\n\n    // Masonry Options\n    // const masonryOptions = masonryConfig('.photo-list', 1, 0, false, 10);\n\n    // Masonry Options\n    const masonryOptions = {\n        columnWidth: 1,\n        gutter: 0,\n        itemSelector: \".photo-item\",\n        fitWidth: false,\n        transitionDuration: 600,\n    };\n\n    const handleObservationDetailModal = (id) => {\n        setObservationDetailModal(!isObservationDetailModal);\n        setSelectedObservationId(id);\n    };\n    return (\n        <Masonry\n            className={\"photo-list p-0\"}\n            options={masonryOptions}\n            enableResizableChildren={true}\n        >\n            {observationList && observationList?.map((cardItems, index) => {\n                return (\n                    <div key={index} className=\"photo-item mb-4\">\n                        <ObservationCard cardItems={cardItems} cardData={cardItems?.images?.[0]} index={index}\n                                         userProfile={cardItems.user_data} handleClick={handleObservationDetailModal}\n                                         activeType={activeType}/>\n                    </div>\n                )\n            })\n            }\n        </Masonry>\n    )\n}\nexport default ObservationListPage;"],"names":["props","preview","image","alt","bgColor","handleClick","homepage","loaderLoading","useState","loading","setLoading","loadingImageRef","useRef","useEffect","imageElement","current","Promise","resolve","onload","then","className","style","minHeight","overflow","count","height","width","background","objectFit","src","ref","onClick","country","countryCode","svg","title","carouselData","handleIndex","detail","navigation","modules","Navigation","length","map","item","id","compressed_image","e","preventDefault","name","cardItems","userProfile","cardData","index","activeType","setLoaderLoading","handleLoaderLoading","state","ReactCountryFlag","country_code","location","image_type","icon","color","is_verified","CardImageCarousel","images","BlurImage","category_data","cdn","toLowerCase","replaceAll","circle","animation","content","xs","lg","obs_date_time_as_per_utc","moment","utc","format","obs_date","obs_time","first_name","last_name","username","profile_image","Images","getdirectionDegree","azimuth","Number","observationList","isObservationDetailModal","setSelectedObservationId","setObservationDetailModal","handleObservationDetailModal","options","columnWidth","gutter","itemSelector","fitWidth","transitionDuration","enableResizableChildren","user_data"],"sourceRoot":""}