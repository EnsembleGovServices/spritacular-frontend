{"version":3,"file":"static/js/7355.0537f701.chunk.js","mappings":"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","sources":["components/Shared/EquipmentForm.jsx","components/Shared/UploadImageUI.jsx","helpers/observation.js","hooks/useObservations.js","config.jsx","components/MapWrapper.jsx","components/Observation/ObservationCategory.jsx","components/Observation/ObservationLocation.jsx","components/Observation/ObservationUpdateUploadedImages.jsx","components/Observation/ObservationUploadedImg.jsx","components/Observation/ObservationUploadImg.jsx","components/Observation/ObservationImages.jsx","components/Observation/ObservationProgress.jsx","components/Observation/ImagePreview.jsx","components/Popup/DeleteItemConfirmationPopup.jsx","components/Observation/ObservationAfterImageUpload.jsx","components/Observation/EquipmentDetailsForm.jsx","pages/Observation/AddObservation.jsx","pages/Observation/Observations.jsx"],"sourcesContent":["import {FormGroup, Input, Col} from \"reactstrap\";\n\nconst EquipmentForm = (props) => {\n    const {handleInput1, updateSetting, error} = props;\n    return(\n        <>\n         <Col md=\"12\">\n            <FormGroup>\n                <label>Camera Type<span className=\"required\">Required</span></label>\n                <Input  \n                type=\"text\"\n                name=\"camera_type\"\n                placeholder=\"Canon\"\n                // required\n                value={updateSetting?.camera_type} \n                onChange={(e)=>handleInput1(e)} />\n                <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b>Canon</span>\n                {error?.data?.camera_type &&\n                    <span className=\"text-danger small\">{error?.data?.camera_type}</span>\n                }\n            </FormGroup>\n            <div className=\"border-line\" />\n            </Col>\n            <Col md=\"12\">\n            <FormGroup>\n                <h6>Lens Information</h6>\n            </FormGroup>\n            </Col>\n            <Col md=\"6\">\n            <FormGroup>\n                <label>Focal Length<span className=\"required\">Required</span></label>\n                <Input\n                type=\"text\"\n                maxLength={10}\n                name=\"focal_length\"\n                value={updateSetting?.focal_length}\n                placeholder=\"35 mm\"\n                // required\n                onChange={(e)=>handleInput1(e)}\n                />\n                <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b>35 mm</span>\n                {error?.data?.focal_length &&\n                    <span className=\"text-danger small\">{error?.data?.focal_length}</span>\n                }\n            </FormGroup>\n            </Col>\n            <Col md=\"6\">\n            <FormGroup>\n                <label>Aperture<span className=\"required\">Required</span></label>\n                <Input\n                type=\"number\"\n                name=\"aperture\"\n                // required\n                value={updateSetting?.aperture ? updateSetting?.aperture : updateSetting?.aperture === null ?? ''}\n                placeholder=\"1.4\"\n                onChange={(e)=>handleInput1(e)}\n                />\n                <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b>1.4</span>\n                {error?.data?.aperture &&\n                    <span className=\"text-danger small\">{error?.data?.aperture}</span>\n                }\n            </FormGroup>\n            </Col>\n            <Col md=\"12\">\n            <div className=\"border-line\" />\n            <FormGroup>\n                <h6>Camera Settings</h6>\n            </FormGroup>\n            </Col>\n            <Col md=\"6\">\n            <FormGroup>\n                <label>ISO</label>\n                <Input\n                type=\"number\"\n                name=\"iso\"\n                value={updateSetting?.iso}\n                placeholder=\"100\"\n                onChange={(e)=>handleInput1(e)}\n                />\n                <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b>100</span>\n            </FormGroup>\n            </Col>\n            <Col md=\"6\">\n            <FormGroup>\n                <label>Shutter Speed (exposure time)</label>\n                <Input\n                type=\"text\"\n                name=\"shutter_speed\"\n                value={updateSetting?.shutter_speed}\n                placeholder=\"1/15\"\n                maxLength={10}\n                onChange={(e)=>handleInput1(e)}\n                />\n                <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b>1/15</span>\n            </FormGroup>\n            </Col>\n            <Col md=\"6\">\n            <FormGroup>\n                <label>Frame Rate (frames per second)</label>\n                <Input type=\"number\" name=\"fps\" value={updateSetting?.fps} placeholder=\"24\" onChange={(e)=>handleInput1(e)}/>\n            </FormGroup>\n            </Col>\n            <Col md=\"12\">\n            <div className=\"border-line\"/>\n            <FormGroup>\n                <h6>How do you generally keep track of time?</h6>\n                <Input\n                type=\"text\"\n                name=\"question_field_one\"\n                value={updateSetting?.question_field_one}\n                placeholder=\"Camera Time\"\n                onChange={(e)=>handleInput1(e)}\n                />\n                <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b>Camera Time</span>\n            </FormGroup>\n            </Col>\n            <Col md=\"12\">\n            <div className=\"border-line\"/>\n            <FormGroup>\n                <h6>\n                Do you use any special equipment attached to\n                your camera (such as a filter)?\n                </h6>\n                <Input\n                type=\"text\"\n                name=\"question_field_two\"\n                value={updateSetting?.question_field_two}\n                placeholder=\"Polarizing Filter\"\n                onChange={(e)=>handleInput1(e)}\n                />\n                <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b>Polarizing Filter</span>\n            </FormGroup>\n            </Col>\n            </>\n    )\n}\nexport default EquipmentForm;","import \"../../assets/scss/component/initialUploadobservations.scss\";\nimport {FormGroup, Input, Label} from \"reactstrap\";\nimport {Icon} from \"@iconify/react/dist/iconify\";\n\nconst UploadImageUI = (props) => {\n    const {\n        maxLimit,\n        imageFormat,\n        multiple,\n        handleUploadImage,\n        error,\n        small,\n        handleObvAdd,\n        defaultUploadBox,\n        blogUpload\n    } = props;\n    return (\n        <div className=\"position-relative\">\n            <div\n                className={`upload-image_wrapper ${small ? \"small-upload_box mb-5\" : ''} ${blogUpload ? 'blog-upload-box' : ''}`}>\n                <div className=\"upload-ob-inner\">\n                    <FormGroup>\n                        <Label htmlFor=\"UploadFile\">\n                            <div className=\"upload-info\">\n                                <Icon icon=\"bx:image-alt\" color=\"#737e96\" width=\"42\" height=\"42\"/>\n                                <p>{defaultUploadBox ? 'Upload your first observation' : 'Drag and drop images or click to upload'}</p>\n                                {maxLimit && <span className=\"text-black\">Max. Image Size: 5MB</span>}\n                                {imageFormat &&\n                                    <ul>\n                                        <li>\n                                            Common Image File Formats (JPEG or\n                                            JPG, PNG)\n                                        </li>\n                                    </ul>\n                                }\n\n                            </div>\n                        </Label>\n                        <Input\n                            type=\"file\"\n                            name=\"file\"\n                            id=\"UploadFile\"\n                            accept=\"image/jpg, image/jpeg, image/png\"\n                            multiple={multiple}\n                            onChange={(e) => handleUploadImage(e)}\n                        />\n                    </FormGroup>\n                </div>\n                {error?.count &&\n                    <span className=\"text-danger d-block small my-1 d-inline-block\">{error?.count} </span>\n                }\n                {error?.size &&\n                    <span className=\"text-danger d-block small my-1 d-inline-block\">{error?.size}</span>\n                }\n                {error?.duplicate &&\n                    <span className=\"text-info d-block small my-1 d-inline-block\">{error?.duplicate}</span>\n                }\n            </div>\n            {defaultUploadBox &&\n                <div className={`${defaultUploadBox ? 'mark-center' : ''}`}>\n                    <button onClick={(e) => handleObvAdd(e)}\n                            className={`btn btn-secondary`}>\n                        <Icon icon=\"heroicons-outline:upload\" width=\"25\" height=\"22\"/>\n                        Upload Observation\n                    </button>\n                </div>\n            }\n        </div>\n    )\n}\nexport default UploadImageUI;","export const Tabs = {\n    ObservationImages : \"ObservationImages\",\n    DateTimeLocation : \"DateTimeLocation\",\n    EquipmentDetails : \"EquipmentDetails\",\n}\n\nexport const MultiImageTabs = {\n    MultipleImages: \"MultipleImages\",\n    ImageSequence: \"ImageSequence\"\n}\n\nexport const imageDetails = {\n    Details : \"Details\",\n    Equipment : \"Equipment\",\n    Comments : \"Comments\",\n}\n\nexport const obvType = {\n    default: \"verified\",\n    verified : \"verified\",\n    unverified: \"unverified\",\n    denied: \"denied\",\n    draft: \"draft\"\n}\n\nexport const masonryConfig = (selector, width, gutter, fit=false, transition) => {\n    return {\n        columnWidth: width,\n        gutter: gutter,\n        itemSelector: selector,\n        fitWidth: false,\n        transitionDuration: transition,\n    }\n}\n\nexport const uploadImageDefaultState = (random, baseImage, item, userLocation) => {\n    return {\n        id : random,\n        sameAsFirstMap: false,\n        sameAsFirstDate: false,\n        image : baseImage,\n        lastModified: item?.lastModified,\n        name: item?.name,\n        item: item,\n        latitude: userLocation ? userLocation.latitude : 28.5204,\n        longitude: userLocation ? userLocation.longitude : 25.8567,\n        location: 'Pune, Maharashtra, India',\n        country_code: 'IN',\n        obs_date: null,\n        obs_time: null,\n        timezone: 'Africa/Abidjan',\n        azimuth: 360,\n        time_accuracy:'',\n        is_precise_azimuth:0,\n        category_map: {\n            category: [],\n            is_other: false,\n            other_value: ''\n        }\n    }\n}\n\nexport const directionValue = [\n    {name: 'N', angle: 360, default : true},\n    {name: 'NE', angle: 45, default : false},\n    {name: 'E', angle: 90, default : false},\n    {name: 'SE', angle: 135, default : false},\n    {name: 'S', angle: 180, default : false},\n    {name: 'SW', angle: 235, default : false},\n    {name: 'W', angle: 270, default : false},\n    {name: 'NW', angle: 315, default : false},\n]\n\nexport const getdirectionDegree = (key) => {\n    \n    let degree;\n    switch (key) {\n        case 'N':\n            degree = 360;\n            break;\n        case 'NE':\n            degree = 45;\n            break;\n        case 'E':\n            degree = 90;\n            break;\n        case 'SE':\n            degree = 135;\n            break;\n        case 'S':\n            degree = 180;\n            break;\n        case 'SW':\n            degree = 235;\n            break;\n        case 'W':\n            degree = 270;\n            break;\n        case 'NW':\n            degree = 315;\n            break;\n    \n        default:\n            degree = key;\n            break;\n    }\n    return degree\n}\n\nexport const getdirectionAngle = (key) => {\n    \n    let angle;\n    switch (key) {\n        case 360:\n            angle = 'N';\n            break;\n        case 45:\n            angle = 'NE';\n            break;\n        case 90:\n            angle = 'E';\n            break;\n        case 135:\n            angle = 'SE';\n            break;\n        case 180:\n            angle = 'S';\n            break;\n        case 235:\n            angle = 'SW';\n            break;\n        case 270:\n            angle = 'W';\n            break;\n        case 315:\n            angle = 'NW';\n            break;\n    \n        default:\n            angle = 'N';\n            break;\n    }\n    return angle\n}","import {useContext, useDebugValue} from \"react\";\nimport {ObservationContext} from \"../pages/Observation/Observations\";\n\nconst useObservations = () => {\n    const { observationImages } = useContext(ObservationContext);\n    // useDebugValue(observationSteps, observationSteps => observationSteps ? 'Steps set' : \"Steps not set\")\n    useDebugValue(observationImages, observationImages => observationImages?.data ? 'Images set' : \"Images not set\")\n    return useContext(ObservationContext);\n}\n\nexport default useObservations;","export const ReactVapIdKey = process.env.REACT_VAPID_KEY1\nexport const GoogleMapsAPI = process.env.REACT_APP_GOOGLE_MAP_KEY","/* eslint-disable no-undef */\n\nimport React, { Component } from 'react';\nimport { withGoogleMap, GoogleMap, InfoWindow, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport Autocomplete from 'react-google-autocomplete';\nimport { GoogleMapsAPI } from '../config';\nGeocode.setApiKey(GoogleMapsAPI);\n// Geocode.enableDebug();\n\nclass Map extends Component{\n\n\tconstructor( props ){\n\t\t\n\t\tsuper( props );\n\t\tthis.country = null;\n\t\tthis.address = null;\n\t\tthis.state = {\n\t\t\taddress: '',\n\t\t\tcity: '',\n\t\t\tarea: '',\n\t\t\tstate: '',\n\t\t\tcountryCode: '',\n\t\t\tshort_address: '',\n\t\t\tmapPosition: {\n\t\t\t\tlat: this.props.center.lat,\n\t\t\t\tlng: this.props.center.lng\n\t\t\t},\n\t\t\tmarkerPosition: {\n\t\t\t\tlat: this.props.center.lat,\n\t\t\t\tlng: this.props.center.lng\n\t\t\t}\n\t\t}\n\t}\n\t/**\n\t * Get the current address from the default map position and set those values in the state\n\t */\n\tcomponentDidMount() {\n\t\t\n\t\tGeocode.fromLatLng( this.state.mapPosition.lat , this.state.mapPosition.lng ).then(\n\t\t\tresponse => {\n\t\t\t\tconst address = response.results[0].formatted_address,\n\t\t\t\t      addressArray =  response.results[0].address_components,\n\t\t\t\t      city = this.getCity( addressArray ),\n\t\t\t\t      area = this.getArea( addressArray ),\n\t\t\t\t      state = this.getState( addressArray ),\n\t\t\t\t\t  country = this.getCountry(addressArray)['short_name'],\n\t\t\t\t\t  short_address = [city,state,this.getCountry(addressArray)['long_name']].filter(x => x !== undefined && x !== null ).toString();\n\n\t\t\t\tconsole.log(short_address,'ffdf');\n\t\t\t\tthis.setState( {\n\t\t\t\t\taddress: ( address ) ? address : '',\n\t\t\t\t\tarea: ( area ) ? area : '',\n\t\t\t\t\tcity: ( city ) ? city : '',\n\t\t\t\t\tstate: ( state ) ? state : '',\n\t\t\t\t\tcountry: (country) ? country: '',\n\t\t\t\t\tshort_address: (short_address)? short_address : '',\n\t\t\t\t\tmarkerPosition: {\n\t\t\t\t\t\tlat: this.state.mapPosition.lat,\n\t\t\t\t\t\tlng: this.state.mapPosition.lng\n\t\t\t\t\t},\n\t\t\t\t\tmapPosition: {\n\t\t\t\t\t\tlat: this.state.mapPosition.lat,\n\t\t\t\t\t\tlng: this.state.mapPosition.lng\n\t\t\t\t\t},\n\t\t\t\t\t\n\t\t\t\t} )\n\t\t\t\tthis.country = country;\n\t\t\t\tthis.address = short_address;\n\t\t\t\tif(response){\n\n\t\t\t\t\tthis.props.handleState(false,[this.country,this.address,]);\n\t\t\t\t}\n\t\t\t},\n\t\t\terror => {\n\t\t\t\tconsole.error( error );\n\t\t\t}\n\t\t);\n\t};\n\n\thandleChangeLatLng(newLat,newLng) {\n\t\tnewLat = Number(newLat);\n\t\tnewLng = Number(newLng);\n\t\tGeocode.fromLatLng( newLat , newLng ).then(\n\t\t\tresponse => {\n\t\t\t\tconst address = response.results[0].formatted_address,\n\t\t\t\t      addressArray =  response.results[0].address_components,\n\t\t\t\t      city = this.getCity( addressArray ),\n\t\t\t\t      area = this.getArea( addressArray ),\n\t\t\t\t      state = this.getState( addressArray ),\n\t\t\t\t\t  country = this.getCountry(addressArray)['short_name'],\n\t\t\t\t\t  short_address = [city,state,this.getCountry(addressArray)['long_name']].filter(x => x !== undefined && x !== null ).toString();\n\t\t\t\tthis.setState( {\n\t\t\t\t\taddress: ( address ) ? address : '',\n\t\t\t\t\tarea: ( area ) ? area : '',\n\t\t\t\t\tcity: ( city ) ? city : '',\n\t\t\t\t\tstate: ( state ) ? state : '',\n\t\t\t\t\tcountry: (country) ? country : '',\n\t\t\t\t\tshort_address: (short_address)? short_address: '',\n\t\t\t\t\tmarkerPosition: {\n\t\t\t\t\t\tlat: newLat,\n\t\t\t\t\t\tlng: newLng\n\t\t\t\t\t},\n\t\t\t\t\tmapPosition: {\n\t\t\t\t\t\tlat: newLat,\n\t\t\t\t\t\tlng: newLng\n\t\t\t\t\t},\n\t\t\t\t} )\n\t\t\t\tthis.props.handleState(true,this.state);\n\t\t\t},\n\t\t\terror => {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t);\n\t\t\n\t};\n\t/**\n\t * Component should only update ( meaning re-render ), when the user selects the address, or drags the pin\n\t *\n\t * @param nextProps\n\t * @param nextState\n\t * @return {boolean}\n\t */\n\tshouldComponentUpdate( nextProps, nextState ){\n\n\t\tif (\n\t\t\tthis.state.markerPosition.lat !== this.props.center.lat ||\n\t\t\tthis.state.address !== nextState.address ||\n\t\t\tthis.state.city !== nextState.city ||\n\t\t\tthis.state.area !== nextState.area ||\n\t\t\tthis.state.state !== nextState.state\n\t\t) {\t\t\t\n\n\t\t\treturn true\n\t\t}\n\t\t else if ( this.props.center.lat === nextProps.center.lat ){\n\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\treturn true;\n\t}\n\t/**\n\t * Get the city and set the city input value to the one selected\n\t *\n\t * @param addressArray\n\t * @return {string}\n\t */\n\tgetCity = ( addressArray ) => {\n\t\tlet city = '';\n\t\tfor( let i = 0; i < addressArray.length; i++ ) {\n\t\t\tif ( addressArray[ i ].types[0] && 'administrative_area_level_2' === addressArray[ i ].types[0] ) {\n\t\t\t\tcity = addressArray[ i ].long_name;\n\t\t\t\treturn city;\n\t\t\t}\n\t\t}\n\t};\n\tgetCountry = ( addressArray ) => {\n\t\tlet country = [];\n\t\tcountry['long_name'] = '';\n\t\tcountry['short_name'] = '';\n\t\tfor( let i = 0; i < addressArray.length; i++ ) {\n\t\t\tfor( let i = 0; i < addressArray.length; i++ ) {\n\t\t\t\tif ( addressArray[ i ].types[0] && 'country' === addressArray[ i ].types[0] ) {\n\t\t\t\t\tcountry['long_name'] = addressArray[ i ].long_name;\n\t\t\t\t\tcountry['short_name'] = (addressArray[ i ].short_name) ? addressArray[ i ].short_name: '';\n\t\t\t\t\treturn country;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t/**\n\t * Get the area and set the area input value to the one selected\n\t *\n\t * @param addressArray\n\t * @return {string}\n\t */\n\tgetArea = ( addressArray ) => {\n\t\tlet area = '';\n\t\tfor( let i = 0; i < addressArray.length; i++ ) {\n\t\t\tif ( addressArray[ i ].types[0]  ) {\n\t\t\t\tfor ( let j = 0; j < addressArray[ i ].types.length; j++ ) {\n\t\t\t\t\tif ( 'sublocality_level_1' === addressArray[ i ].types[j] || 'locality' === addressArray[ i ].types[j] ) {\n\t\t\t\t\t\tarea = addressArray[ i ].long_name;\n\t\t\t\t\t\treturn area;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t/**\n\t * Get the address and set the address input value to the one selected\n\t *\n\t * @param addressArray\n\t * @return {string}\n\t */\n\tgetState = ( addressArray ) => {\n\t\tlet state = '';\n\t\tfor( let i = 0; i < addressArray.length; i++ ) {\n\t\t\tfor( let i = 0; i < addressArray.length; i++ ) {\n\t\t\t\tif ( addressArray[ i ].types[0] && 'administrative_area_level_1' === addressArray[ i ].types[0] ) {\n\t\t\t\t\tstate = addressArray[ i ].long_name;\n\t\t\t\t\treturn state;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t/**\n\t * And function for city,state and address input\n\t * @param event\n\t */\n\tonChange = ( event ) => {\n\t\tthis.setState({ [event.target.name]: event.target.value });\n\t};\n\t/**\n\t * This Event triggers when the marker window is closed\n\t *\n\t * @param event\n\t */\n\tonInfoWindowClose = ( event ) => {\n\n\t};\n\n\t/**\n\t * When the marker is dragged you get the lat and long using the functions available from event object.\n\t * Use geocode to get the address, city, area and state from the lat and lng positions.\n\t * And then set those values in the state.\n\t *\n\t * @param event\n\t */\n\tonMarkerDragEnd = ( event ) => {\n\t\tlet newLat = event.latLng.lat(),\n\t\t    newLng = event.latLng.lng();\n\n\t\tGeocode.fromLatLng( newLat , newLng ).then(\n\t\t\tresponse => {\n\t\t\t\tconst address = response.results[0].formatted_address,\n\t\t\t\t      addressArray =  response.results[0].address_components,\n\t\t\t\t      city = this.getCity( addressArray ),\n\t\t\t\t      area = this.getArea( addressArray ),\n\t\t\t\t      state = this.getState( addressArray ),\n\t\t\t\t\t  country = this.getCountry(addressArray)['short_name'],\n\t\t\t\t\t  short_address = [city,state,this.getCountry(addressArray)['long_name']].filter(x => x !== undefined && x !== null ).toString();\n\t\t\t\tthis.setState( {\n\t\t\t\t\taddress: ( address ) ? address : '',\n\t\t\t\t\tarea: ( area ) ? area : '',\n\t\t\t\t\tcity: ( city ) ? city : '',\n\t\t\t\t\tstate: ( state ) ? state : '',\n\t\t\t\t\tcountry: (country) ? country : '',\n\t\t\t\t\tshort_address: (short_address)? short_address : '',\n\t\t\t\t\tmarkerPosition: {\n\t\t\t\t\t\tlat: newLat,\n\t\t\t\t\t\tlng: newLng\n\t\t\t\t\t},\n\t\t\t\t\tmapPosition: {\n\t\t\t\t\t\tlat: newLat,\n\t\t\t\t\t\tlng: newLng\n\t\t\t\t\t},\n\t\t\t\t} )\n\t\t\t\tthis.props.handleState(true,this.state);\n\t\t\t},\n\t\t\terror => {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t);\n\t};\n\n\t/**\n\t * When the user types an address in the search box\n\t * @param place\n\t */\n\tonPlaceSelected = ( place ) => {\n\t\tconst address = place.formatted_address,\n\t\t      addressArray =  place.address_components,\n\t\t      city = this.getCity( addressArray ),\n\t\t      area = this.getArea( addressArray ),\n\t\t      state = this.getState( addressArray ),\n\t\t\t  country = this.getCountry(addressArray)['short_name'],\n\t\t\t  short_address = [city,state,this.getCountry(addressArray)['long_name']].filter(x => x !== undefined && x !== null ).toString(),\n\t\t      latValue = place.geometry.location.lat(),\n\t\t      lngValue = place.geometry.location.lng();\n\t\tthis.setState({\n\t\t\taddress: ( address ) ? address : '',\n\t\t\tarea: ( area ) ? area : '',\n\t\t\tcity: ( city ) ? city : '',\n\t\t\tstate: ( state ) ? state : '',\n\t\t\tcountry: (country) ? country: '',\n\t\t\tshort_address: (short_address)? short_address:'',\n\t\t\tmarkerPosition: {\n\t\t\t\tlat: latValue,\n\t\t\t\tlng: lngValue\n\t\t\t},\n\t\t\tmapPosition: {\n\t\t\t\tlat: latValue,\n\t\t\t\tlng: lngValue\n\t\t\t},\n\t\t})\n\t\tthis.props.handleState(true,this.state);\n\t};\n\n\n\trender(){\n\t\tconst AsyncMap = \n\t\t\twithGoogleMap(\n\t\t\t\tprops => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<GoogleMap google={ this.props.google }\n\t\t\t\t\t\t\t\t   defaultZoom={ this.props.zoom }\n\t\t\t\t\t\t\t\t   defaultCenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\n\t\t\t\t\t\t\t\t   defaultOptions={{\n\t\t\t\t\t\t\t\t\t   disableDefaultUI: true,\n\t\t\t\t\t\t\t\t   }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Marker google={this.props.google}\n\t\t\t\t\t\t\t\t\tname={'Dolores park'}\n\t\t\t\t\t\t\t\t\tdraggable={true}\n\t\t\t\t\t\t\t\t\tonDragEnd={ this.onMarkerDragEnd }\n\t\t\t\t\t\t\t\t\tposition={{ lat: this.state.markerPosition.lat, lng: this.state.markerPosition.lng }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Marker />\n\n\t\t\t\t\t\t\t<div className=\"search-input-container\">\n\t\t\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tclassName={`form-control bg-white ${this.props.searchInputClass}`}\n\t\t\t\t\t\t\t\t\tonPlaceSelected={ this.onPlaceSelected }\n\t\t\t\t\t\t\t\t\ttypes={['(regions)']}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Type address\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<InfoWindow\n\t\t\t\t\t\t\t\t\tonClose={this.onInfoWindowClose}\n\t\t\t\t\t\t\t\t\tposition={{ lat: ( this.state.markerPosition.lat + 0.0018 ), lng: this.state.markerPosition.lng }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<span style={{ padding: 0, margin: 0 }}>{ this.state.short_address }</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</InfoWindow>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t</GoogleMap>\n\t\t\t\t\t</>\n\t\t\t\t)\n\t\t\t\n\t\t);\n\t\tlet map;\n\t\tif( this.props.center.lat !== undefined ) {\n\t\t\tmap =   <div>\n\t\t\t\t\t<AsyncMap\n\t\t\t\t\t\tgoogleMapURL={`https://maps.googleapis.com/maps/api/js?key=${GoogleMapsAPI}&libraries=places`}\n\t\t\t\t\t\tloadingElement={\n\t\t\t\t\t\t\t<div style={{ height: `100%` }} />\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontainerElement={\n\t\t\t\t\t\t\t<div style={{ height: this.props.height, position: this.props.containerPosition }} />\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmapElement={\n\t\t\t\t\t\t\t<div className={this.props.mapContainer} style={{ height: `100%`, borderRadius: this.props.mapRadius }} />\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t} else {\n\t\t\tmap = <div style={{height: this.props.height}} />\n\t\t}\n\t\treturn( map )\n\t}\n}\nexport default Map","import {Col, FormGroup, PopoverBody, PopoverHeader, Collapse, Button, Row} from \"reactstrap\";\nimport {useEffect, useRef, useState} from \"react\";\nimport useObservations from \"../../hooks/useObservations\";\nimport {Icon} from \"@iconify/react\";\n// import axios from \"../../api/axios\";\n// import {baseURL} from \"../../helpers/url\";\nimport useAuth from \"../../hooks/useAuth\";\nimport Images from \"../../static/images\";\nimport {Swiper, SwiperSlide} from \"swiper/react\";\nimport {Navigation} from \"swiper\";\nimport Tippy from \"@tippyjs/react\";\n\nconst ObservationCategory = (props) => {\n    const {error, obvType} = props;\n    const {auth} = useAuth();\n    const {\n        observationImages,\n        setObservationImages,\n        observationSteps,\n        observationCategory,\n        setObservationCategory\n    } = useObservations();\n    const [Category, setCategory] = useState([]);\n    const [oldCategory, setOldCategory] = useState([]);\n    const [isChecked, setIsChecked] = useState({});\n    const [selectedCategory, setSelectedCategory] = useState('' || []);\n    const ObservationData = {...observationImages};\n    const errorData = error ? Object.values(error?.data) : {};\n    const [isPopoverContentOpen, setIsPopoverContentOpen] = useState(false);\n    const tippyRef = useRef();\n\n    const onCategoryChange = (e) => {\n        const value = parseFloat(e.target.id);\n        setIsChecked({...isChecked, [e.target.name]: e.target.checked});\n        if (selectedCategory.includes(value)) {\n            const filterValue = selectedCategory.filter((item) => item !== value)\n            setSelectedCategory(filterValue);\n        } else {\n            setSelectedCategory([...selectedCategory, value]);\n        }\n        setObservationImages(ObservationData);\n    }\n    const updatedCategory = () => {\n        let newCategory = [];\n        oldCategory?.map((item, index) => {\n            let image = `/assets/images/category/${item?.name.toLowerCase().replaceAll(\" \", \"\")}.png`\n\n            item.image = image\n            newCategory.push(item)\n            return true;\n        })\n        setCategory(newCategory);\n\n        setObservationCategory(prev => {\n            return {\n                ...prev,\n                data: newCategory\n            }\n        });\n    }\n    const ImageCarousel = (props) => {\n        const {className} = props;\n        const items = [\n            {src: Images.card1},\n            {src: Images.card2},\n            {src: Images.card3}\n        ]\n\n        const carouselContent = items.map((item, index) => {\n            return (\n                <SwiperSlide key={index}>\n                    <img src={item.src} alt=\"carousel\"/>\n                </SwiperSlide>\n            );\n        });\n\n        return (\n            <>\n                <Swiper navigation={true} modules={[Navigation]} className={`className ${className ? className : ''}`}>\n                    {carouselContent}\n                </Swiper>\n            </>\n        )\n    }\n    const PopoverContent = () => {\n        return (\n            <>\n                <PopoverHeader className={'bg-white'}>What is sprite?\n                    {/*<button className=\"bg-transparent p-0 border-0 text-black shadow-none\"><Icon icon=\"codicon:chrome-close\" width=\"15\" height=\"15\" /></button>*/}\n                </PopoverHeader>\n                <PopoverBody className={'bg-white'}>\n                    <p style={{'--line-clamb': isPopoverContentOpen === true ? 'unset' : '2'}}>\n                        Sprites or red sprites are large-scale electric discharges that occur high above thunderstorm\n                        clouds, they appear as luminous reddish-orange flashes.\n                    </p>\n                    <Collapse\n                        isOpen={isPopoverContentOpen}\n                    >\n                        <ImageCarousel className=\"popover-carousel\"/>\n                    </Collapse>\n                    <Button className=\"bg-transparent p-0 border-0 text-secondary shadow-none d-block\"\n                            onClick={() => setIsPopoverContentOpen(!isPopoverContentOpen)}>\n                        {isPopoverContentOpen === true ? 'Show less' : 'Show more'}\n                    </Button>\n                </PopoverBody>\n            </>\n        );\n    };\n\n    const showCategory = () => {\n        return observationImages?.data?.filter((item) => item.id === observationImages?.selected_image_id).map((item, index) => {\n            return (\n                observationCategory?.data?.map((imagItem, index) => {\n                    return (\n                        <Col sm={6} key={index}>\n                            <FormGroup>\n                                <div className=\"checkbox-wrapper\">\n                                    <div className=\"inputGroup\">\n                                        <input\n                                            value={imagItem.name || ''}\n                                            name={imagItem.id}\n                                            id={imagItem.id}\n                                            type=\"checkbox\"\n                                            checked={(item?.category_map?.category?.find(list => list === imagItem?.id) === imagItem?.id) ? 'checked' : ''}\n                                            hidden\n                                            onChange={(e) => onCategoryChange(e)}\n                                        />\n                                        <label htmlFor={imagItem.id}>\n                                            <img src={`${imagItem.image}`} alt={imagItem.name}/>\n                                            {imagItem.name}\n                                            <div className=\"ms-2 text-dark \">\n\n                                                <Tippy\n                                                    content={<PopoverContent/>}\n                                                    interactive={true}\n                                                    appendTo={document.body}\n                                                    animation=\"perspective\"\n                                                    theme=\"light-border\"\n                                                    reference={tippyRef}\n                                                >\n                                                    <span ref={tippyRef}><Icon icon=\"charm:info\" color=\"#adb4c2\"\n                                                                               width=\"15\" height=\"15\"/></span>\n                                                </Tippy>\n                                            </div>\n\n                                        </label>\n                                    </div>\n                                </div>\n                            </FormGroup>\n                        </Col>\n                    )\n                })\n            )\n        })\n    }\n\n    useEffect(() => {\n        setOldCategory(auth?.categoryList)\n    }, [])\n\n    useEffect(() => {\n        updatedCategory();\n    }, [oldCategory])\n\n    useEffect(() => {\n        let prevCategory = ObservationData.data[observationImages?.selected_image_index]?.category_map?.category || [];\n        setSelectedCategory((prevCategory))\n    }, [ObservationData.data, observationImages?.selected_image_index])\n\n    useEffect(() => {\n        if (observationImages?.selected_image_index === []) {\n            setSelectedCategory([])\n        }\n    }, [observationImages?.selected_image_index])\n\n    useEffect(() => {\n        if (obvType?.image_type === 3) {\n            observationImages?.data?.map((item, index) => {\n                return item.category_map.category = selectedCategory\n            })\n        } else {\n            ObservationData.data[observationImages?.selected_image_index].category_map.category = selectedCategory;\n        }\n    }, [selectedCategory])\n\n    return (\n        <>\n            {error && errorData?.map((item, index) => {\n                if (observationSteps?.selected_image_index === index) {\n                    return (\n                        <span key={index} className=\"text-danger small\">{item?.category}</span>\n                    )\n                }\n                return true;\n            })}\n            <FormGroup className=\"mb-1\">\n                <p className=\"fw-bold\">\n                    Please choose the appropriate category\n                    <span className=\"required\">Required</span>\n                </p>\n            </FormGroup>\n            <Row>\n                {showCategory()}\n            </Row>\n        </>\n    )\n\n\n}\n\nexport default ObservationCategory;","import \"../../assets/scss/component/observationLocation.scss\";\nimport {\n    Button,\n    Col,\n    Dropdown,\n    DropdownItem,\n    DropdownMenu,\n    DropdownToggle,\n    FormGroup,\n    Input,\n    Label,\n    Row\n} from \"reactstrap\";\nimport {useEffect, useRef, useState} from 'react';\nimport useObservations from \"../../hooks/useObservations\";\nimport MapWrapper from '../MapWrapper';\nimport ReactCountryFlags from '../ReactCountryFlag';\nimport Images from \"../../static/images\";\nimport {directionValue, Tabs} from \"../../helpers/observation\";\nimport {timezone} from \"../../helpers/timezone\";\nimport ObservationCategory from \"./ObservationCategory\";\nimport {Icon} from '@iconify/react';\nimport {getdirectionDegree,getdirectionAngle} from \"../../helpers/observation\";\nimport moment from \"moment\";\n\n\nconst ObservationLocation = (props) => {\n    const { toggleTab,handleImageInput, error, step, obvType,disableNext } = props;\n    const fref = useRef()\n    const [address1,setAddress] = useState({\n        address: '',\n        city: '',\n        area: '',\n        state: '',\n        country: 'IN',\n        short_address: 'Pune Maharastra Indias',\n        mapPosition: {\n            lat: null,\n            lng: null\n        },\n        markerPosition: {\n            lat: null,\n            lng: null\n        }\n    });\n    const [initialAddress,setInitialAddress] = useState({\n        country: '',\n        short_address: '',\n       lat:null,\n       lng:null\n    });\n    const [isLoaded,setIsLoaded] = useState(false);\n    const {observationImages, setObservationImages,observationData} = useObservations();\n    const [isActiveDire, setActiveDire] = useState(null);\n    const [angleDegree, setAngleDegree] = useState(false);\n    const [isTimezoneOpen, setIsTimezoneOpen] = useState(false);\n    const [searchTimeZone, setSearchTimeZone] = useState(\"\");\n    const [sameAsMap, setSameAsMap] = useState(false);\n    const [sameAsDateTime, setSameAsDateTime] = useState(false);\n\n    useEffect(()=> {\n        \n        if(observationImages?.data && observationImages?.data[observationImages?.selected_image_index]?.sameAsFirstMap === false){\n            fref.current.handleChangeLatLng(observationImages?.data[observationImages?.selected_image_index]?.latitude , observationImages?.data[observationImages?.selected_image_index]?.longitude);\n        }\n      \n    },[observationImages?.data?.[observationImages?.selected_image_index],observationImages?.selected_image_index]);\n\n    useEffect(()=> {\n        // setSameAsMap(false);\n        // setSameAsDateTime(false);\n        if(observationImages?.data && observationImages?.selected_image_index !== 0){\n            handleCopyData(observationImages?.data[observationImages?.selected_image_index]?.sameAsFirstMap,['latitude','longitude','location','country_code']);\n            handleCopyData(observationImages?.data[observationImages?.selected_image_index]?.sameAsFirstDate,['obs_date','obs_time','timezone']);\n        }\n\n    },[observationImages?.selected_image_index]);\n\n    const handleValue = (flag,value) => {\n        if(!flag){\n            let address = {...address1};\n            address.country_code = value[0];\n            address.short_address = value[1];\n            setInitialAddress({\n                country: value[0],\n                address:value[1],\n                lat: Number((observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.latitude: null),\n                lng :Number((observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.longitude: null)\n            })\n            setAddress(address);\n            if(observationImages?.data){\n                let observationAddress = {...observationImages};\n                if(observationAddress?.data){\n                    observationAddress.data[observationAddress.selected_image_index]['location'] = value[1];\n                    observationAddress.data[observationAddress.selected_image_index]['country_code'] = value[0];\n    \n                    if(observationData?.image_type === 3){\n                        if(observationAddress.data[1]){\n                            observationAddress.data[1]['location'] = value[1];\n                            observationAddress.data[1]['country_code'] = value[0];\n                        }\n                        if(observationAddress.data[2]){\n                            observationAddress.data[2]['location'] = value[1];\n                            observationAddress.data[2]['country_code'] = value[0];\n                        }\n                    }\n                    setObservationImages(observationAddress);\n                }\n            }\n        }\n        else{\n            setAddress(value);\n            if(observationImages?.data){\n                let observationAddress = {...observationImages};\n                if(observationAddress?.data){\n                    observationAddress.data[observationAddress.selected_image_index]['latitude'] = value.markerPosition.lat;\n                    observationAddress.data[observationAddress.selected_image_index]['longitude'] = value.markerPosition.lng;\n                    observationAddress.data[observationAddress.selected_image_index]['location'] = value.short_address;\n                    observationAddress.data[observationAddress.selected_image_index]['country_code'] = value.country;\n    \n                    if(observationData?.image_type === 3){\n                        if(observationAddress.data[1]){\n                            observationAddress.data[1]['latitude'] = value.markerPosition.lat;\n                            observationAddress.data[1]['longitude'] = value.markerPosition.lng;\n                            observationAddress.data[1]['location'] = value.short_address;\n                            observationAddress.data[1]['country_code'] = value.country;\n                        }\n                        if(observationAddress.data[2]){\n                            observationAddress.data[2]['latitude'] = value.markerPosition.lat;\n                            observationAddress.data[2]['longitude'] = value.markerPosition.lng;\n                            observationAddress.data[2]['location'] = value.short_address;\n                            observationAddress.data[2]['country_code'] = value.country;\n                        }\n                    }\n                    setObservationImages(observationAddress);\n                }\n            }\n        }\n    }\n    const observationArray = {...observationImages};\n    \n    const handleChangeLat = (e) => {\n        handleImageInput(e);\n        let name = e.target.name,\n             value = Number(e.target.value);\n             let addressState = {...address1};\n             addressState.mapPosition.lat = value;\n             addressState.markerPosition.lat = value;\n             setAddress(addressState);\n            //  let imageArray = {...observationImages};\n            //  imageArray.images[0].lat = value;\n            //  setObservationImages(imageArray);\n            //  setTimeout(()=> {\n                 setIsLoaded(true);\n            //  },3000);\n            fref.current.handleChangeLatLng(e.target.value,address1.markerPosition.lng);\n    }\n    \n    const handleChangeLng = (e) => {\n        handleImageInput(e);\n        let name = e.target.name,\n             value = Number(e.target.value);\n             let addressState = {...address1};\n             addressState.mapPosition.lng = value;\n             addressState.markerPosition.lng = value;\n        setAddress(addressState);\n        setIsLoaded(true);\n        fref.current.handleChangeLatLng(address1.markerPosition.lat,e.target.value);\n    }\n    useEffect(() => {\n        let observationAddress = {...observationImages};        \n        if(observationAddress?.data){\n            let addressState = {...address1};\n            observationAddress.data[observationAddress.selected_image_index]['location'] = address1?.short_address;\n            observationAddress.data[observationAddress.selected_image_index]['country_code'] = address1?.country;\n\n            if(observationData?.image_type === 3){\n                if(observationAddress.data[1]){\n                    observationAddress.data[1]['location'] = address1?.short_address;\n                    observationAddress.data[1]['country_code'] = address1?.country;\n                }\n                if(observationAddress.data[2]){\n                    observationAddress.data[2]['location'] = address1?.short_address;\n                    observationAddress.data[2]['country_code'] = address1?.country;\n                }\n            }\n            setObservationImages(observationAddress);\n        }\n    },[address1]);\n    useEffect(() => {\n        let observationAddress = {...observationImages};        \n        if(observationAddress?.data){\n            if(observationData?.image_type === 3){\n                if(observationAddress.data[1]){\n                    observationAddress.data[1]['location'] = observationAddress.data[0]['location'];\n                    observationAddress.data[1]['country_code'] = observationAddress.data[0]['country_code'];\n                }\n                if(observationAddress.data[2]){\n                    observationAddress.data[2]['location'] = observationAddress.data[0]['location'];\n                    observationAddress.data[2]['country_code'] = observationAddress.data[0]['country_code'];\n                }\n            }\n            setObservationImages(observationAddress);\n        }\n    },[observationData?.image_type]);\n    const selectDirection = (index) => {\n        const directionWrapper = document.querySelector('.compass-wrapper');\n        const directionId = document.getElementById(`directionValue${index}`);\n        let getAngleName = directionId.getAttribute(\"data-name\");\n        if(isActiveDire === index){\n            directionWrapper.classList.remove(\"active-arrow\");\n        }else{\n            directionWrapper.classList.add(\"active-arrow\");\n            setActiveDire(index);\n\n            if (observationImages?.data[observationImages?.selected_image_index]?.is_precise_azimuth === 0 || observationImages?.data[observationImages?.selected_image_index]?.is_precise_azimuth === false) {\n                observationArray.data[observationImages?.selected_image_index]['azimuth'] = getdirectionDegree(getAngleName);\n\n                if(observationData?.image_type === 3){\n                    if(observationArray.data[1]){\n                        observationArray.data[1]['azimuth'] = getdirectionDegree(getAngleName);\n                    }\n                    if(observationArray.data[2]){\n                        observationArray.data[2]['azimuth'] = getdirectionDegree(getAngleName);\n                    }\n                }\n            }\n        }\n        setObservationImages(observationArray);\n    }\n\n    const handleCopyData = (e,keys) => {\n        if(observationImages){\n\n            let observationMap = {...observationImages};\n            if(keys.includes('location','latitude','longitude','country_code')){\n                setSameAsMap(e);\n                observationMap.data[observationImages?.selected_image_index].sameAsFirstMap = e;\n            }\n            if(keys.includes('obs_time','obs_date','timezone')){\n                setSameAsDateTime(e);\n                observationMap.data[observationImages?.selected_image_index].sameAsFirstDate = e;\n            }\n            setObservationImages(observationMap);\n            let copyImages = {...observationImages};\n            keys.map((k) => {\n                if(e){\n                    copyImages.data[copyImages?.selected_image_index][k] = copyImages.data[0][k];\n                    // copyImages.data[copyImages?.selected_image_index]['location'] = copyImages.data[0]['location'];\n                    // copyImages.data[copyImages?.selected_image_index]['country_code'] = copyImages.data[0]['country_code'];\n                }else{\n                    if(observationData?.image_type !== 3){\n                        \n                        copyImages.data[copyImages?.selected_image_index][k] = (k === 'obs_time' || k === 'obs_date') ? null : '';\n                        if(keys.includes('location','latitude','longitude')){\n                            copyImages.data[copyImages?.selected_image_index]['latitude'] = initialAddress.lat;\n                            copyImages.data[copyImages?.selected_image_index]['longitude'] = initialAddress.lng;\n                            copyImages.data[copyImages?.selected_image_index]['location'] = initialAddress.short_address;\n                            copyImages.data[copyImages?.selected_image_index]['country_code'] = initialAddress.country;\n                        }\n                    }\n                }\n                return false;\n            });\n            setObservationImages(copyImages);\n        }\n    }\n\n    const findTimeZone = (e) => {\n        let value = e.target.value.toLowerCase();\n        setSearchTimeZone(value);\n    }\n\n    useEffect(()=> {\n        if (isTimezoneOpen === false) {\n            setSearchTimeZone(\"\");\n        }\n    }, [isTimezoneOpen])\n\n    const errorData = error ? Object.values(error?.data) : {};\n\n    useEffect(() => {\n        const id = observationImages?.data?.[0].id;\n        if (obvType?.image_type === 3 && step.active === 2) {\n            setObservationImages(prev => {\n                return {\n                    ...prev,\n                    selected_image_id: id,\n                    selected_image_index: 0\n                }\n            });\n        }\n    },[observationImages?.data, obvType?.image_type, setObservationImages, step.active])\n\n    return (\n        <>\n            <Col md=\"12\">\n                <FormGroup>\n                    <Row>\n                        <Col xxl={7} className=\"order-2 order-xxl-1\">\n                            <h6>Where did you make the observation? <span className=\"required\">Required</span></h6>\n                        </Col>\n                        {observationImages?.selected_image_index !== 0 && observationData?.image_type === 2 && \n                            <Col xxl={5} className=\"order-1 order-xxl-2 mb-2 mb-xxl-0\">\n                                <FormGroup>\n                                    <Label check className=\"mb-0 justify-content-end\">\n                                        <Input\n                                            type=\"checkbox\"\n                                            name=\"Same as the first image\"\n                                            checked={observationImages?.data[observationImages?.selected_image_index]?.sameAsFirstMap}\n                                            onChange={(e) => handleCopyData(e.target.checked,['latitude','longitude','location','country_code'])}\n                                            className=\"me-2 mt-0\"\n                                        />\n                                        Same as the first image\n                                    </Label>\n                                </FormGroup>\n                            </Col>\n                        }\n                    </Row>\n                    {\n                    (\n                        (observationImages?.data && observationImages?.data[observationImages?.selected_image_index]?.sameAsFirstMap === false ) \n                        || observationImages?.selected_image_index === 0 ) ?\n                        <div className=\"location_map\">\n                            <MapWrapper\n                                google={props.google}\n                                center={{ lat: Number((observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.latitude: address1?.markerPosition?.lat), lng: Number((observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.longitude: address1?.markerPosition?.lng) }}\n                                height=\"100%\"\n                                containerPosition={\"relative\"}\n                                mapRadius=\"10px\"\n                                zoom={15}\n                                handleState={handleValue}\n                                isLoaded={isLoaded}\n                                mapContainer=\"map-search-container\"\n                                searchInputClass=\"search-input-class\"\n                                ref={fref}\n                            /> \n                        </div>\n                        :\n\n                        <div  className=\"border same-data_row\">\n                            <Row>\n                                <Col lg={6}>\n                                    <Row className=\"flex-nowrap\">\n                                        <div className=\"border-end w-auto\">\n                                            <FormGroup className=\"form-group d-flex align-items-center\">\n                                                <Label className=\"form-label text-uppercase mb-0 me-2\" htmlFor=\"LAT\">LAT</Label>\n                                                <span className=\"fw-bold text-truncate data-value\">{(observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.latitude : address1?.markerPosition?.lat\n                                                }</span>\n                                            </FormGroup>\n                                        </div>\n                                        <div className=\"w-auto\">\n                                            <FormGroup className=\"form-group d-flex align-items-center\">\n                                                <Label className=\"form-label text-uppercase mb-0 me-2\" htmlFor=\"LON\">LON</Label>\n                                                <span className=\"fw-bold text-truncate data-value\">{(observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.longitude :address1?.markerPosition?.lng}</span>\n                                            </FormGroup>\n                                        </div>\n                                    </Row>\n                                </Col>\n                                <Col lg={6}>\n                                    <div className=\"selected-address d-block d-lg-flex align-items-center justify-content-start justify-content-lg-end mt-2 mt-lg-0\">\n                                        <ReactCountryFlags country={(observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.country_code: address1?.country_code} />\n                                        <span>{(observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.location : ''}</span>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </div>\n                        }\n                </FormGroup>\n            </Col>\n            {\n            (\n                ( observationImages?.data &&  observationImages?.data[observationImages?.selected_image_index]?.sameAsFirstMap === false)\n              || observationImages?.selected_image_index === 0) &&\n                <Col md={12} className=\"mb-5\">\n                    <h6>If you know the precise coordinates of your observation location, please enter below</h6>\n                    <Row>\n                        <Col md={6} lg={4}>\n                            <FormGroup className=\"d-flex\">\n                                <Label className=\"form-label text-uppercase me-1\" htmlFor=\"LAT\" sm={2} >LAT</Label>\n                                <Col sm={10}>\n                                    <Input\n                                        // value={address1?.markerPosition?.lat}\n                                        value={(observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.latitude : address1?.markerPosition?.lat}\n                                        id=\"LAT\"\n                                        type=\"number\"\n                                        name=\"latitude\"\n                                        placeholder=\"Edmon, OK, USA\"\n                                        onChange={(e)=> {handleImageInput(e); handleChangeLat(e);}}\n                                    />\n                                </Col>\n                            </FormGroup>\n                        </Col>\n                        <Col md={6} lg={4}>\n                            <FormGroup className=\"d-flex\">\n                                <Label className=\"form-label text-uppercase me-1\" htmlFor=\"LON\" sm={2} >LON</Label>\n                                <Col sm={10}>\n                                    <Input\n                                        // value={address1?.markerPosition?.lng}\n                                        value={(observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.longitude :address1?.markerPosition?.lng}\n                                        id=\"LON\"\n                                        type=\"number\"\n                                        name=\"longitude\"\n                                        placeholder=\"Edmon, OK, USA\"\n                                        onChange={(e)=> {handleImageInput(e); handleChangeLng(e);}}\n                                    />\n                                </Col>\n                            </FormGroup>\n                        </Col>\n                        <Col md={6} lg={4}>\n                            <div className=\"selected-address pb-0 pb-lg-3 d-flex align-items-center justify-content-start justify-content-lg-end\">\n                                <ReactCountryFlags country={(observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.country_code: null} />\n                                <span>{(observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.location : ''}</span>\n                            </div>\n                        </Col>\n                    </Row>\n                </Col>\n            }\n            {observationData?.image_type === 3 &&\n            <Row className=\"mb-4\">\n                <ObservationCategory obvType={obvType} error={error} />\n            </Row>\n            }\n            \n            <Col md={12} className=\"mb-5\">\n                <Row>\n                    <Col xxl={7} className=\"order-2 order-xxl-1\">\n                        <h6>Please enter date and time for your observation <span className=\"required\">Required</span></h6>\n                    </Col>\n                    {observationImages?.selected_image_index !== 0 && observationData?.image_type === 2 && <Col xxl={5} className=\"order-1 order-xxl-2 mb-2 mb-xxl-0\">\n                        <FormGroup>\n                            <Label check className=\"mb-0 justify-content-end\">\n                                <Input\n                                    type=\"checkbox\"\n                                    name=\"Same as the first image\"\n                                    checked={sameAsDateTime}\n                                    onChange={(e) => handleCopyData(e.target.checked,['obs_date','obs_time','timezone'])}\n                                    className=\"me-2 mt-0\"\n                                />\n                                Same as the first image\n                            </Label>\n                        </FormGroup>\n                    </Col>}\n                </Row>\n                \n                {\n                    (observationImages?.data && observationImages?.data[observationImages?.selected_image_index]?.sameAsFirstDate === false  \n                    || observationImages?.selected_image_index === 0)  ?\n                    <Row>\n                        <Col md={6} lg={4}>\n                            <FormGroup>\n                                <Label className=\"text-uppercase\" htmlFor=\"Date\">Date</Label>\n                                <div className=\"position-relative\">\n                                    <Input\n                                        id=\"Date\"\n                                        type=\"date\"\n                                        max= {moment(new Date()).format('Y-MM-DD')}\n                                        name=\"obs_date\"\n                                        max={moment(new Date()).format('Y-MM-DD')}\n                                        value={(observationImages?.data) ? (observationImages?.data[observationImages?.selected_image_index]?.obs_date === null ? 'dd/mm/yyyy' : observationImages?.data[observationImages?.selected_image_index]?.obs_date) : 'dd/mm/yyyy'}\n                                        className=\"w-100\"\n                                        placeholder=\"12/20/2021\"\n                                        onChange={(e)=>handleImageInput(e)}\n                                    />\n                                </div>\n\n                                {error && errorData?.map((item, index) => {\n                                    if (step?.selected_image_index === index) {\n                                        return(\n                                            <span key={index} className=\"text-danger small\">{item?.obs_date}</span>\n                                        )\n                                    }\n                                    return true;\n                                })}\n                            </FormGroup>\n                        </Col>\n                        <Col md={6} lg={4}>\n                            <FormGroup>\n                                <Label className=\"text-uppercase\" htmlFor=\"Time\">Time</Label>\n                                <div className=\"position-relative\">\n                                    <Input\n                                        id=\"Time\"\n                                        type=\"time\"\n                                        name=\"obs_time\"\n                                        value={observationImages?.data ? (observationImages?.data[observationImages?.selected_image_index]?.obs_time === null ? '--:--' : observationImages?.data[observationImages?.selected_image_index]?.obs_time) : ''}\n                                        className=\"w-100\"\n                                        placeholder=\"10:21:00 am\"\n                                        onChange={(e)=>handleImageInput(e)}\n                                    />\n                                </div>\n                                {error && errorData?.map((item, index) => {\n                                    if (step?.selected_image_index === index) {\n                                        return(\n                                            <span key={index} className=\"text-danger small\">{item?.obs_time}</span>\n                                        )\n                                    }\n                                    return true;\n                                })}\n                            </FormGroup>\n                        </Col>\n                        <Col md={6} lg={4}>\n                            <FormGroup>\n                                <Label className=\"text-uppercase\" htmlFor=\"TIME ZONE\">TIME ZONE</Label>\n                                <Dropdown className=\"dropdown-with-search\" toggle={() => setIsTimezoneOpen(!isTimezoneOpen)} isOpen={isTimezoneOpen}>\n                                    <DropdownToggle className=\"px-3 shadow-none border-0 text-black fw-normal text-start d-flex justify-content-between align-items-center w-100\">\n                                        {/*<span className=\"text-truncate\">{(observationImages?.data) ? `${observationImages?.data[observationImages?.selected_image_index]?.timezone.substring(0, 16)+'...'}` : ''}</span>*/}\n                                        <span className=\"text-truncate\">{(observationImages?.data) ? `${observationImages?.data[observationImages?.selected_image_index]?.timezone}` : ''}</span>\n                                        <Icon icon=\"fe:arrow-down\" className=\"down-arrow ms-1\"/>\n                                    </DropdownToggle>\n                                    <DropdownMenu className=\"py-0 shadow\">\n                                        <DropdownItem header className=\"mb-0 position-sticky start-0 top-0 end-0 p-2 bg-white\"><Input type=\"text\" className=\"p-2\" onChange={(e)=> findTimeZone(e)} placeholder=\"Search Timezone\" /></DropdownItem>\n                                        {timezone?.filter(item => {\n                                            return item.toLowerCase().indexOf(searchTimeZone.toLowerCase()) !== -1;\n                                        }).map((item, index) => {\n                                            return <DropdownItem  name=\"timezone\" className=\"px-2 fw-normal\" key={index} value={item} onClick={(e)=>handleImageInput(e)}>{item}</DropdownItem>\n                                        })}\n                                    </DropdownMenu>\n                                </Dropdown>\n                                {error && errorData?.map((item, index) => {\n                                    if (step?.selected_image_index === index) {\n                                        return(\n                                            <span key={index} className=\"text-danger small\">{item?.timezone}</span>\n                                        )\n                                    }\n                                    return true;\n                                })}\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    :\n                    <div  className=\"border same-data_row\">\n                        <Row>\n                            <Col lg={6}>\n                                <Row className=\"flex-nowrap\">\n                                    <div className=\"border-end w-auto\">\n                                        <FormGroup className=\"form-group d-flex align-items-center\">\n                                            <Label className=\"form-label text-uppercase mb-0 me-2\" htmlFor=\"Date\">Date</Label>\n                                            <span className=\"fw-bold text-truncate data-value\">{(observationImages?.data) ? (observationImages?.data[observationImages?.selected_image_index]?.obs_date === null ? 'dd/mm/yyyy' : observationImages?.data[observationImages?.selected_image_index]?.obs_date) : 'dd/mm/yyyy'}</span>\n                                        </FormGroup>\n                                    </div>\n                                    <div className=\"w-auto\">\n                                        <FormGroup className=\"form-group d-flex align-items-center\">\n                                            <Label className=\"form-label text-uppercase mb-0 me-2\" htmlFor=\"Time\">Time</Label>\n                                            <span className=\"fw-bold text-truncate data-value\">{observationImages?.data ? (observationImages?.data[observationImages?.selected_image_index]?.obs_time === null ? '--:--' : observationImages?.data[observationImages?.selected_image_index]?.obs_time) : ''}</span>\n                                        </FormGroup>\n                                    </div>\n                                </Row>\n                            </Col>\n                            <Col lg={6}>\n                                <div className=\"selected-address mt-2 mt-lg-0 text-end d-block\">\n                                    <span className=\"opacity-75\">{(observationImages?.data) ? `${observationImages?.data[observationImages?.selected_image_index]?.timezone}` : ''}</span>\n                                </div>\n                            </Col>\n                        </Row>\n                    </div>\n                }\n            </Col>\n            <Col md={12} className=\"mb-5\">\n                <h6>How accurate is your timing?</h6>\n                <FormGroup>\n                    <Label className=\"text-uppercase\" htmlFor=\"Date\">Uncertainty in Time</Label>\n                    <Input\n                        id=\"Date\"\n                        type=\"text\"\n                        name=\"time_accuracy\"\n                        value={(observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.time_accuracy:''}\n                        placeholder=\"e.g. +/- 3 sec  or  +/- 1 min\"\n                        className=\"w-100\"\n                        onChange={(e)=>handleImageInput(e)}\n                    />\n                    <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b> +/- 3 sec  or  +/- 1 min</span>\n                </FormGroup>\n            </Col>\n            <Col md={12} className=\"mb-5\">\n\n                {error && errorData?.map((item, index) => {\n                    if (step?.selected_image_index === index) {\n                        return(\n                            <span key={index} className=\"text-danger small\">{item?.azimuth}</span>\n                        )\n                    }\n                    return true;\n                })}\n                <FormGroup className=\"d-flex align-items-center position-relative mb-4 pb-3\">\n                    <div className=\"custom-switch\">\n                        <input\n                            id=\"checkbox2\"\n                            type=\"checkbox\"\n                            name=\"is_precise_azimuth\"\n                            // checked={(observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.is_precise_azimuth :''}\n                            checked={angleDegree}\n                            className=\"hidden\"\n                            onChange={(e)=>handleImageInput(e)}\n                            onClick={()=> setAngleDegree(!angleDegree)}\n                        />\n                        <label\n                            className=\"switchbox\"\n                            htmlFor=\"checkbox2\"\n                        />\n                        <span>I know the precise azimuth angle in degrees</span>\n                    </div>\n                </FormGroup>\n                \n                {(angleDegree === false && (observationImages?.data && observationImages?.data[observationImages?.selected_image_index]?.is_precise_azimuth === 0 ||  observationImages?.data && observationImages?.data[observationImages?.selected_image_index]?.is_precise_azimuth === false)) ?\n                    <FormGroup>\n                        <Label className=\"justify-content-center mb-3 text-uppercase\">Look Direction</Label>\n                        \n                        <div className=\"compass-wrapper\">\n                            {\n                                directionValue?.map((direction, index)=>{\n                                    return(\n                                       \n                                        <Button\n                                            className={`${direction.name}-direction ${getdirectionAngle(Number(observationArray.data[observationImages?.selected_image_index]['azimuth'])) === direction.name ? 'active_direction' : ''}`}\n                                            onClick={()=> selectDirection(index)}\n                                            key={index}\n                                            id= {`directionValue${index}`}\n                                            data-angle={direction.angle}\n                                            data-name={direction.name}\n                                        >\n                                            <span className=\"d-block\">\n                                                {direction.name}\n                                            </span>\n                                            <span className=\"d-block direction-angle\">\n                                                {direction.angle}°\n                                            </span>\n                                        </Button>\n                                    )\n                                })\n                            }\n                            <div className=\"center-dot rounded-circle\" />\n                            <div className=\"rotate-arrow-wrap\">\n                                <div className=\"rotate-arrow-inner\" style={{ \"--directionAngle\": directionValue.filter((item) => item.name === getdirectionAngle(Number(observationArray.data[observationImages?.selected_image_index]['azimuth']))).map((dirData) => {\n                                        return dirData.angle;\n                                    }) + 'deg' }}>\n                                    <div className=\"rotate-arrow main\"><img src={Images.compassArrow} alt=\"Compass Arrow\" /> </div>\n                                    <div className=\"rotate-arrow hidden\"><img src={Images.compassArrow} alt=\"Compass Arrow\" /> </div>\n                                </div>\n                            </div>\n                        </div>\n                    </FormGroup>\n                :\n                    <FormGroup>\n                        <Label htmlFor=\"Azimuth\">Azimuth Angle</Label>\n                        <Input\n                            id=\"Azimuth\"\n                            type=\"number\"\n                            min={0}\n                            max={360}\n                            name=\"azimuth\"\n                            value={(observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.azimuth:''}\n                            placeholder=\"120°\"\n                            className=\"degree-input\"\n                            onChange={(e)=>handleImageInput(e)}\n                        />\n                        <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b> 120°</span>\n                    </FormGroup>\n                }\n                <FormGroup className=\"mt-5\">\n                    <Button className=\"gray-outline-btn me-2\" onClick={() => toggleTab(Tabs.ObservationImages)}>Back</Button>\n                    <Button className=\"\" onClick={() => toggleTab(Tabs.EquipmentDetails)} disabled ={!disableNext}>Continue</Button>\n                </FormGroup>\n            </Col>\n        </>\n    )\n}\n\nexport default ObservationLocation;","import { Icon } from '@iconify/react';\nimport useObservations from \"../../hooks/useObservations\";\nimport PropTypes from \"prop-types\";\n\nconst ObservationUpdateUploadedImages = (item) => {\n\n    const {observationImages,setObservationImages} = useObservations();\n    const existingObvImageData = {...observationImages};\n\n    const toBase64 = file => new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = error => reject(error);\n    });\n\n    const handleUpdateImage = async (e) => {\n        const fileList = e.target.files[0];\n        const image = await toBase64(fileList).catch(error => console.log(error));\n\n        existingObvImageData.data[observationImages?.selected_image_index]['item'] = fileList;\n        existingObvImageData.data[observationImages?.selected_image_index]['image'] = image;\n        existingObvImageData.data[observationImages?.selected_image_index]['name'] = fileList.name;\n        existingObvImageData.data[observationImages?.selected_image_index]['lastModified'] = fileList.lastModified;\n\n        setObservationImages(existingObvImageData);\n    }\n\n    const markTabActive = (item) => {\n        setObservationImages(prev => {\n            return {\n                ...prev,\n                selected_image_id: item?.item?.id,\n                selected_image_index:item?.index\n            }\n        });\n    }\n\n\n    return (\n        <>\n            <div className=\"replace-image_wrapper position-absolute rounded-circle bg-white d-flex justify-content-center align-items-center\">\n                <input\n                    type=\"file\"\n                    name=\"file\"\n                    id=\"UploadFile1\"\n                    accept=\"image/jpg, image/jpeg, image/png\"\n                    onChange={(e) => handleUpdateImage(e)}\n                    onClick={()=> markTabActive(item)}\n                    className=\"position-absolute w-100 h-100 opacity-0 p-0\"\n                />\n                <Icon icon=\"ion:sync-outline\" />\n            </div>\n        </>\n    )\n}\n\nObservationUpdateUploadedImages.propTypes = {\n    tabActive: PropTypes.func,\n};\nexport default ObservationUpdateUploadedImages;","import useObservations from \"../../hooks/useObservations\";\nimport {useLayoutEffect, useState} from \"react\";\nimport LazyLoad from \"../Upload/LazyLoad\";\nimport { Icon } from '@iconify/react';\nimport { PropTypes } from 'prop-types';\nimport ObservationUpdateUploadedImages from \"./ObservationUpdateUploadedImages\";\n\nconst ObservationUploadedImg = (props) => {\n    const { remove, className }=props;\n    const {observationImages, setObservationImages, observationSteps} = useObservations();\n    const [preview, setPreview] = useState([]);\n    const [activeTab, setActiveTab] = useState(observationImages?.selected_image_id ?? null);\n    // Toggle Tabs\n    const toggleTab = (tab,index=0) => {\n        setActiveTab(tab);\n        setObservationImages(prev => {\n            return {\n                ...prev,\n                selected_image_id: tab,\n                selected_image_index:index,\n\n            }\n        });\n    };\n\n\n    useLayoutEffect(()=> {\n        setPreview(observationImages?.data);\n        setActiveTab(activeTab);\n    }, [activeTab, observationImages, preview])\n\n    return(\n        <>\n            {preview?.map((item, index) => {\n                return(\n                    <div className={`selected-image_wrapper d-flex justify-content-end mb-2 ms-2 ms-sm-0 position-relative ${className ? className : ''}`} key={index}>\n                        <div className={`selected-image  ${activeTab === item?.id ? 'active-tab' : ''}`}>\n                                <button type=\"button\" className='preview-btn position-relative d-flex p-0 shadow-none' onClick={()=> toggleTab(item?.id,index)}>\n                                    <LazyLoad converted={observationSteps?.converted} src={item?.image} alt={item?.name} />\n                                </button>\n                                <ObservationUpdateUploadedImages item={item} index={index} />\n                                <button type=\"button\" className=\"remove-btn text-black border-0 position-absolute btn\" onClick={()=> remove(item?.id)}>\n                                <span>\n                                    <Icon icon=\"ci:close-big\" />\n                                </span>\n                                </button>\n                        </div>\n                    </div>\n                )\n            })}\n        </>\n    )\n}\nObservationUploadedImg.propTypes = {\n    remove: PropTypes.func\n};\nexport default ObservationUploadedImg;","import {FormGroup, Input, Label} from \"reactstrap\";\nimport useObservations from \"../../hooks/useObservations\";\nimport {Icon} from '@iconify/react';\nimport {useEffect, useState} from \"react\";\nimport {uploadImageDefaultState} from \"../../helpers/observation\";\nimport PropTypes from \"prop-types\";\nimport useAuth from \"../../hooks/useAuth\";\nimport {cameraSettingFields} from \"../../helpers/url\";\nimport UploadImageUI from \"../Shared/UploadImageUI\";\n\nconst ObservationUploadImg = (props) => {\n    const {multiple, maxLimit, imageFormat, detectImage, mode, small} = props;\n    const {setObservationImages, observationImages, setCameraDetails} = useObservations();\n    const [images, setImages] = useState([]);\n    const [error, setError] = useState(null);\n    const {auth} = useAuth();\n    const [userLocation, setUserLocation] = useState({\n        latitude: (auth?.user?.location_metadata?.lat) ? auth?.user?.location_metadata?.lat : 18.5204303,\n        longitude: (auth?.user?.location_metadata?.lng) ? auth?.user?.location_metadata?.lng : 73.8567437\n    });\n    const handleUploadImage = (e) => {\n        setError(null);\n        const fileList = e.target.files;\n        Array.from(fileList).forEach((item, id) => {\n            const reader = new FileReader();\n            reader.onloadend = () => {\n                const base64String = reader.result.replace('data:', '').replace(/^.+,/, '');\n                const baseImage = `data:image/png;base64,${base64String}`;\n                const random = (Math.random() + 1).toString(36).substring(7) + (Math.random() + 1).toString(36).substring(20);\n                const fileSize = (item.size / (1024 * 1024)).toFixed(2);\n                const repeatCheck = images?.map((image, index) => {\n                    return image?.lastModified === item?.lastModified && image?.name === item?.name;\n                });\n                const duplicate = repeatCheck.includes(true);\n                if (images?.length <= (mode ? 1 : 2) && fileSize < 5 && !duplicate) {\n\n                    if (mode) {\n                        return setImages([uploadImageDefaultState(random, baseImage, item, userLocation)])\n                    } else {\n                        setImages(prevState => [\n                            ...prevState,\n                            uploadImageDefaultState(random, baseImage, item, userLocation)\n                        ])\n                    }\n                }\n\n\n                if (mode) {\n                    setError((prev) => {\n                        return {\n                            ...prev,\n                            draft: 'You can not add new image',\n                        }\n                    })\n                }\n                if (images?.length > 2) {\n                    setError((prev) => {\n                        return {\n                            ...prev,\n                            count: 'You have reached the limit, delete some image, maximum upload allowed is 3',\n                        }\n                    })\n                }\n                if (fileSize > 5) {\n                    setError((prev) => {\n                        return {\n                            ...prev,\n                            size: 'You have exceeded the max file size limit (5mb)',\n                        }\n                    })\n                }\n                if (duplicate) {\n                    setError((prev) => {\n                        return {\n                            ...prev,\n                            duplicate: 'You have already added the image, please choose other image',\n                        }\n                    })\n                }\n\n            };\n            reader.readAsDataURL(item)\n        })\n    };\n\n\n    useEffect(() => {\n        let images = (observationImages?.data) ? [...observationImages?.data] : [];\n        observationImages?.data?.map((item, index) => {\n            return item.latitude = userLocation?.latitude,\n                item.longitude = userLocation?.longitude\n        })\n        setImages(images)\n    }, [detectImage, mode, userLocation])\n\n\n    useEffect(() => {\n        if (images.length > 0) {\n            setObservationImages({\n                data: images,\n                observation_count: images.length,\n                selected_image_id: images?.[0]?.id,\n                selected_image_index: 0\n            });\n            setCameraDetails(cameraSettingFields)\n        }\n    }, [images, setObservationImages, userLocation])\n\n    return (\n        <>\n            <UploadImageUI\n                maxLimit={maxLimit}\n                imageFormat={imageFormat}\n                multiple={multiple}\n                handleUploadImage={handleUploadImage}\n                error={error}\n                small={small}\n            />\n        </>\n    )\n}\n\nObservationUploadImg.propTypes = {\n    userLocation: PropTypes.object,\n};\n\n\nexport default ObservationUploadImg;","import \"../../assets/scss/component/uploadObservationImage.scss\";\nimport { useState } from \"react\";\nimport { Row, Button, Col } from \"reactstrap\";\nimport ObservationUploadImg from \"./ObservationUploadImg\";\nimport useObservations from \"../../hooks/useObservations\";\nimport ObservationUploadedImg from \"./ObservationUploadedImg\";\n\nconst ObservationImages = (props) =>{\n    const {proceedNext, remove, detectImage, mode} = props;\n    const [isMultiple] = useState(false);\n    const { observationImages } = useObservations();\n\n    return (\n        <>\n            <Row>\n                <Col sm={observationImages?.data?.length ? 9 : 12} className=\"order-2 order-sm-1\">\n                    <ObservationUploadImg mode={mode} detectImage={detectImage} imageFormat={true} maxLimit={true} multiple={isMultiple}/>\n                </Col>\n                {observationImages?.data?.length && <Col sm={3}  className=\"order-1 order-sm-2 d-flex d-sm-block justify-content-start justify-content-sm-end overflow-hidden w-auto\">\n                    <ObservationUploadedImg className=\"sm-selected_image\" remove={remove} />\n                </Col>}\n            </Row>\n            <Row>\n                <Col sm={12}>\n                    <div className=\"mt-5\">\n                        <Button disabled={!observationImages?.data?.length} onClick={proceedNext}>Continue</Button>\n                    </div>\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default ObservationImages;","import {useEffect, useState} from \"react\";\nimport \"../../assets/scss/component/ObservationProgress.scss\";\n\nconst ObservationProgress = (props) => {\n    const {step} = props;\n    const [progress, setProgress] = useState(100);\n\n\n    useEffect(()=> {\n        setProgress(\n            step?.active * 100 / step?.total\n        )\n    }, [step])\n\n    return(\n        <>\n            <div className=\"progress_bar text-black\">\n                {step?.active} of {step?.total} steps\n                <p className=\"progress_line\" style={{ \"--progressPercentage\": progress + '%' }} ></p>\n            </div>\n        </>\n    )\n}\nexport default ObservationProgress;","import { Icon } from \"@iconify/react\";\nimport useObservations from \"../../hooks/useObservations\";\nimport LazyLoad from \"../Upload/LazyLoad\";\nimport {useRef} from \"react\";\nimport PropTypes from \"prop-types\";\n\n\nconst ImagePreview = (props) =>{\n    const {remove}=props;\n    const imageDelete = useRef(null);\n    const {observationImages, observationSteps} = useObservations();\n\n    return (\n        <>\n            {observationImages?.data?.filter(item => item?.id === observationSteps?.selected_image_id).map((item, index) => {\n                return(\n                    <div key={index} className=\"upload-multiple-observation\">\n                        <div className=\"observation-image position-relative\">\n                            {/* {observationImages?.observation_count > 1 && */}\n                                <button type=\"button\" className=\"text-black border-0 rounded-0 shadow-none p-0 position-absolute btn\" ref={imageDelete} onClick={()=> remove(item?.id)}>\n                                <span>\n                                    <Icon icon=\"ci:close-big\" />\n                                </span>\n                                </button>\n                            {/* } */}\n                            <LazyLoad src={item?.image} alt={item?.name} />\n                        </div>\n                    </div>\n                )\n            })}\n        </>\n    )\n}\nImagePreview.propTypes = {\n    remove: PropTypes.func,\n};\nexport default ImagePreview;","import {Button, Modal, ModalBody} from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport Images from './../../static/images';\n\nconst DeleteItemConfirmationPopup = (props) => {\n    const {open, handleClose} = props;\n    return(\n        <>\n            <Modal\n                isOpen={open}\n                centered\n                toggle={handleClose}\n                backdrop={true}\n                keyboard={true}\n                className=\"delete-confirm_modal\"\n            >\n                <ModalBody className=\"text-center p-3\">\n                    <h2 className=\"mb-3\">Are you sure ?</h2>\n                    <i className=\"d-inline-block mx-auto remove-img w-100\"><img src={Images.RemoveData} alt=\"Remove data\" /></i>\n                    <p className=\"mb-5 opacity-75\">If you perform this action, we will only keep your first observation. If you wish to add more observation, you will need to enable this again & then you can add more.</p>\n                    <Button className=\"me-2 gray-outline-btn px-4\">Yes</Button>\n                    <Button className=\"px-4\" onClick={() => handleClose()}>No</Button>\n                </ModalBody>\n            </Modal>\n\n        </>\n    )\n}\n\nDeleteItemConfirmationPopup.propTypes = {\n    open: PropTypes.bool,\n    handleClose: PropTypes.func\n};\n\nexport default DeleteItemConfirmationPopup;","import {MultiImageTabs, Tabs} from \"../../helpers/observation\";\nimport {Icon} from \"@iconify/react/dist/iconify\";\nimport {\n    Button,\n    Col,\n    FormGroup,\n    Input,\n    Label,\n    Nav,\n    NavItem,\n    NavLink,\n    Row,\n    TabContent,\n    TabPane\n} from \"reactstrap\";\nimport ObservationUploadImg from \"./ObservationUploadImg\";\nimport {useEffect, useState} from \"react\";\nimport useObservations from \"../../hooks/useObservations\";\nimport ObservationCategory from \"./ObservationCategory\";\nimport ImagePreview from \"./ImagePreview\";\nimport PropTypes from \"prop-types\";\nimport ObservationUploadedImg from './ObservationUploadedImg';\nimport DeleteItemConfirmationPopup from \"../Popup/DeleteItemConfirmationPopup\";\n\n\nconst ObservationAfterImageUpload = (props) => {\n    const {\n        toggleTab,\n        handleImageInput,\n        error,\n        disableNext,\n        obvType,\n        remove,\n        detectImage,\n        step,\n        showUploadedPreview,\n        mode\n    } = props;\n    const {observationImages, observationType, setObservationCategory, setObservationType} = useObservations();\n    const [isMultiple, setIsMultiple] = useState(false);\n    const [activeTab, setActiveImageTab] = useState(MultiImageTabs.MultipleImages);\n    const [isOther] = useState(false);\n    const [isConfirmPopUp, setIsConfirmPopUp] = useState(true);\n    const [shouldShowConfirmation, setShouldShowConfirmation] = useState(false);\n\n\n    // Toggle Tabs\n    const toggleImageTab = (tab) => {\n        if (activeTab !== tab) {\n            setActiveImageTab(tab);\n        }\n    };\n\n    const handleMultipleCheck = (e) => {\n        console.log(isMultiple)\n        if (isMultiple) {\n            handleConfirmationPopUp();\n        }\n    }\n\n    const handleConfirmationPopUp = () => {\n        setShouldShowConfirmation(!isConfirmPopUp);\n        setIsConfirmPopUp(!isConfirmPopUp);\n    }\n\n    useEffect(() => {\n        if (isMultiple) {\n            handleConfirmationPopUp();\n        }\n    }, [isMultiple])\n\n\n    useEffect(() => {\n        setIsMultiple(observationImages?.data?.length > 1)\n    }, [observationImages?.data?.length])\n\n\n    useEffect(() => {\n        setObservationCategory((prev) => {\n            return {\n                ...prev,\n                is_other: isOther\n            }\n        })\n\n        if (!mode) {\n            if (isMultiple && activeTab === MultiImageTabs.MultipleImages) {\n                setObservationType((prev) => {\n                    return {\n                        ...prev,\n                        image_type: 2\n                    }\n                })\n            } else if (!isMultiple) {\n                setObservationType((prev) => {\n                    return {\n                        ...prev,\n                        image_type: 1\n                    }\n                })\n            } else {\n                setObservationType((prev) => {\n                    return {\n                        ...prev,\n                        image_type: 3\n                    }\n                })\n            }\n        } else {\n            setObservationType((prev) => {\n                return {\n                    ...prev,\n                    image_type: observationType?.image_type === 3 ? 3 : 2\n                }\n            });\n            setActiveImageTab(observationType?.image_type === 3 ? MultiImageTabs.ImageSequence : MultiImageTabs.MultipleImages);\n        }\n    }, [activeTab, isMultiple, isOther, setObservationCategory, setObservationType])\n\n    return (\n        <>\n            <Row>\n                {!mode &&\n                    <Col sm={12}>\n                        <FormGroup className=\"d-flex align-items-center position-relative\">\n                            <div className=\"custom-switch\">\n                                <input\n                                    id=\"toggleMultiple\"\n                                    type=\"checkbox\"\n                                    className=\"hidden\"\n                                    checked={isMultiple}\n                                    onClick={(e) => handleMultipleCheck(e)}\n                                    onChange={(e) => setIsMultiple(true)}\n                                />\n                                <label className=\"switchbox\" htmlFor=\"toggleMultiple\"/>\n                                <span>Multiple Observations (limit to 3)</span>\n                            </div>\n                        </FormGroup>\n                    </Col>\n                }\n                {isMultiple && !mode &&\n                    <Col sm={12}>\n                        <Nav tabs>\n                            <NavItem>\n                                <NavLink\n                                    className={activeTab === MultiImageTabs.MultipleImages ? 'active' : ''}\n                                    onClick={() => {\n                                        toggleImageTab(MultiImageTabs.MultipleImages);\n                                    }}\n                                >\n                                    <Icon icon=\"fluent:square-multiple-20-regular\" color=\"black\" width={24}\n                                          className=\"me-3\"/>\n                                    Multiple images\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink\n                                    className={activeTab === MultiImageTabs.ImageSequence ? 'active' : ''}\n                                    onClick={() => {\n                                        toggleImageTab(MultiImageTabs.ImageSequence);\n                                    }}\n                                >\n                                    <Icon icon=\"codicon:list-filter\" color=\"black\" width={24} className=\"me-3\"/>\n                                    <div>\n                                        Image Sequence\n                                        <p className=\"mb-0\">Images sequence extracted from a video</p>\n                                    </div>\n                                </NavLink>\n                            </NavItem>\n                        </Nav>\n                    </Col>\n                }\n                <Col sm={12}>\n                    <TabContent activeTab={activeTab}>\n                        <TabPane tabId={MultiImageTabs.MultipleImages}>\n                            <Row>\n                                {isMultiple &&\n                                    <Col sm={12}>\n                                        <ObservationUploadImg small={true} detectImage={detectImage} imageFormat={false}\n                                                              maxLimit={false} multiple={false}/>\n                                    </Col>\n                                }\n                                {showUploadedPreview &&\n                                    <Col sm={12}>\n                                        <div className=\"d-flex justify-content-start justify-content-sm-end d-sm-none\">\n                                            <ObservationUploadedImg obvType={obvType} step={step} error={error}\n                                                                    remove={remove}/></div>\n                                    </Col>\n                                }\n                                <Col sm={12}>\n                                    <ImagePreview remove={remove}/>\n                                </Col>\n\n                                <Col sm={12}>\n                                    <ObservationCategory obvType={obvType} error={error}/>\n                                </Col>\n                                <Col sm={12}>\n                                    <Button type=\"button\" className=\"mt-3\" disabled={!disableNext}\n                                            onClick={() => toggleTab(Tabs.DateTimeLocation)}>Continue</Button>\n                                </Col>\n                            </Row>\n                        </TabPane>\n                        <TabPane tabId={MultiImageTabs.ImageSequence}>\n                            <Row>\n                                {isMultiple &&\n                                    <Col sm={12}>\n                                        <div className=\"small-upload_box mb-3\">\n                                            <ObservationUploadImg detectImage={detectImage} imageFormat={false}\n                                                                  maxLimit={false} multiple={false}/>\n                                        </div>\n                                    </Col>\n                                }\n                                {showUploadedPreview &&\n                                    <Col sm={12}>\n                                        <div className=\"d-flex justify-content-end d-sm-none\"><ObservationUploadedImg\n                                            obvType={obvType} step={step} error={error} remove={remove}/></div>\n                                    </Col>\n                                }\n                                <Col sm={12}>\n                                    <ImagePreview remove={remove}/>\n                                </Col>\n                                <Col sm={12}>\n                                    <Button type=\"button\"\n                                            onClick={() => toggleTab(Tabs.DateTimeLocation)}>Continue</Button>\n                                </Col>\n                            </Row>\n                        </TabPane>\n                    </TabContent>\n                </Col>\n            </Row>\n\n            {isConfirmPopUp && shouldShowConfirmation &&\n                <DeleteItemConfirmationPopup open={isConfirmPopUp && shouldShowConfirmation}\n                                             handleClose={handleConfirmationPopUp}/>\n            }\n        </>\n    );\n};\n\nObservationAfterImageUpload.propTypes = {\n    remove: PropTypes.func,\n};\nexport default ObservationAfterImageUpload;\n","import { Row, Col, FormGroup, Input, Button } from \"reactstrap\"\nimport {Tabs} from \"../../helpers/observation\";\n\nimport \"../../assets/scss/component/observationEquipment.scss\";\nimport EquipmentForm from '../Shared/EquipmentForm';\nimport useObservations from \"../../hooks/useObservations\";\n\nconst EquipmentDetailsForm = (props) =>{\n    const {toggleTab,handleInput,handleOtherCamera,cameraDetails, error, step, isSwitchOn } = props;\n    const {\n        observationData\n    } = useObservations();\n    return (\n        <>\n        <Row>\n            <EquipmentForm step={step} handleInput1={handleInput} updateSetting={cameraDetails} error={error} isSwitchOn={isSwitchOn}/>\n\n            <Col md=\"12\">\n                <div className=\"border-line\"/>\n                <FormGroup>\n                    <h6>Elevation angle of your camera in degrees</h6>\n                    <Input\n                    type=\"number\"\n                    name=\"elevation_angle\"\n                    value={observationData?.elevation_angle ?? ''}\n                    placeholder=\"e.g. 20\"\n                    onChange={(e)=>handleOtherCamera(e)}\n                    />\n                    <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b>20</span>\n                </FormGroup>\n            </Col>\n            <Col md={12}>\n                <FormGroup>\n                    <h6>Link to the video of this event</h6>\n                    <Input\n                    type=\"url\"\n                    name=\"video_url\"\n                    value={observationData?.video_url ?? ''}\n                    onChange={(e)=>handleOtherCamera(e)}\n                    placeholder=\"e.g. https://www.youtube.com/watch?v=PjZ2Y2nn000\"\n                    />\n                    <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b>https://www.youtube.com/watch?v=PjZ2Y2nn000</span>\n                </FormGroup>\n            </Col>\n            <Col md={12}>\n                <FormGroup>\n                    <h6>Please share the story of your capture</h6>\n                    <div className=\"border-line my-2\"/>\n                    <Input\n                        type=\"textarea\"\n                        name=\"story\"\n                        value={observationData?.story ?? ''}\n                        onChange={(e)=>handleOtherCamera(e)}\n                        placeholder=\"We would love to hear more about your experience.\"\n                    />\n                </FormGroup>\n            </Col>\n            <Col md={12}>\n                <Button className=\"gray-outline-btn me-2\"  onClick={() =>toggleTab(Tabs.DateTimeLocation)}>Back</Button>\n                <Button type=\"submit\" disabled={(!(cameraDetails?.camera_type && cameraDetails?.focal_length && cameraDetails?.aperture)) }>Submit</Button>\n            </Col>\n        </Row>\n        </>\n    )\n}\n\nexport default EquipmentDetailsForm;","import {\n  Button,\n  Col,\n  Container,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Nav,\n  NavItem,\n  NavLink,\n  Row,\n  TabContent,\n  TabPane,\n  UncontrolledAlert,\n} from \"reactstrap\";\nimport \"../../assets/scss/component/uploadObservationImage.scss\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport useObservations from \"../../hooks/useObservations\";\nimport useAuth from \"../../hooks/useAuth\";\nimport axios from \"../../api/axios\";\nimport { baseURL, cameraSettingFields, routeUrls } from \"../../helpers/url\";\nimport { Tabs } from \"../../helpers/observation\";\n\nimport ObservationLocation from \"../../components/Observation/ObservationLocation\";\nimport ObservationUploadedImg from \"../../components/Observation/ObservationUploadedImg\";\nimport ObservationImages from \"../../components/Observation/ObservationImages\";\nimport ObservationProgress from \"../../components/Observation/ObservationProgress\";\nimport ObservationAfterImageUpload from \"../../components/Observation/ObservationAfterImageUpload\";\nimport EquipmentDetailsForm from \"../../components/Observation/EquipmentDetailsForm\";\nimport Loader from \"../../components/Shared/Loader\";\n\nconst AddObservation = () => {\n  const { auth } = useAuth();\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    observationSteps,\n    setObservationSteps,\n    observationImages,\n    setObservationImages,\n    observationData,\n    setObservationData,\n    observationType,\n    setObservationType,\n    cameraDetails,\n    setCameraDetails,\n  } = useObservations();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [activeTab, setActiveTab] = useState(Tabs.ObservationImages);\n  const [next, setNext] = useState(false);\n  const [isSwitchOn, setSwitchOn] = useState(false);\n  const [updateMode, setUpdateMode] = useState(false);\n  const [reset, setReset] = useState(false);\n  const [success, setSuccess] = useState(null);\n  const [error, setError] = useState(null);\n  const [deletedImage, setDeletedImage] = useState(null);\n  const [draft, setDraft] = useState(true);\n  const [draftData, setDraftData] = useState();\n\n  let disabledLocation = false;\n  for (let index = 0; index < observationData?.map_data?.length; index++) {\n    if (\n      observationData?.map_data?.[index] &&\n      observationData?.map_data?.[index]?.category_map?.category.length > 0\n    ) {\n      disabledLocation = true;\n    } else {\n      disabledLocation = false;\n      break;\n    }\n  }\n\n  let disabledEquipment = false;\n  for (let index = 0; index < observationData?.map_data?.length; index++) {\n    if (\n      observationData?.map_data?.[index] &&\n      observationData?.map_data?.[index]?.azimuth &&\n      observationData?.map_data?.[index]?.obs_time &&\n      observationData?.map_data?.[index]?.obs_date &&\n      observationData?.map_data?.[index]?.timezone\n    ) {\n      disabledEquipment = true;\n    } else {\n      disabledEquipment = false;\n      break;\n    }\n  }\n\n  const disabledLocationTab =\n    observationData?.image_type !== 3 ? disabledLocation && next : next;\n  const disabledEquipmentTab = disabledLocation && next && disabledEquipment;\n\n  // Toggle Tabs\n  const toggleTab = (tab) => {\n    if (activeTab !== tab) {\n      setActiveTab(tab);\n    }\n    window.scrollTo(0, 0);\n  };\n\n  const handleInput = (e) => {\n    let name = e.target.name,\n      value = e.target.value;\n    setCameraDetails({\n      ...cameraDetails,\n      [name]: value,\n    });\n\n    setObservationData((prev) => {\n      return {\n        ...prev,\n        camera: cameraDetails,\n      };\n    });\n  };\n\n  const handleOtherCamera = (e) => {\n    let name = e.target.name,\n      value = e.target.value;\n\n    setObservationData((prev) => {\n      return {\n        ...prev,\n        [name]: value,\n      };\n    });\n  };\n\n  const handleImageInput = (e, address = null) => {\n    let observationArray = { ...observationImages };\n    if (e === \"address\") {\n      observationArray.data[observationImages?.selected_image_index][\n        \"location\"\n      ] = address;\n      if (observationArray.data[1]) {\n        observationArray.data[1].category_map[\"location\"] = address;\n      }\n      if (observationArray.data[2]) {\n        observationArray.data[2].category_map[\"location\"] = address;\n      }\n    } else {\n      let name = e.target.name,\n        value = e.target.value;\n\n      if (name === \"is_other\") {\n        observationArray.data[\n          observationImages?.selected_image_index\n        ].category_map[name] = e.target.checked;\n        if (observationData?.image_type === 3) {\n          if (observationArray.data[1]) {\n            observationArray.data[1].category_map[name] = e.target.checked;\n          }\n          if (observationArray.data[2]) {\n            observationArray.data[2].category_map[name] = e.target.checked;\n          }\n        }\n      } else {\n        if (name === \"is_precise_azimuth\") {\n          observationArray.data[observationImages?.selected_image_index][name] =\n            e.target.checked === true ? 1 : 0;\n          if (observationData?.image_type === 3) {\n            if (observationArray.data[1]) {\n              observationArray.data[1][\"is_precise_azimuth\"] =\n                e.target.checked === true ? 1 : 0;\n            }\n            if (observationArray.data[2]) {\n              observationArray.data[2][\"is_precise_azimuth\"] =\n                e.target.checked === true ? 1 : 0;\n            }\n          }\n          if (e.target.checked === false) {\n            observationArray.data[observationImages?.selected_image_index][\n              \"azimuth\"\n            ] =\n              observationArray && observationArray.data\n                ? observationArray.data[\n                    observationImages?.selected_image_index\n                  ][\"azimuth\"]\n                : undefined;\n            if (observationData?.image_type === 3) {\n              if (observationArray.data[1]) {\n                observationArray.data[1][\"azimuth\"] =\n                  observationArray?.data?.[0][\"azimuth\"];\n              }\n              if (observationArray.data[2]) {\n                observationArray.data[2][\"azimuth\"] =\n                  observationArray?.data?.[0][\"azimuth\"];\n              }\n            }\n          }\n        } else {\n          observationArray.data[observationImages?.selected_image_index][name] =\n            value;\n          if (observationData?.image_type === 3) {\n            if (observationArray.data[1]) {\n              observationArray.data[1][name] = value;\n            }\n            if (observationArray.data[2]) {\n              observationArray.data[2][name] = value;\n            }\n          }\n        }\n      }\n    }\n    setObservationImages(observationArray);\n  };\n\n  const handlesetDraft = () => {\n    setIsLoading(true);\n    sendData(1).then((r) => r);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setDraft(0);\n    sendData(0).then((r) => r);\n  };\n\n  const sendData = async (draft) => {\n    const cloneDeep = require(\"lodash.clonedeep\");\n    const formData = new FormData();\n    const finalData = cloneDeep(observationData);\n    finalData?.map_data?.map((item, index) => {\n      delete item[\"image\"];\n      formData.append(\"image_\" + index, item.item);\n      return true;\n    });\n    if (draft === 1) {\n      finalData.is_draft = draft;\n    }\n    finalData.camera = cameraDetails\n      ? cameraDetails\n      : auth?.camera\n      ? auth?.camera?.id\n      : null;\n    formData.append(\"data\", JSON.stringify(finalData));\n\n    if (!updateMode) {\n      await axios\n        .post(baseURL.api + \"/observation/upload_observation/\", formData, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${auth?.token?.access}`,\n          },\n        })\n        .then((response) => {\n          setError(null);\n          setSuccess({\n            data: response?.data,\n            status: response?.status,\n            message: response?.message,\n          });\n          setIsLoading(false);\n          window.scrollTo(0, 0);\n          setTimeout(function () {\n            handleReset();\n          }, 500);\n        })\n        .catch((error) => {\n          console.log(error.response);\n          setIsLoading(false);\n          setError({\n            data: error?.response?.data,\n            status: error?.response?.status,\n            message: error?.message,\n          });\n        });\n    } else {\n      await axios\n        .put(\n          baseURL.api +\n            `/observation/update_observation/${observationSteps?.mode?.id}/`,\n          formData,\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${auth?.token?.access}`,\n            },\n          }\n        )\n        .then((response) => {\n          setError(null);\n          setSuccess({\n            data: response?.data,\n            status: response?.status,\n            message: response?.message,\n          });\n          setIsLoading(false);\n          window.scrollTo(0, 0);\n          setTimeout(function () {\n            handleReset();\n          }, 500);\n        })\n        .catch((error) => {\n          console.log(error.response);\n          setIsLoading(false);\n          setError({\n            data: error?.response?.data,\n            status: error?.response?.status,\n            message: error?.message,\n          });\n        });\n    }\n  };\n\n  const getCameraDetail = async (e) => {\n    if (e.target.checked === true) {\n      await axios\n        .get(baseURL.api + \"/users/camera_setting/\", {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${auth?.token?.access}`,\n          },\n        })\n        .then((success) => {\n          setCameraDetails(success?.data);\n        })\n        .catch((error) => {\n          console.log(error.response);\n        });\n    } else {\n      setCameraDetails(cameraSettingFields);\n    }\n  };\n\n  const handleContinue = () => {\n    setNext(!next);\n  };\n\n  const handleReset = (e) => {\n    navigate(\"/observations\");\n    setReset(true);\n    setObservationSteps({\n      total: 3,\n      active: 1,\n      mode: {\n        update: true,\n        id: false,\n      },\n    });\n    setObservationImages([]);\n    setObservationData(null);\n    console.clear();\n  };\n\n  const removeItem = (id) => {\n    let newImage = [];\n    observationData?.map_data\n      ?.filter((item) => item.id !== id)\n      .map((item, index) => {\n        return newImage.push(item);\n      });\n    if (newImage.length > 0) {\n      setObservationSteps((prev) => {\n        return {\n          ...prev,\n          selected_image_id: newImage?.[0].id,\n          selected_image_index: 0,\n          observation_count: newImage.length,\n        };\n      });\n      setObservationImages((prev) => {\n        return {\n          ...prev,\n          observation_count: newImage.length,\n          selected_image_id: newImage?.[0].id,\n          selected_image_index: 0,\n          data: newImage,\n        };\n      });\n      setObservationData((prev) => {\n        return {\n          ...prev,\n          map_data: newImage,\n        };\n      });\n      setDeletedImage(id);\n    } else {\n      window.location.reload();\n    }\n  };\n\n  const showUploadedPreview = () => {\n    return !(\n      !(\n        observationImages?.data &&\n        next &&\n        activeTab === Tabs.ObservationImages\n      ) &&\n      !(\n        activeTab === Tabs.DateTimeLocation &&\n        !(observationType?.image_type === 3) &&\n        !(observationType?.image_type === 1)\n      )\n    );\n  };\n\n  const getFileName = (url) => {\n    return url.split(/[#?]/)[0].split(\"/\").pop().trim();\n  };\n\n  const getObservationDataForUpdate = async (obvId) => {\n    await axios\n      .get(baseURL.api + `/observation/get_draft_data/${obvId}/`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${auth?.token?.access}`,\n        },\n      })\n      .then((response) => {\n        let data = response?.data?.data;\n        setDraftData({\n          image_type: data.image_type,\n          elevation_angle: data.elevation_angle,\n          video_url: data.video_url,\n          camera: data.camera_data,\n          question_field_one: data.question_field_one,\n          question_field_two: data.question_field_two,\n          story: data.story,\n          map_data: data.images,\n        });\n        setCameraDetails(data?.camera_data);\n        setUpdateMode(true);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const toBase64 = (file) =>\n    new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = (error) => reject(error);\n    });\n\n  useEffect(() => {\n    draftData?.map_data?.map((item, index) => {\n      let imageUrl = item.image,\n        fileName = getFileName(imageUrl);\n      return fetch(imageUrl)\n        .then(async (response) => {\n          const contentType = response.headers.get(\"content-type\");\n          const blob = await response\n            .blob()\n            .catch((error) => console.log(\"blob error\", error));\n          const file = new File([blob], fileName, { contentType });\n          const image = await toBase64(file).catch((error) =>\n            console.log(\"base64 Error\", error)\n          );\n          item.compressed_image = null;\n          setTimeout(function () {\n            item.item = file;\n            item.image = image;\n            item.name = file.name;\n            item.lastModified = file.lastModified;\n          }, 500);\n          return file;\n        })\n        .catch((error) =>\n          console.log(\n            `Error converting the CDN image to file object at index [${index}] [${error}]`\n          )\n        );\n    });\n  }, [draftData, setObservationImages]);\n\n  useEffect(() => {\n    let id = observationSteps?.mode?.id,\n      updateUrl = location.pathname === `/${routeUrls.observationsUpdate}`,\n      obvType = observationSteps?.mode?.type;\n\n    if (updateUrl && obvType === \"draft\") {\n      getObservationDataForUpdate(id).then((r) => r);\n      setObservationSteps((prev) => {\n        return {\n          ...prev,\n          converted: true,\n        };\n      });\n    }\n\n    if (updateUrl && obvType !== \"draft\") {\n      return navigate(\"/observations\");\n    }\n  }, [location?.pathname, updateMode, observationSteps?.converted]);\n\n  useEffect(() => {\n    let existingObvImageData = { ...observationImages },\n      obvType = { ...observationType };\n\n    setObservationType({\n      ...obvType,\n      image_type: draftData?.image_type === 2 ? 1 : draftData?.image_type,\n    });\n    setObservationImages({\n      ...existingObvImageData,\n      data: draftData?.map_data,\n      selected_image_id: draftData?.map_data[0].id,\n      selected_image_index: 0,\n      observation_count: draftData?.map_data.length,\n    });\n  }, [draftData, setObservationImages]);\n\n  // Set Progress Bar\n  useEffect(() => {\n    function setActiveTabForProgressBar() {\n      if (activeTab === Tabs.ObservationImages) {\n        return 1;\n      } else if (activeTab === Tabs.DateTimeLocation) {\n        return 2;\n      } else {\n        return 3;\n      }\n    }\n\n    setObservationSteps((prev) => {\n      return {\n        ...prev,\n        active: setActiveTabForProgressBar(),\n        selected_image_id: observationImages?.selected_image_id,\n        selected_image_index: observationImages?.selected_image_index,\n        is_draft: draft,\n      };\n    });\n  }, [activeTab, draft, observationImages, setObservationSteps]);\n\n  return (\n    <div className=\"position-relative\">\n      {isLoading && <Loader fixContent={true} />}\n      {success && (\n        <UncontrolledAlert\n          color=\"success\"\n          data-dismiss=\"alert\"\n          dismissible=\"true\"\n          className=\"text-center mt-3 d-inline-block w-100\"\n        >\n          {success?.data?.success}\n        </UncontrolledAlert>\n      )}\n      <Form\n        className=\"observation-form upload-observation-form-main\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"common-top-button-wrapper\">\n          <Container>\n            <div className=\"common-top-button-wrapper-inner\">\n              <Button\n                className=\"gray-outline-btn\"\n                onClick={handleReset}\n                disabled={!observationImages?.data}\n              >\n                Cancel\n              </Button>\n              <div className=\"top-right-btn\">\n                <Button\n                  className=\"gray-outline-btn me-2 me-sm-3\"\n                  onClick={handlesetDraft}\n                  disabled={!next}\n                >\n                  Save as draft\n                </Button>\n                <Button\n                  type=\"submit\"\n                  disabled={\n                    !(\n                      cameraDetails?.camera_type &&\n                      cameraDetails?.focal_length &&\n                      cameraDetails?.aperture\n                    )\n                  }\n                >\n                  Submit\n                </Button>\n              </div>\n            </div>\n          </Container>\n        </div>\n        <section className=\"upload-observation-form-inner\">\n          <Container>\n            <Row>\n              <Col md={3} sm={12}>\n                <div className=\"observation-form-left-tab\">\n                  <ObservationProgress step={observationSteps} />\n                  <Nav tabs className=\"flex-column\">\n                    <NavItem>\n                      <NavLink\n                        className={\n                          activeTab === Tabs.ObservationImages ? \"active\" : \"\"\n                        }\n                        onClick={() => {\n                          if (\n                            observationData?.map_data?.[0]?.category_map\n                              ?.category &&\n                            next\n                          ) {\n                            toggleTab(Tabs.ObservationImages);\n                          }\n                        }}\n                      >\n                        Observation Images\n                      </NavLink>\n                    </NavItem>\n                    <NavItem>\n                      <NavLink\n                        className={`${\n                          activeTab === Tabs.DateTimeLocation ? \"active\" : \"\"\n                        } ${disabledLocationTab ? \"\" : \"disabled\"}`}\n                        onClick={() => {\n                          if (disabledLocationTab) {\n                            toggleTab(Tabs.DateTimeLocation);\n                          }\n                        }}\n                      >\n                        Date, Time & Location\n                      </NavLink>\n                    </NavItem>\n                    <NavItem>\n                      <NavLink\n                        className={`${\n                          activeTab === Tabs.EquipmentDetails ? \"active\" : \"\"\n                        } ${disabledEquipmentTab ? \"\" : \"disabled\"}`}\n                        onClick={() => {\n                          if (disabledEquipmentTab) {\n                            toggleTab(Tabs.EquipmentDetails);\n                          }\n                        }}\n                      >\n                        Equipment Details\n                      </NavLink>\n                    </NavItem>\n                  </Nav>\n                </div>\n              </Col>\n\n              <Col\n                md={\n                  observationImages?.data?.length > 0 &&\n                  next &&\n                  !(activeTab === Tabs.EquipmentDetails)\n                    ? 7\n                    : 9\n                }\n                sm={\n                  observationImages?.data?.length > 0 &&\n                  next &&\n                  !(activeTab === Tabs.EquipmentDetails)\n                    ? 9\n                    : 12\n                }\n              >\n                <div className=\"observation-form-middle-tab\">\n                  <TabContent activeTab={activeTab}>\n                    <TabPane tabId={Tabs.ObservationImages}>\n                      {next ? (\n                        <ObservationAfterImageUpload\n                          mode={updateMode}\n                          showUploadedPreview={showUploadedPreview}\n                          obvType={observationType}\n                          step={observationSteps}\n                          error={error}\n                          detectImage={deletedImage}\n                          remove={removeItem}\n                          toggleTab={toggleTab}\n                          disableNext={disabledLocationTab}\n                          handleImageInput={handleImageInput}\n                        />\n                      ) : (\n                        <ObservationImages\n                          mode={updateMode}\n                          detectImage={deletedImage}\n                          remove={removeItem}\n                          proceedNext={() => handleContinue()}\n                        />\n                      )}\n                    </TabPane>\n                    <TabPane\n                      tabId={Tabs.DateTimeLocation}\n                      className=\"observation_location\"\n                    >\n                      {showUploadedPreview() && (\n                        <div className=\"observation-form-right-tab d-flex justify-content-start justify-content-sm-end d-sm-none position-relative position-sm-sticky\">\n                          <ObservationUploadedImg\n                            obvType={observationType}\n                            step={observationSteps}\n                            error={error}\n                            remove={removeItem}\n                          />\n                        </div>\n                      )}\n                      {observationImages?.data && (\n                        <ObservationLocation\n                          mode={updateMode}\n                          obvType={observationType}\n                          step={observationSteps}\n                          error={error}\n                          toggleTab={toggleTab}\n                          handleImageInput={handleImageInput}\n                          disableNext={disabledEquipmentTab}\n                        />\n                      )}\n                    </TabPane>\n                    <TabPane\n                      tabId={Tabs.EquipmentDetails}\n                      className=\"observation_equipment\"\n                    >\n                      {auth?.user?.camera && (\n                        <FormGroup\n                          check\n                          className=\"d-flex align-items-center position-relative mb-3\"\n                        >\n                          <Label check>\n                            <Input\n                              type=\"checkbox\"\n                              name=\"profileData\"\n                              checked={isSwitchOn}\n                              disabled={!auth?.user?.camera}\n                              onChange={(e) => {\n                                setSwitchOn(!isSwitchOn);\n                                getCameraDetail(e).then((r) => r);\n                              }}\n                            />\n                            Pull data from my profile\n                          </Label>\n                        </FormGroup>\n                      )}\n                      <EquipmentDetailsForm\n                        step={observationSteps}\n                        isSwitchOn={isSwitchOn}\n                        error={error}\n                        handleInput={handleInput}\n                        toggleTab={toggleTab}\n                        cameraDetails={cameraDetails}\n                        handleOtherCamera={handleOtherCamera}\n                        getCameraDetail={getCameraDetail}\n                      />\n                    </TabPane>\n                  </TabContent>\n                </div>\n              </Col>\n\n              {showUploadedPreview() && (\n                <Col\n                  md={2}\n                  sm={3}\n                  className=\"d-none d-sm-block overflow-hidden\"\n                >\n                  <div className=\"observation-form-right-tab\">\n                    <ObservationUploadedImg\n                      obvType={observationType}\n                      step={observationSteps}\n                      error={error}\n                      remove={removeItem}\n                    />\n                  </div>\n                </Col>\n              )}\n            </Row>\n          </Container>\n        </section>\n      </Form>\n    </div>\n  );\n};\n\nexport default AddObservation;\n","import { Outlet } from \"react-router-dom\";\nimport {createContext, useEffect, useState} from \"react\";\nimport { cameraSettingFields } from \"../../helpers/url\";\n\nexport const ObservationContext = createContext({});\n\nconst Observations = () => {\n    const [observationType, setObservationType] = useState({\n        image_type: 1\n    });\n\n    const [observationSteps, setObservationSteps] = useState({\n        total: 3,\n        active: 1,\n        mode: {\n            update: false\n        }\n    });\n    const [observationImages, setObservationImages] = useState([]);\n    const [cameraDetails, setCameraDetails] = useState(cameraSettingFields);\n    const [observationCategory, setObservationCategory] = useState([]);\n    const [observationData, setObservationData] = useState({});\n\n    useEffect(()=> {\n        let data = (observationImages?.data) ? [...observationImages?.data] : []\n        setObservationData({\n            // is_draft: observationSteps?.is_draft ? 1 : 0,\n            image_type: observationType?.image_type,\n            map_data: data,\n            elevation_angle: null,\n            video_url : ''\n        })\n    }, [observationImages?.data, observationSteps?.is_draft, observationType?.image_type])\n\n    return(\n        <ObservationContext.Provider value={\n            {\n                observationType,\n                setObservationType,\n                observationSteps,\n                setObservationSteps,\n                observationImages,\n                setObservationImages,\n                observationCategory,\n                setObservationCategory,\n                observationData,\n                setObservationData,\n                cameraDetails, \n                setCameraDetails\n            }\n        }>\n            <Outlet />\n        </ObservationContext.Provider>\n    )\n}\n\nexport default Observations;"],"names":["props","handleInput1","updateSetting","error","md","className","type","name","placeholder","value","camera_type","onChange","e","data","maxLength","focal_length","aperture","iso","shutter_speed","fps","question_field_one","question_field_two","maxLimit","imageFormat","multiple","handleUploadImage","small","handleObvAdd","defaultUploadBox","blogUpload","htmlFor","icon","color","width","height","id","accept","count","size","duplicate","onClick","Tabs","ObservationImages","DateTimeLocation","EquipmentDetails","MultiImageTabs","MultipleImages","ImageSequence","imageDetails","Details","Equipment","Comments","obvType","default","verified","unverified","denied","draft","uploadImageDefaultState","random","baseImage","item","userLocation","sameAsFirstMap","sameAsFirstDate","image","lastModified","latitude","longitude","location","country_code","obs_date","obs_time","timezone","azimuth","time_accuracy","is_precise_azimuth","category_map","category","is_other","other_value","directionValue","angle","getdirectionDegree","key","degree","getdirectionAngle","observationImages","useContext","ObservationContext","useDebugValue","GoogleMapsAPI","process","Geocode","Map","getCity","addressArray","i","length","types","long_name","getCountry","country","short_name","getArea","j","getState","event","setState","target","onInfoWindowClose","onMarkerDragEnd","newLat","latLng","lat","newLng","lng","then","response","address","results","formatted_address","address_components","city","area","state","short_address","filter","x","undefined","toString","markerPosition","mapPosition","handleState","console","onPlaceSelected","place","latValue","geometry","lngValue","countryCode","center","this","log","Number","nextProps","nextState","AsyncMap","withGoogleMap","google","defaultZoom","zoom","defaultCenter","defaultOptions","disableDefaultUI","draggable","onDragEnd","position","style","searchInputClass","onClose","padding","margin","googleMapURL","loadingElement","containerElement","containerPosition","mapElement","mapContainer","borderRadius","mapRadius","Component","auth","useAuth","useObservations","setObservationImages","observationSteps","observationCategory","setObservationCategory","useState","setCategory","oldCategory","setOldCategory","isChecked","setIsChecked","selectedCategory","setSelectedCategory","ObservationData","errorData","Object","values","isPopoverContentOpen","setIsPopoverContentOpen","tippyRef","useRef","ImageCarousel","carouselContent","src","Images","map","index","alt","navigation","modules","Navigation","PopoverContent","isOpen","useEffect","categoryList","newCategory","toLowerCase","replaceAll","push","prev","updatedCategory","prevCategory","selected_image_index","image_type","selected_image_id","imagItem","sm","checked","find","list","hidden","parseFloat","includes","filterValue","onCategoryChange","content","interactive","appendTo","document","body","animation","theme","reference","ref","showCategory","toggleTab","handleImageInput","step","disableNext","fref","address1","setAddress","initialAddress","setInitialAddress","isLoaded","setIsLoaded","observationData","isActiveDire","setActiveDire","angleDegree","setAngleDegree","isTimezoneOpen","setIsTimezoneOpen","searchTimeZone","setSearchTimeZone","setSameAsMap","sameAsDateTime","setSameAsDateTime","current","handleChangeLatLng","handleCopyData","observationArray","observationAddress","keys","observationMap","copyImages","k","active","xxl","check","MapWrapper","flag","lg","ReactCountryFlag","addressState","handleChangeLat","handleChangeLng","max","moment","Date","format","toggle","header","findTimeZone","indexOf","direction","directionWrapper","querySelector","getAngleName","getElementById","getAttribute","classList","remove","add","selectDirection","dirData","min","disabled","existingObvImageData","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","handleUpdateImage","fileList","files","catch","markTabActive","preview","setPreview","activeTab","setActiveTab","useLayoutEffect","tab","LazyLoad","converted","detectImage","mode","setCameraDetails","images","setImages","setError","user","location_metadata","observation_count","cameraSettingFields","UploadImageUI","Array","from","forEach","onloadend","base64String","replace","Math","substring","fileSize","toFixed","prevState","proceedNext","isMultiple","progress","setProgress","total","imageDelete","open","handleClose","centered","backdrop","keyboard","showUploadedPreview","observationType","setObservationType","setIsMultiple","setActiveImageTab","isOther","isConfirmPopUp","setIsConfirmPopUp","shouldShowConfirmation","setShouldShowConfirmation","toggleImageTab","handleConfirmationPopUp","tabs","tabId","handleInput","handleOtherCamera","cameraDetails","isSwitchOn","EquipmentForm","elevation_angle","video_url","story","isLoading","setIsLoading","setObservationSteps","setObservationData","useLocation","navigate","useNavigate","next","setNext","setSwitchOn","updateMode","setUpdateMode","setReset","success","setSuccess","deletedImage","setDeletedImage","setDraft","draftData","setDraftData","disabledLocation","map_data","disabledEquipment","disabledLocationTab","disabledEquipmentTab","window","scrollTo","sendData","cloneDeep","require","formData","FormData","finalData","append","is_draft","camera","JSON","stringify","axios","baseURL","headers","Authorization","token","access","status","message","setTimeout","handleReset","getCameraDetail","update","clear","removeItem","newImage","reload","getObservationDataForUpdate","obvId","camera_data","imageUrl","fileName","url","split","pop","trim","getFileName","fetch","contentType","get","blob","File","compressed_image","updateUrl","pathname","routeUrls","r","Loader","fixContent","dismissible","onSubmit","preventDefault","createContext","Provider"],"sourceRoot":""}