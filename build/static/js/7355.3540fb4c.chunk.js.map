{"version":3,"file":"static/js/7355.3540fb4c.chunk.js","mappings":"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","sources":["components/Shared/EquipmentForm.jsx","components/Shared/UploadImageUI.jsx","components/Upload/LazyLoad.js","hooks/useObservations.js","config.jsx","components/MapWrapper.jsx","components/Observation/ObservationCategory.jsx","components/Observation/ObservationLocation.jsx","components/Observation/ObservationUpdateUploadedImages.jsx","components/Observation/ObservationUploadedImg.jsx","components/Observation/ObservationUploadImg.jsx","components/Observation/ObservationImages.jsx","components/Observation/ObservationProgress.jsx","components/Observation/ImagePreview.jsx","components/Popup/DeleteItemConfirmationPopup.jsx","components/Observation/ObservationAfterImageUpload.jsx","components/Observation/EquipmentDetailsForm.jsx","pages/Observation/AddObservation.jsx","pages/Observation/Observations.jsx"],"sourcesContent":["import {FormGroup, Input, Col} from \"reactstrap\";\r\n\r\nconst EquipmentForm = (props) => {\r\n    const {handleInput1, updateSetting, error} = props;\r\n    return (\r\n        <>\r\n            <Col md=\"12\">\r\n                <FormGroup>\r\n                    <label>Camera Type<span className=\"required\">Required</span></label>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"camera_type\"\r\n                        placeholder=\"Canon\"\r\n                        // required\r\n                        value={updateSetting?.camera_type}\r\n                        onChange={(e) => handleInput1(e)}/>\r\n                    <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b>Canon</span>\r\n                    {error?.data?.camera_type &&\r\n                        <span className=\"text-danger small\">{error?.data?.camera_type}</span>\r\n                    }\r\n                </FormGroup>\r\n                <div className=\"border-line\"/>\r\n            </Col>\r\n            <Col md=\"12\">\r\n                <FormGroup>\r\n                    <h6>Lens Information</h6>\r\n                </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\">\r\n                <FormGroup>\r\n                    <label>Focal Length<span className=\"required\">Required</span></label>\r\n                    <Input\r\n                        type=\"number\"\r\n                        maxLength={10}\r\n                        name=\"focal_length\"\r\n                        value={updateSetting?.focal_length}\r\n                        placeholder=\"35 mm\"\r\n                        // required\r\n                        onChange={(e) => handleInput1(e)}\r\n                    />\r\n                    <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b>35 mm</span>\r\n                    {error?.data?.focal_length &&\r\n                        <span className=\"text-danger small\">{error?.data?.focal_length}</span>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\">\r\n                <FormGroup>\r\n                    <label>Aperture<span className=\"required\">Required</span></label>\r\n                    <Input\r\n                        type=\"number\"\r\n                        name=\"aperture\"\r\n                        // required\r\n                        value={updateSetting?.aperture ? updateSetting?.aperture : updateSetting?.aperture === null ?? ''}\r\n                        placeholder=\"1.4\"\r\n                        onChange={(e) => handleInput1(e)}\r\n                    />\r\n                    <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b>1.4</span>\r\n                    {error?.data?.aperture &&\r\n                        <span className=\"text-danger small\">{error?.data?.aperture}</span>\r\n                    }\r\n                </FormGroup>\r\n            </Col>\r\n            <Col md=\"12\">\r\n                <div className=\"border-line\"/>\r\n                <FormGroup>\r\n                    <h6>Camera Settings</h6>\r\n                </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\">\r\n                <FormGroup>\r\n                    <label>ISO</label>\r\n                    <Input\r\n                        type=\"number\"\r\n                        name=\"iso\"\r\n                        value={updateSetting?.iso}\r\n                        placeholder=\"100\"\r\n                        onChange={(e) => handleInput1(e)}\r\n                    />\r\n                    <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b>100</span>\r\n                </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\">\r\n                <FormGroup>\r\n                    <label>Shutter Speed (exposure time)</label>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"shutter_speed\"\r\n                        value={updateSetting?.shutter_speed}\r\n                        placeholder=\"1/15\"\r\n                        maxLength={10}\r\n                        onChange={(e) => handleInput1(e)}\r\n                    />\r\n                    <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b>1/15</span>\r\n                </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\">\r\n                <FormGroup>\r\n                    <label>Frame Rate (frames per second)</label>\r\n                    <Input type=\"number\" name=\"fps\" value={updateSetting?.fps} placeholder=\"24\"\r\n                           onChange={(e) => handleInput1(e)}/>\r\n                </FormGroup>\r\n            </Col>\r\n            <Col md=\"12\">\r\n                <div className=\"border-line\"/>\r\n                <FormGroup>\r\n                    <h6>How do you generally keep track of time?</h6>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"question_field_one\"\r\n                        value={updateSetting?.question_field_one}\r\n                        placeholder=\"Camera Time\"\r\n                        onChange={(e) => handleInput1(e)}\r\n                    />\r\n                    <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b>Camera Time</span>\r\n                </FormGroup>\r\n            </Col>\r\n            <Col md=\"12\">\r\n                <div className=\"border-line\"/>\r\n                <FormGroup>\r\n                    <h6>\r\n                        Do you use any special equipment attached to\r\n                        your camera (such as a filter)?\r\n                    </h6>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"question_field_two\"\r\n                        value={updateSetting?.question_field_two}\r\n                        placeholder=\"Polarizing Filter\"\r\n                        onChange={(e) => handleInput1(e)}\r\n                    />\r\n                    <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b>Polarizing Filter</span>\r\n                </FormGroup>\r\n            </Col>\r\n        </>\r\n    )\r\n}\r\nexport default EquipmentForm;","import \"../../assets/scss/component/initialUploadobservations.scss\";\r\nimport {FormGroup, Input, Label} from \"reactstrap\";\r\nimport {Icon} from \"@iconify/react/dist/iconify\";\r\n\r\nconst UploadImageUI = (props) => {\r\n    const {\r\n        maxLimit,\r\n        imageFormat,\r\n        multiple,\r\n        handleUploadImage,\r\n        error,\r\n        small,\r\n        handleObvAdd,\r\n        defaultUploadBox,\r\n        blogUpload\r\n    } = props;\r\n    return (\r\n        <div className=\"position-relative\">\r\n            <div\r\n                className={`upload-image_wrapper ${small ? \"small-upload_box mb-5\" : ''} ${blogUpload ? 'blog-upload-box' : ''}`}>\r\n                <div className=\"upload-ob-inner\">\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"UploadFile\">\r\n                            <div className=\"upload-info\">\r\n                                <Icon icon=\"bx:image-alt\" color=\"#737e96\" width=\"42\" height=\"42\"/>\r\n                                <p>{defaultUploadBox ? 'Upload your first observation' : 'Drag and drop images or click to upload'}</p>\r\n                                {maxLimit && <span className=\"text-black\">Max. Image Size: 5MB</span>}\r\n                                {imageFormat &&\r\n                                    <ul>\r\n                                        <li>\r\n                                            Common Image File Formats (JPEG or\r\n                                            JPG, PNG)\r\n                                        </li>\r\n                                    </ul>\r\n                                }\r\n\r\n                            </div>\r\n                        </Label>\r\n                        <Input\r\n                            type=\"file\"\r\n                            name=\"file\"\r\n                            id=\"UploadFile\"\r\n                            accept=\"image/jpg, image/jpeg, image/png\"\r\n                            multiple={multiple}\r\n                            onChange={(e) => handleUploadImage(e)}\r\n                        />\r\n                    </FormGroup>\r\n                </div>\r\n                {error?.count &&\r\n                    <span className=\"text-danger d-block small my-1 d-inline-block\">{error?.count} </span>\r\n                }\r\n                {error?.size &&\r\n                    <span className=\"text-danger d-block small my-1 d-inline-block\">{error?.size}</span>\r\n                }\r\n                {error?.duplicate &&\r\n                    <span className=\"text-info d-block small my-1 d-inline-block\">{error?.duplicate}</span>\r\n                }\r\n            </div>\r\n            {defaultUploadBox &&\r\n                <div className={`${defaultUploadBox ? 'mark-center' : ''}`}>\r\n                    <button onClick={(e) => handleObvAdd(e)}\r\n                            className={`btn btn-secondary`}>\r\n                        <Icon icon=\"heroicons-outline:upload\" width=\"25\" height=\"22\"/>\r\n                        Upload Observation\r\n                    </button>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default UploadImageUI;","import {useEffect, useState} from \"react\";\r\nimport {placeholder} from \"./placeholder\";\r\n\r\nconst LazyLoad = (props) => {\r\n    const {src, alt, imageClass, converted} = props;\r\n    const [imageSrc, setImageSrc] = useState(null)\r\n    const [imageRef, setImageRef] = useState('')\r\n\r\n    const onLoad = (event) => {\r\n        event.target.classList.add('loaded')\r\n    }\r\n    const onError = (event) => {\r\n        event.target.classList.add('has-error')\r\n    }\r\n\r\n    useEffect(() => {\r\n        let observer\r\n        let didCancel = false\r\n\r\n        if (imageRef && imageSrc !== src) {\r\n            if (IntersectionObserver) {\r\n                observer = new IntersectionObserver(\r\n                    (entries) => {\r\n                        entries.forEach((entry) => {\r\n                            if (\r\n                                !didCancel &&\r\n                                (entry.intersectionRatio > 0 || entry.isIntersecting)\r\n                            ) {\r\n                                setImageSrc(src)\r\n                                observer.unobserve(imageRef)\r\n                            }\r\n                        })\r\n                    },\r\n                    {\r\n                        threshold: 0.01,\r\n                        rootMargin: '75%',\r\n                    }\r\n                )\r\n                observer.observe(imageRef)\r\n            } else {\r\n                setImageSrc(src)\r\n            }\r\n        }\r\n        return () => {\r\n            didCancel = true\r\n            if (observer && observer.unobserve) {\r\n                observer.unobserve(imageRef)\r\n            }\r\n        }\r\n    }, [src, imageSrc, imageRef, converted])\r\n\r\n    return (\r\n        <>\r\n            <img\r\n                className={imageClass ? imageClass + ' img-fluid' : 'img-fluid'}\r\n                ref={setImageRef}\r\n                src={imageSrc}\r\n                alt={alt}\r\n                onLoad={onLoad}\r\n                onError={onError}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LazyLoad;","import {useContext, useDebugValue} from \"react\";\r\nimport {ObservationContext} from \"../pages/Observation/Observations\";\r\n\r\nconst useObservations = () => {\r\n    const { observationImages } = useContext(ObservationContext);\r\n    // useDebugValue(observationSteps, observationSteps => observationSteps ? 'Steps set' : \"Steps not set\")\r\n    useDebugValue(observationImages, observationImages => observationImages?.data ? 'Images set' : \"Images not set\")\r\n    return useContext(ObservationContext);\r\n}\r\n\r\nexport default useObservations;","export const ReactVapIdKey = process.env.REACT_VAPID_KEY1\r\nexport const GoogleMapsAPI = process.env.REACT_APP_GOOGLE_MAP_KEY","/* eslint-disable no-undef */\r\n\r\nimport React, { Component } from 'react';\r\nimport { withGoogleMap, GoogleMap, InfoWindow, Marker } from \"react-google-maps\";\r\nimport Geocode from \"react-geocode\";\r\nimport Autocomplete from 'react-google-autocomplete';\r\nimport { GoogleMapsAPI } from '../config';\r\nGeocode.setApiKey(GoogleMapsAPI);\r\n// Geocode.enableDebug();\r\n\r\nclass Map extends Component{\r\n\r\n\tconstructor( props ){\r\n\t\t\r\n\t\tsuper( props );\r\n\t\tthis.country = null;\r\n\t\tthis.address = null;\r\n\t\tthis.state = {\r\n\t\t\taddress: '',\r\n\t\t\tcity: '',\r\n\t\t\tarea: '',\r\n\t\t\tstate: '',\r\n\t\t\tcountryCode: '',\r\n\t\t\tshort_address: '',\r\n\t\t\tmapPosition: {\r\n\t\t\t\tlat: this.props.center.lat,\r\n\t\t\t\tlng: this.props.center.lng\r\n\t\t\t},\r\n\t\t\tmarkerPosition: {\r\n\t\t\t\tlat: this.props.center.lat,\r\n\t\t\t\tlng: this.props.center.lng\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * Get the current address from the default map position and set those values in the state\r\n\t */\r\n\tcomponentDidMount() {\r\n\t\t\r\n\t\tGeocode.fromLatLng( this.state.mapPosition.lat , this.state.mapPosition.lng ).then(\r\n\t\t\tresponse => {\r\n\t\t\t\tconst address = response.results[0].formatted_address,\r\n\t\t\t\t      addressArray =  response.results[0].address_components,\r\n\t\t\t\t      city = this.getCity( addressArray ),\r\n\t\t\t\t      area = this.getArea( addressArray ),\r\n\t\t\t\t      state = this.getState( addressArray ),\r\n\t\t\t\t\t  country = this.getCountry(addressArray)['short_name'],\r\n\t\t\t\t\t  short_address = [city,state,this.getCountry(addressArray)['long_name']].filter(x => x !== undefined && x !== null ).toString();\r\n\r\n\t\t\t\tconsole.log(short_address,'ffdf');\r\n\t\t\t\tthis.setState( {\r\n\t\t\t\t\taddress: ( address ) ? address : '',\r\n\t\t\t\t\tarea: ( area ) ? area : '',\r\n\t\t\t\t\tcity: ( city ) ? city : '',\r\n\t\t\t\t\tstate: ( state ) ? state : '',\r\n\t\t\t\t\tcountry: (country) ? country: '',\r\n\t\t\t\t\tshort_address: (short_address)? short_address : '',\r\n\t\t\t\t\tmarkerPosition: {\r\n\t\t\t\t\t\tlat: this.state.mapPosition.lat,\r\n\t\t\t\t\t\tlng: this.state.mapPosition.lng\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmapPosition: {\r\n\t\t\t\t\t\tlat: this.state.mapPosition.lat,\r\n\t\t\t\t\t\tlng: this.state.mapPosition.lng\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\r\n\t\t\t\t} )\r\n\t\t\t\tthis.country = country;\r\n\t\t\t\tthis.address = short_address;\r\n\t\t\t\tif(response){\r\n\r\n\t\t\t\t\tthis.props.handleState(false,[this.country,this.address,]);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tconsole.error( error );\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\thandleChangeLatLng(newLat,newLng) {\r\n\t\tnewLat = Number(newLat);\r\n\t\tnewLng = Number(newLng);\r\n\t\tGeocode.fromLatLng( newLat , newLng ).then(\r\n\t\t\tresponse => {\r\n\t\t\t\tconst address = response.results[0].formatted_address,\r\n\t\t\t\t      addressArray =  response.results[0].address_components,\r\n\t\t\t\t      city = this.getCity( addressArray ),\r\n\t\t\t\t      area = this.getArea( addressArray ),\r\n\t\t\t\t      state = this.getState( addressArray ),\r\n\t\t\t\t\t  country = this.getCountry(addressArray)['short_name'],\r\n\t\t\t\t\t  short_address = [city,state,this.getCountry(addressArray)['long_name']].filter(x => x !== undefined && x !== null ).toString();\r\n\t\t\t\tthis.setState( {\r\n\t\t\t\t\taddress: ( address ) ? address : '',\r\n\t\t\t\t\tarea: ( area ) ? area : '',\r\n\t\t\t\t\tcity: ( city ) ? city : '',\r\n\t\t\t\t\tstate: ( state ) ? state : '',\r\n\t\t\t\t\tcountry: (country) ? country : '',\r\n\t\t\t\t\tshort_address: (short_address)? short_address: '',\r\n\t\t\t\t\tmarkerPosition: {\r\n\t\t\t\t\t\tlat: newLat,\r\n\t\t\t\t\t\tlng: newLng\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmapPosition: {\r\n\t\t\t\t\t\tlat: newLat,\r\n\t\t\t\t\t\tlng: newLng\r\n\t\t\t\t\t},\r\n\t\t\t\t} )\r\n\t\t\t\tthis.props.handleState(true,this.state);\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tconsole.error(error);\r\n\t\t\t}\r\n\t\t);\r\n\t\t\r\n\t};\r\n\t/**\r\n\t * Component should only update ( meaning re-render ), when the user selects the address, or drags the pin\r\n\t *\r\n\t * @param nextProps\r\n\t * @param nextState\r\n\t * @return {boolean}\r\n\t */\r\n\tshouldComponentUpdate( nextProps, nextState ){\r\n\r\n\t\tif (\r\n\t\t\tthis.state.markerPosition.lat !== this.props.center.lat ||\r\n\t\t\tthis.state.address !== nextState.address ||\r\n\t\t\tthis.state.city !== nextState.city ||\r\n\t\t\tthis.state.area !== nextState.area ||\r\n\t\t\tthis.state.state !== nextState.state\r\n\t\t) {\t\t\t\r\n\r\n\t\t\treturn true\r\n\t\t}\r\n\t\t else if ( this.props.center.lat === nextProps.center.lat ){\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t/**\r\n\t * Get the city and set the city input value to the one selected\r\n\t *\r\n\t * @param addressArray\r\n\t * @return {string}\r\n\t */\r\n\tgetCity = ( addressArray ) => {\r\n\t\tlet city = '';\r\n\t\tfor( let i = 0; i < addressArray.length; i++ ) {\r\n\t\t\tif ( addressArray[ i ].types[0] && 'administrative_area_level_2' === addressArray[ i ].types[0] ) {\r\n\t\t\t\tcity = addressArray[ i ].long_name;\r\n\t\t\t\treturn city;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tgetCountry = ( addressArray ) => {\r\n\t\tlet country = [];\r\n\t\tcountry['long_name'] = '';\r\n\t\tcountry['short_name'] = '';\r\n\t\tfor( let i = 0; i < addressArray.length; i++ ) {\r\n\t\t\tfor( let i = 0; i < addressArray.length; i++ ) {\r\n\t\t\t\tif ( addressArray[ i ].types[0] && 'country' === addressArray[ i ].types[0] ) {\r\n\t\t\t\t\tcountry['long_name'] = addressArray[ i ].long_name;\r\n\t\t\t\t\tcountry['short_name'] = (addressArray[ i ].short_name) ? addressArray[ i ].short_name: '';\r\n\t\t\t\t\treturn country;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t/**\r\n\t * Get the area and set the area input value to the one selected\r\n\t *\r\n\t * @param addressArray\r\n\t * @return {string}\r\n\t */\r\n\tgetArea = ( addressArray ) => {\r\n\t\tlet area = '';\r\n\t\tfor( let i = 0; i < addressArray.length; i++ ) {\r\n\t\t\tif ( addressArray[ i ].types[0]  ) {\r\n\t\t\t\tfor ( let j = 0; j < addressArray[ i ].types.length; j++ ) {\r\n\t\t\t\t\tif ( 'sublocality_level_1' === addressArray[ i ].types[j] || 'locality' === addressArray[ i ].types[j] ) {\r\n\t\t\t\t\t\tarea = addressArray[ i ].long_name;\r\n\t\t\t\t\t\treturn area;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t/**\r\n\t * Get the address and set the address input value to the one selected\r\n\t *\r\n\t * @param addressArray\r\n\t * @return {string}\r\n\t */\r\n\tgetState = ( addressArray ) => {\r\n\t\tlet state = '';\r\n\t\tfor( let i = 0; i < addressArray.length; i++ ) {\r\n\t\t\tfor( let i = 0; i < addressArray.length; i++ ) {\r\n\t\t\t\tif ( addressArray[ i ].types[0] && 'administrative_area_level_1' === addressArray[ i ].types[0] ) {\r\n\t\t\t\t\tstate = addressArray[ i ].long_name;\r\n\t\t\t\t\treturn state;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t/**\r\n\t * And function for city,state and address input\r\n\t * @param event\r\n\t */\r\n\tonChange = ( event ) => {\r\n\t\tthis.setState({ [event.target.name]: event.target.value });\r\n\t};\r\n\t/**\r\n\t * This Event triggers when the marker window is closed\r\n\t *\r\n\t * @param event\r\n\t */\r\n\tonInfoWindowClose = ( event ) => {\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * When the marker is dragged you get the lat and long using the functions available from event object.\r\n\t * Use geocode to get the address, city, area and state from the lat and lng positions.\r\n\t * And then set those values in the state.\r\n\t *\r\n\t * @param event\r\n\t */\r\n\tonMarkerDragEnd = ( event ) => {\r\n\t\tlet newLat = event.latLng.lat(),\r\n\t\t    newLng = event.latLng.lng();\r\n\r\n\t\tGeocode.fromLatLng( newLat , newLng ).then(\r\n\t\t\tresponse => {\r\n\t\t\t\tconst address = response.results[0].formatted_address,\r\n\t\t\t\t      addressArray =  response.results[0].address_components,\r\n\t\t\t\t      city = this.getCity( addressArray ),\r\n\t\t\t\t      area = this.getArea( addressArray ),\r\n\t\t\t\t      state = this.getState( addressArray ),\r\n\t\t\t\t\t  country = this.getCountry(addressArray)['short_name'],\r\n\t\t\t\t\t  short_address = [city,state,this.getCountry(addressArray)['long_name']].filter(x => x !== undefined && x !== null ).toString();\r\n\t\t\t\tthis.setState( {\r\n\t\t\t\t\taddress: ( address ) ? address : '',\r\n\t\t\t\t\tarea: ( area ) ? area : '',\r\n\t\t\t\t\tcity: ( city ) ? city : '',\r\n\t\t\t\t\tstate: ( state ) ? state : '',\r\n\t\t\t\t\tcountry: (country) ? country : '',\r\n\t\t\t\t\tshort_address: (short_address)? short_address : '',\r\n\t\t\t\t\tmarkerPosition: {\r\n\t\t\t\t\t\tlat: newLat,\r\n\t\t\t\t\t\tlng: newLng\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmapPosition: {\r\n\t\t\t\t\t\tlat: newLat,\r\n\t\t\t\t\t\tlng: newLng\r\n\t\t\t\t\t},\r\n\t\t\t\t} )\r\n\t\t\t\tthis.props.handleState(true,this.state);\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tconsole.error(error);\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\t/**\r\n\t * When the user types an address in the search box\r\n\t * @param place\r\n\t */\r\n\tonPlaceSelected = ( place ) => {\r\n\t\tconst address = place.formatted_address,\r\n\t\t      addressArray =  place.address_components,\r\n\t\t      city = this.getCity( addressArray ),\r\n\t\t      area = this.getArea( addressArray ),\r\n\t\t      state = this.getState( addressArray ),\r\n\t\t\t  country = this.getCountry(addressArray)['short_name'],\r\n\t\t\t  short_address = [city,state,this.getCountry(addressArray)['long_name']].filter(x => x !== undefined && x !== null ).toString(),\r\n\t\t      latValue = place.geometry.location.lat(),\r\n\t\t      lngValue = place.geometry.location.lng();\r\n\t\tthis.setState({\r\n\t\t\taddress: ( address ) ? address : '',\r\n\t\t\tarea: ( area ) ? area : '',\r\n\t\t\tcity: ( city ) ? city : '',\r\n\t\t\tstate: ( state ) ? state : '',\r\n\t\t\tcountry: (country) ? country: '',\r\n\t\t\tshort_address: (short_address)? short_address:'',\r\n\t\t\tmarkerPosition: {\r\n\t\t\t\tlat: latValue,\r\n\t\t\t\tlng: lngValue\r\n\t\t\t},\r\n\t\t\tmapPosition: {\r\n\t\t\t\tlat: latValue,\r\n\t\t\t\tlng: lngValue\r\n\t\t\t},\r\n\t\t})\r\n\t\tthis.props.handleState(true,this.state);\r\n\t};\r\n\r\n\r\n\trender(){\r\n\t\tconst AsyncMap = \r\n\t\t\twithGoogleMap(\r\n\t\t\t\tprops => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<GoogleMap google={ this.props.google }\r\n\t\t\t\t\t\t\t\t   defaultZoom={ this.props.zoom }\r\n\t\t\t\t\t\t\t\t   defaultCenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\r\n\t\t\t\t\t\t\t\t   defaultOptions={{\r\n\t\t\t\t\t\t\t\t\t   disableDefaultUI: true,\r\n\t\t\t\t\t\t\t\t   }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Marker google={this.props.google}\r\n\t\t\t\t\t\t\t\t\tname={'Dolores park'}\r\n\t\t\t\t\t\t\t\t\tdraggable={true}\r\n\t\t\t\t\t\t\t\t\tonDragEnd={ this.onMarkerDragEnd }\r\n\t\t\t\t\t\t\t\t\tposition={{ lat: this.state.markerPosition.lat, lng: this.state.markerPosition.lng }}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Marker />\r\n\r\n\t\t\t\t\t\t\t<div className=\"search-input-container\">\r\n\t\t\t\t\t\t\t\t<Autocomplete\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tclassName={`form-control bg-white ${this.props.searchInputClass}`}\r\n\t\t\t\t\t\t\t\t\tonPlaceSelected={ this.onPlaceSelected }\r\n\t\t\t\t\t\t\t\t\ttypes={['(regions)']}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Type address\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<InfoWindow\r\n\t\t\t\t\t\t\t\t\tonClose={this.onInfoWindowClose}\r\n\t\t\t\t\t\t\t\t\tposition={{ lat: ( this.state.markerPosition.lat + 0.0018 ), lng: this.state.markerPosition.lng }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<span style={{ padding: 0, margin: 0 }}>{ this.state.short_address }</span>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</InfoWindow>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</GoogleMap>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t\r\n\t\t);\r\n\t\tlet map;\r\n\t\tif( this.props.center.lat !== undefined ) {\r\n\t\t\tmap =   <div>\r\n\t\t\t\t\t<AsyncMap\r\n\t\t\t\t\t\tgoogleMapURL={`https://maps.googleapis.com/maps/api/js?key=${GoogleMapsAPI}&libraries=places`}\r\n\t\t\t\t\t\tloadingElement={\r\n\t\t\t\t\t\t\t<div style={{ height: `100%` }} />\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcontainerElement={\r\n\t\t\t\t\t\t\t<div style={{ height: this.props.height, position: this.props.containerPosition }} />\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tmapElement={\r\n\t\t\t\t\t\t\t<div className={this.props.mapContainer} style={{ height: `100%`, borderRadius: this.props.mapRadius }} />\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t} else {\r\n\t\t\tmap = <div style={{height: this.props.height}} />\r\n\t\t}\r\n\t\treturn( map )\r\n\t}\r\n}\r\nexport default Map","import {Col, FormGroup, PopoverBody, PopoverHeader, Collapse, Button, Row} from \"reactstrap\";\r\nimport {useEffect, useRef, useState} from \"react\";\r\nimport useObservations from \"../../hooks/useObservations\";\r\nimport {Icon} from \"@iconify/react\";\r\n// import axios from \"../../api/axios\";\r\n// import {baseURL} from \"../../helpers/url\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport Images from \"../../static/images\";\r\nimport {Swiper, SwiperSlide} from \"swiper/react\";\r\nimport {Navigation} from \"swiper\";\r\nimport Tippy from \"@tippyjs/react\";\r\n\r\nconst ObservationCategory = (props) => {\r\n    const {error, obvType} = props;\r\n    const {auth} = useAuth();\r\n    const {\r\n        observationImages,\r\n        setObservationImages,\r\n        observationSteps,\r\n        observationCategory,\r\n        setObservationCategory\r\n    } = useObservations();\r\n    const [Category, setCategory] = useState([]);\r\n    const [oldCategory, setOldCategory] = useState([]);\r\n    const [isChecked, setIsChecked] = useState({});\r\n    const [selectedCategory, setSelectedCategory] = useState('' || []);\r\n    const ObservationData = {...observationImages};\r\n    const errorData = error ? Object.values(error?.data) : {};\r\n    const [isPopoverContentOpen, setIsPopoverContentOpen] = useState(false);\r\n    const tippyRef = useRef();\r\n\r\n    const onCategoryChange = (e) => {\r\n        const value = parseFloat(e.target.id);\r\n        setIsChecked({...isChecked, [e.target.name]: e.target.checked});\r\n        if (selectedCategory.includes(value)) {\r\n            const filterValue = selectedCategory.filter((item) => item !== value)\r\n            setSelectedCategory(filterValue);\r\n        } else {\r\n            setSelectedCategory([...selectedCategory, value]);\r\n        }\r\n        setObservationImages(ObservationData);\r\n    }\r\n    const updatedCategory = () => {\r\n        let newCategory = [];\r\n        oldCategory?.map((item, index) => {\r\n            let image = `/assets/images/category/${item?.name.toLowerCase().replaceAll(\" \", \"\")}.png`\r\n\r\n            item.image = image\r\n            newCategory.push(item)\r\n            return true;\r\n        })\r\n        setCategory(newCategory);\r\n\r\n        setObservationCategory(prev => {\r\n            return {\r\n                ...prev,\r\n                data: newCategory\r\n            }\r\n        });\r\n    }\r\n    const ImageCarousel = (props) => {\r\n        const {className} = props;\r\n        const items = [\r\n            {src: Images.card1},\r\n            {src: Images.card2},\r\n            {src: Images.card3}\r\n        ]\r\n\r\n        const carouselContent = items.map((item, index) => {\r\n            return (\r\n                <SwiperSlide key={index}>\r\n                    <img src={item.src} alt=\"carousel\"/>\r\n                </SwiperSlide>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <>\r\n                <Swiper navigation={true} modules={[Navigation]} className={`className ${className ? className : ''}`}>\r\n                    {carouselContent}\r\n                </Swiper>\r\n            </>\r\n        )\r\n    }\r\n    const PopoverContent = () => {\r\n        return (\r\n            <>\r\n                <PopoverHeader className={'bg-white'}>What is sprite?\r\n                    {/*<button className=\"bg-transparent p-0 border-0 text-black shadow-none\"><Icon icon=\"codicon:chrome-close\" width=\"15\" height=\"15\" /></button>*/}\r\n                </PopoverHeader>\r\n                <PopoverBody className={'bg-white'}>\r\n                    <p style={{'--line-clamb': isPopoverContentOpen === true ? 'unset' : '2'}}>\r\n                        Sprites or red sprites are large-scale electric discharges that occur high above thunderstorm\r\n                        clouds, they appear as luminous reddish-orange flashes.\r\n                    </p>\r\n                    <Collapse\r\n                        isOpen={isPopoverContentOpen}\r\n                    >\r\n                        <ImageCarousel className=\"popover-carousel\"/>\r\n                    </Collapse>\r\n                    <Button className=\"bg-transparent p-0 border-0 text-secondary shadow-none d-block\"\r\n                            onClick={() => setIsPopoverContentOpen(!isPopoverContentOpen)}>\r\n                        {isPopoverContentOpen === true ? 'Show less' : 'Show more'}\r\n                    </Button>\r\n                </PopoverBody>\r\n            </>\r\n        );\r\n    };\r\n\r\n    const showCategory = () => {\r\n        return observationImages?.data?.filter((item) => item.id === observationImages?.selected_image_id).map((item, index) => {\r\n            return (\r\n                observationCategory?.data?.map((imagItem, index) => {\r\n                    return (\r\n                        <Col sm={6} key={index}>\r\n                            <FormGroup>\r\n                                <div className=\"checkbox-wrapper\">\r\n                                    <div className=\"inputGroup\">\r\n                                        <input\r\n                                            value={imagItem.name || ''}\r\n                                            name={imagItem.id}\r\n                                            id={imagItem.id}\r\n                                            type=\"checkbox\"\r\n                                            checked={(item?.category_map?.category?.find(list => list === imagItem?.id) === imagItem?.id) ? 'checked' : ''}\r\n                                            hidden\r\n                                            onChange={(e) => onCategoryChange(e)}\r\n                                        />\r\n                                        <label htmlFor={imagItem.id}>\r\n                                            <img src={`${imagItem.image}`} alt={imagItem.name}/>\r\n                                            {imagItem.name}\r\n                                            <div className=\"ms-2 text-dark \">\r\n\r\n                                                <Tippy\r\n                                                    content={<PopoverContent/>}\r\n                                                    interactive={true}\r\n                                                    appendTo={document.body}\r\n                                                    animation=\"perspective\"\r\n                                                    theme=\"light-border\"\r\n                                                    reference={tippyRef}\r\n                                                >\r\n                                                    <span ref={tippyRef}><Icon icon=\"charm:info\" color=\"#adb4c2\"\r\n                                                                               width=\"15\" height=\"15\"/></span>\r\n                                                </Tippy>\r\n                                            </div>\r\n\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </FormGroup>\r\n                        </Col>\r\n                    )\r\n                })\r\n            )\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setOldCategory(auth?.categoryList)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        updatedCategory();\r\n    }, [oldCategory])\r\n\r\n    useEffect(() => {\r\n        let prevCategory = ObservationData.data[observationImages?.selected_image_index]?.category_map?.category || [];\r\n        setSelectedCategory((prevCategory))\r\n    }, [ObservationData.data, observationImages?.selected_image_index])\r\n\r\n    useEffect(() => {\r\n        if (observationImages?.selected_image_index === []) {\r\n            setSelectedCategory([])\r\n        }\r\n    }, [observationImages?.selected_image_index])\r\n\r\n    useEffect(() => {\r\n        if (obvType?.image_type === 3) {\r\n            observationImages?.data?.map((item, index) => {\r\n                return item.category_map.category = selectedCategory\r\n            })\r\n        } else {\r\n            ObservationData.data[observationImages?.selected_image_index].category_map.category = selectedCategory;\r\n        }\r\n    }, [selectedCategory]);\r\n\r\n    return (\r\n        <>\r\n            {error && errorData?.map((item, index) => {\r\n                if (observationSteps?.selected_image_index === index) {\r\n                    return (\r\n                        <span key={index} className=\"text-danger small\">{item?.category}</span>\r\n                    )\r\n                }\r\n                return true;\r\n            })}\r\n            <FormGroup className=\"mb-1\">\r\n                <p className=\"fw-bold\">\r\n                    Please choose the appropriate category\r\n                    <span className=\"required\">Required</span>\r\n                </p>\r\n            </FormGroup>\r\n            <Row>\r\n                {showCategory()}\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default ObservationCategory;","import \"../../assets/scss/component/observationLocation.scss\";\r\nimport {\r\n    Button,\r\n    Col,\r\n    Dropdown,\r\n    DropdownItem,\r\n    DropdownMenu,\r\n    DropdownToggle,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Row\r\n} from \"reactstrap\";\r\nimport {useEffect, useRef, useState} from 'react';\r\nimport useObservations from \"../../hooks/useObservations\";\r\nimport MapWrapper from '../MapWrapper';\r\nimport ReactCountryFlags from '../ReactCountryFlag';\r\nimport Images from \"../../static/images\";\r\nimport {directionValue, Tabs} from \"../../helpers/observation\";\r\nimport {timezone} from \"../../helpers/timezone\";\r\nimport ObservationCategory from \"./ObservationCategory\";\r\nimport {Icon} from '@iconify/react';\r\nimport {getdirectionDegree,getdirectionAngle} from \"../../helpers/observation\";\r\nimport moment from \"moment\";\r\n\r\n\r\nconst ObservationLocation = (props) => {\r\n    const { toggleTab,handleImageInput, error, step, obvType,disableNext } = props;\r\n    const fref = useRef()\r\n    const [address1,setAddress] = useState({\r\n        address: '',\r\n        city: '',\r\n        area: '',\r\n        state: '',\r\n        country: 'IN',\r\n        short_address: 'Pune Maharastra Indias',\r\n        mapPosition: {\r\n            lat: null,\r\n            lng: null\r\n        },\r\n        markerPosition: {\r\n            lat: null,\r\n            lng: null\r\n        }\r\n    });\r\n    const [initialAddress,setInitialAddress] = useState({\r\n        country: '',\r\n        short_address: '',\r\n       lat:null,\r\n       lng:null\r\n    });\r\n    const [isLoaded,setIsLoaded] = useState(false);\r\n    const {observationImages, setObservationImages,observationData} = useObservations();\r\n    const [isActiveDire, setActiveDire] = useState(null);\r\n    const [angleDegree, setAngleDegree] = useState(false);\r\n    const [isTimezoneOpen, setIsTimezoneOpen] = useState(false);\r\n    const [searchTimeZone, setSearchTimeZone] = useState(\"\");\r\n    const [sameAsMap, setSameAsMap] = useState(false);\r\n    const [sameAsDateTime, setSameAsDateTime] = useState(false);\r\n\r\n    useEffect(()=> {\r\n        \r\n        if(observationImages?.data && observationImages?.data[observationImages?.selected_image_index]?.sameAsFirstMap === false){\r\n            fref.current.handleChangeLatLng(observationImages?.data[observationImages?.selected_image_index]?.latitude , observationImages?.data[observationImages?.selected_image_index]?.longitude);\r\n        }\r\n      \r\n    },[observationImages?.data?.[observationImages?.selected_image_index],observationImages?.selected_image_index]);\r\n\r\n    useEffect(()=> {\r\n        // setSameAsMap(false);\r\n        // setSameAsDateTime(false);\r\n        if(observationImages?.data && observationImages?.selected_image_index !== 0){\r\n            handleCopyData(observationImages?.data[observationImages?.selected_image_index]?.sameAsFirstMap,['latitude','longitude','location','country_code']);\r\n            handleCopyData(observationImages?.data[observationImages?.selected_image_index]?.sameAsFirstDate,['obs_date','obs_time','timezone']);\r\n        }\r\n\r\n    },[observationImages?.selected_image_index]);\r\n\r\n    const handleValue = (flag,value) => {\r\n        if(!flag){\r\n            let address = {...address1};\r\n            address.country_code = value[0];\r\n            address.short_address = value[1];\r\n            setInitialAddress({\r\n                country: value[0],\r\n                address:value[1],\r\n                lat: Number((observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.latitude: null),\r\n                lng :Number((observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.longitude: null)\r\n            })\r\n            setAddress(address);\r\n            if(observationImages?.data){\r\n                let observationAddress = {...observationImages};\r\n                if(observationAddress?.data){\r\n                    observationAddress.data[observationAddress.selected_image_index]['location'] = value[1];\r\n                    observationAddress.data[observationAddress.selected_image_index]['country_code'] = value[0];\r\n    \r\n                    if(observationData?.image_type === 3){\r\n                        if(observationAddress.data[1]){\r\n                            observationAddress.data[1]['location'] = value[1];\r\n                            observationAddress.data[1]['country_code'] = value[0];\r\n                        }\r\n                        if(observationAddress.data[2]){\r\n                            observationAddress.data[2]['location'] = value[1];\r\n                            observationAddress.data[2]['country_code'] = value[0];\r\n                        }\r\n                    }\r\n                    setObservationImages(observationAddress);\r\n                }\r\n            }\r\n        }\r\n        else{\r\n            setAddress(value);\r\n            if(observationImages?.data){\r\n                let observationAddress = {...observationImages};\r\n                if(observationAddress?.data){\r\n                    observationAddress.data[observationAddress.selected_image_index]['latitude'] = value.markerPosition.lat;\r\n                    observationAddress.data[observationAddress.selected_image_index]['longitude'] = value.markerPosition.lng;\r\n                    observationAddress.data[observationAddress.selected_image_index]['location'] = value.short_address;\r\n                    observationAddress.data[observationAddress.selected_image_index]['country_code'] = value.country;\r\n    \r\n                    if(observationData?.image_type === 3){\r\n                        if(observationAddress.data[1]){\r\n                            observationAddress.data[1]['latitude'] = value.markerPosition.lat;\r\n                            observationAddress.data[1]['longitude'] = value.markerPosition.lng;\r\n                            observationAddress.data[1]['location'] = value.short_address;\r\n                            observationAddress.data[1]['country_code'] = value.country;\r\n                        }\r\n                        if(observationAddress.data[2]){\r\n                            observationAddress.data[2]['latitude'] = value.markerPosition.lat;\r\n                            observationAddress.data[2]['longitude'] = value.markerPosition.lng;\r\n                            observationAddress.data[2]['location'] = value.short_address;\r\n                            observationAddress.data[2]['country_code'] = value.country;\r\n                        }\r\n                    }\r\n                    setObservationImages(observationAddress);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const observationArray = {...observationImages};\r\n    \r\n    const handleChangeLat = (e) => {\r\n        handleImageInput(e);\r\n        let name = e.target.name,\r\n             value = Number(e.target.value);\r\n             let addressState = {...address1};\r\n             addressState.mapPosition.lat = value;\r\n             addressState.markerPosition.lat = value;\r\n             setAddress(addressState);\r\n            //  let imageArray = {...observationImages};\r\n            //  imageArray.images[0].lat = value;\r\n            //  setObservationImages(imageArray);\r\n            //  setTimeout(()=> {\r\n                 setIsLoaded(true);\r\n            //  },3000);\r\n            fref.current.handleChangeLatLng(e.target.value,address1.markerPosition.lng);\r\n    }\r\n    \r\n    const handleChangeLng = (e) => {\r\n        handleImageInput(e);\r\n        let name = e.target.name,\r\n             value = Number(e.target.value);\r\n             let addressState = {...address1};\r\n             addressState.mapPosition.lng = value;\r\n             addressState.markerPosition.lng = value;\r\n        setAddress(addressState);\r\n        setIsLoaded(true);\r\n        fref.current.handleChangeLatLng(address1.markerPosition.lat,e.target.value);\r\n    }\r\n    useEffect(() => {\r\n        let observationAddress = {...observationImages};        \r\n        if(observationAddress?.data){\r\n            let addressState = {...address1};\r\n            observationAddress.data[observationAddress.selected_image_index]['location'] = address1?.short_address;\r\n            observationAddress.data[observationAddress.selected_image_index]['country_code'] = address1?.country;\r\n\r\n            if(observationData?.image_type === 3){\r\n                if(observationAddress.data[1]){\r\n                    observationAddress.data[1]['location'] = address1?.short_address;\r\n                    observationAddress.data[1]['country_code'] = address1?.country;\r\n                }\r\n                if(observationAddress.data[2]){\r\n                    observationAddress.data[2]['location'] = address1?.short_address;\r\n                    observationAddress.data[2]['country_code'] = address1?.country;\r\n                }\r\n            }\r\n            setObservationImages(observationAddress);\r\n        }\r\n    },[address1]);\r\n    useEffect(() => {\r\n        let observationAddress = {...observationImages};        \r\n        if(observationAddress?.data){\r\n            if(observationData?.image_type === 3){\r\n                if(observationAddress.data[1]){\r\n                    observationAddress.data[1]['location'] = observationAddress.data[0]['location'];\r\n                    observationAddress.data[1]['country_code'] = observationAddress.data[0]['country_code'];\r\n                }\r\n                if(observationAddress.data[2]){\r\n                    observationAddress.data[2]['location'] = observationAddress.data[0]['location'];\r\n                    observationAddress.data[2]['country_code'] = observationAddress.data[0]['country_code'];\r\n                }\r\n            }\r\n            setObservationImages(observationAddress);\r\n        }\r\n    },[observationData?.image_type]);\r\n    const selectDirection = (index) => {\r\n        const directionWrapper = document.querySelector('.compass-wrapper');\r\n        const directionId = document.getElementById(`directionValue${index}`);\r\n        let getAngleName = directionId.getAttribute(\"data-name\");\r\n        if(isActiveDire === index){\r\n            directionWrapper.classList.remove(\"active-arrow\");\r\n        }else{\r\n            directionWrapper.classList.add(\"active-arrow\");\r\n            setActiveDire(index);\r\n\r\n            if (observationImages?.data[observationImages?.selected_image_index]?.is_precise_azimuth === 0 || observationImages?.data[observationImages?.selected_image_index]?.is_precise_azimuth === false) {\r\n                observationArray.data[observationImages?.selected_image_index]['azimuth'] = getdirectionDegree(getAngleName);\r\n\r\n                if(observationData?.image_type === 3){\r\n                    if(observationArray.data[1]){\r\n                        observationArray.data[1]['azimuth'] = getdirectionDegree(getAngleName);\r\n                    }\r\n                    if(observationArray.data[2]){\r\n                        observationArray.data[2]['azimuth'] = getdirectionDegree(getAngleName);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        setObservationImages(observationArray);\r\n    }\r\n\r\n    const handleCopyData = (e,keys) => {\r\n        if(observationImages){\r\n\r\n            let observationMap = {...observationImages};\r\n            if(keys.includes('location','latitude','longitude','country_code')){\r\n                setSameAsMap(e);\r\n                observationMap.data[observationImages?.selected_image_index].sameAsFirstMap = e;\r\n            }\r\n            if(keys.includes('obs_time','obs_date','timezone')){\r\n                setSameAsDateTime(e);\r\n                observationMap.data[observationImages?.selected_image_index].sameAsFirstDate = e;\r\n            }\r\n            setObservationImages(observationMap);\r\n            let copyImages = {...observationImages};\r\n            keys.map((k) => {\r\n                if(e){\r\n                    copyImages.data[copyImages?.selected_image_index][k] = copyImages.data[0][k];\r\n                    // copyImages.data[copyImages?.selected_image_index]['location'] = copyImages.data[0]['location'];\r\n                    // copyImages.data[copyImages?.selected_image_index]['country_code'] = copyImages.data[0]['country_code'];\r\n                }else{\r\n                    if(observationData?.image_type !== 3){\r\n                        \r\n                        copyImages.data[copyImages?.selected_image_index][k] = (k === 'obs_time' || k === 'obs_date') ? null : '';\r\n                        if(keys.includes('location','latitude','longitude')){\r\n                            copyImages.data[copyImages?.selected_image_index]['latitude'] = initialAddress.lat;\r\n                            copyImages.data[copyImages?.selected_image_index]['longitude'] = initialAddress.lng;\r\n                            copyImages.data[copyImages?.selected_image_index]['location'] = initialAddress.short_address;\r\n                            copyImages.data[copyImages?.selected_image_index]['country_code'] = initialAddress.country;\r\n                        }\r\n                    }\r\n                }\r\n                return false;\r\n            });\r\n            setObservationImages(copyImages);\r\n        }\r\n    }\r\n\r\n    const findTimeZone = (e) => {\r\n        let value = e.target.value.toLowerCase();\r\n        setSearchTimeZone(value);\r\n    }\r\n\r\n    useEffect(()=> {\r\n        if (isTimezoneOpen === false) {\r\n            setSearchTimeZone(\"\");\r\n        }\r\n    }, [isTimezoneOpen])\r\n\r\n    const errorData = error ? Object.values(error?.data) : {};\r\n\r\n    useEffect(() => {\r\n        const id = observationImages?.data?.[0].id;\r\n        if (obvType?.image_type === 3 && step.active === 2) {\r\n            setObservationImages(prev => {\r\n                return {\r\n                    ...prev,\r\n                    selected_image_id: id,\r\n                    selected_image_index: 0\r\n                }\r\n            });\r\n        }\r\n    },[observationImages?.data, obvType?.image_type, setObservationImages, step.active])\r\n\r\n    return (\r\n        <>\r\n            <Col md=\"12\">\r\n                <FormGroup>\r\n                    <Row>\r\n                        <Col xxl={7} className=\"order-2 order-xxl-1\">\r\n                            <h6>Where did you make the observation? <span className=\"required\">Required</span></h6>\r\n                        </Col>\r\n                        {observationImages?.selected_image_index !== 0 && observationData?.image_type === 2 && \r\n                            <Col xxl={5} className=\"order-1 order-xxl-2 mb-2 mb-xxl-0\">\r\n                                <FormGroup>\r\n                                    <Label check className=\"mb-0 justify-content-end\">\r\n                                        <Input\r\n                                            type=\"checkbox\"\r\n                                            name=\"Same as the first image\"\r\n                                            checked={observationImages?.data[observationImages?.selected_image_index]?.sameAsFirstMap}\r\n                                            onChange={(e) => handleCopyData(e.target.checked,['latitude','longitude','location','country_code'])}\r\n                                            className=\"me-2 mt-0\"\r\n                                        />\r\n                                        Same as the first image\r\n                                    </Label>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        }\r\n                    </Row>\r\n                    {\r\n                    (\r\n                        (observationImages?.data && observationImages?.data[observationImages?.selected_image_index]?.sameAsFirstMap === false ) \r\n                        || observationImages?.selected_image_index === 0 ) ?\r\n                        <div className=\"location_map\">\r\n                            <MapWrapper\r\n                                google={props.google}\r\n                                center={{ lat: Number((observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.latitude: address1?.markerPosition?.lat), lng: Number((observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.longitude: address1?.markerPosition?.lng) }}\r\n                                height=\"100%\"\r\n                                containerPosition={\"relative\"}\r\n                                mapRadius=\"10px\"\r\n                                zoom={15}\r\n                                handleState={handleValue}\r\n                                isLoaded={isLoaded}\r\n                                mapContainer=\"map-search-container\"\r\n                                searchInputClass=\"search-input-class\"\r\n                                ref={fref}\r\n                            /> \r\n                        </div>\r\n                        :\r\n\r\n                        <div  className=\"border same-data_row\">\r\n                            <Row>\r\n                                <Col lg={6}>\r\n                                    <Row className=\"flex-nowrap\">\r\n                                        <div className=\"border-end w-auto\">\r\n                                            <FormGroup className=\"form-group d-flex align-items-center\">\r\n                                                <Label className=\"form-label text-uppercase mb-0 me-2\" htmlFor=\"LAT\">LAT</Label>\r\n                                                <span className=\"fw-bold text-truncate data-value\">{(observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.latitude : address1?.markerPosition?.lat\r\n                                                }</span>\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                        <div className=\"w-auto\">\r\n                                            <FormGroup className=\"form-group d-flex align-items-center\">\r\n                                                <Label className=\"form-label text-uppercase mb-0 me-2\" htmlFor=\"LON\">LON</Label>\r\n                                                <span className=\"fw-bold text-truncate data-value\">{(observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.longitude :address1?.markerPosition?.lng}</span>\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col lg={6}>\r\n                                    <div className=\"selected-address d-block d-lg-flex align-items-center justify-content-start justify-content-lg-end mt-2 mt-lg-0\">\r\n                                        <ReactCountryFlags country={(observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.country_code: address1?.country_code} />\r\n                                        <span>{(observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.location : ''}</span>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                        }\r\n                </FormGroup>\r\n            </Col>\r\n            {\r\n            (\r\n                ( observationImages?.data &&  observationImages?.data[observationImages?.selected_image_index]?.sameAsFirstMap === false)\r\n              || observationImages?.selected_image_index === 0) &&\r\n                <Col md={12} className=\"mb-5\">\r\n                    <h6>If you know the precise coordinates of your observation location, please enter below</h6>\r\n                    <Row>\r\n                        <Col md={6} lg={4}>\r\n                            <FormGroup className=\"d-flex\">\r\n                                <Label className=\"form-label text-uppercase me-1\" htmlFor=\"LAT\" sm={2} >LAT</Label>\r\n                                <Col sm={10}>\r\n                                    <Input\r\n                                        // value={address1?.markerPosition?.lat}\r\n                                        value={(observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.latitude : address1?.markerPosition?.lat}\r\n                                        id=\"LAT\"\r\n                                        type=\"number\"\r\n                                        name=\"latitude\"\r\n                                        placeholder=\"Edmon, OK, USA\"\r\n                                        onChange={(e)=> {handleImageInput(e); handleChangeLat(e);}}\r\n                                    />\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6} lg={4}>\r\n                            <FormGroup className=\"d-flex\">\r\n                                <Label className=\"form-label text-uppercase me-1\" htmlFor=\"LON\" sm={2} >LON</Label>\r\n                                <Col sm={10}>\r\n                                    <Input\r\n                                        // value={address1?.markerPosition?.lng}\r\n                                        value={(observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.longitude :address1?.markerPosition?.lng}\r\n                                        id=\"LON\"\r\n                                        type=\"number\"\r\n                                        name=\"longitude\"\r\n                                        placeholder=\"Edmon, OK, USA\"\r\n                                        onChange={(e)=> {handleImageInput(e); handleChangeLng(e);}}\r\n                                    />\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6} lg={4}>\r\n                            <div className=\"selected-address pb-0 pb-lg-3 d-flex align-items-center justify-content-start justify-content-lg-end\">\r\n                                <ReactCountryFlags country={(observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.country_code: null} />\r\n                                <span>{(observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.location : ''}</span>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            }\r\n            {observationData?.image_type === 3 &&\r\n            <Row className=\"mb-4\">\r\n                <ObservationCategory obvType={obvType} error={error} />\r\n            </Row>\r\n            }\r\n            \r\n            <Col md={12} className=\"mb-5\">\r\n                <Row>\r\n                    <Col xxl={7} className=\"order-2 order-xxl-1\">\r\n                        <h6>Please enter date and time for your observation <span className=\"required\">Required</span></h6>\r\n                    </Col>\r\n                    {observationImages?.selected_image_index !== 0 && observationData?.image_type === 2 && <Col xxl={5} className=\"order-1 order-xxl-2 mb-2 mb-xxl-0\">\r\n                        <FormGroup>\r\n                            <Label check className=\"mb-0 justify-content-end\">\r\n                                <Input\r\n                                    type=\"checkbox\"\r\n                                    name=\"Same as the first image\"\r\n                                    checked={sameAsDateTime}\r\n                                    onChange={(e) => handleCopyData(e.target.checked,['obs_date','obs_time','timezone'])}\r\n                                    className=\"me-2 mt-0\"\r\n                                />\r\n                                Same as the first image\r\n                            </Label>\r\n                        </FormGroup>\r\n                    </Col>}\r\n                </Row>\r\n                \r\n                {\r\n                    (observationImages?.data && observationImages?.data[observationImages?.selected_image_index]?.sameAsFirstDate === false  \r\n                    || observationImages?.selected_image_index === 0)  ?\r\n                    <Row>\r\n                        <Col md={6} lg={4}>\r\n                            <FormGroup>\r\n                                <Label className=\"text-uppercase\" htmlFor=\"Date\">Date</Label>\r\n                                <div className=\"position-relative\">\r\n                                    <Input\r\n                                        id=\"Date\"\r\n                                        type=\"date\"\r\n                                        max= {moment(new Date()).format('Y-MM-DD')}\r\n                                        name=\"obs_date\"\r\n                                        max={moment(new Date()).format('Y-MM-DD')}\r\n                                        value={(observationImages?.data) ? (observationImages?.data[observationImages?.selected_image_index]?.obs_date === null ? 'dd/mm/yyyy' : observationImages?.data[observationImages?.selected_image_index]?.obs_date) : 'dd/mm/yyyy'}\r\n                                        className=\"w-100\"\r\n                                        placeholder=\"12/20/2021\"\r\n                                        onChange={(e)=>handleImageInput(e)}\r\n                                    />\r\n                                </div>\r\n\r\n                                {error && errorData?.map((item, index) => {\r\n                                    if (step?.selected_image_index === index) {\r\n                                        return(\r\n                                            <span key={index} className=\"text-danger small\">{item?.obs_date}</span>\r\n                                        )\r\n                                    }\r\n                                    return true;\r\n                                })}\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6} lg={4}>\r\n                            <FormGroup>\r\n                                <Label className=\"text-uppercase\" htmlFor=\"Time\">Time</Label>\r\n                                <div className=\"position-relative\">\r\n                                    <Input\r\n                                        id=\"Time\"\r\n                                        type=\"time\"\r\n                                        name=\"obs_time\"\r\n                                        value={observationImages?.data ? (observationImages?.data[observationImages?.selected_image_index]?.obs_time === null ? '--:--' : observationImages?.data[observationImages?.selected_image_index]?.obs_time) : ''}\r\n                                        className=\"w-100\"\r\n                                        placeholder=\"10:21:00 am\"\r\n                                        onChange={(e)=>handleImageInput(e)}\r\n                                    />\r\n                                </div>\r\n                                {error && errorData?.map((item, index) => {\r\n                                    if (step?.selected_image_index === index) {\r\n                                        return(\r\n                                            <span key={index} className=\"text-danger small\">{item?.obs_time}</span>\r\n                                        )\r\n                                    }\r\n                                    return true;\r\n                                })}\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6} lg={4}>\r\n                            <FormGroup>\r\n                                <Label className=\"text-uppercase\" htmlFor=\"TIME ZONE\">TIME ZONE</Label>\r\n                                <Dropdown className=\"dropdown-with-search\" toggle={() => setIsTimezoneOpen(!isTimezoneOpen)} isOpen={isTimezoneOpen}>\r\n                                    <DropdownToggle className=\"px-3 shadow-none border-0 text-black fw-normal text-start d-flex justify-content-between align-items-center w-100\">\r\n                                        {/*<span className=\"text-truncate\">{(observationImages?.data) ? `${observationImages?.data[observationImages?.selected_image_index]?.timezone.substring(0, 16)+'...'}` : ''}</span>*/}\r\n                                        <span className=\"text-truncate\">{(observationImages?.data) ? `${observationImages?.data[observationImages?.selected_image_index]?.timezone}` : ''}</span>\r\n                                        <Icon icon=\"fe:arrow-down\" className=\"down-arrow ms-1\"/>\r\n                                    </DropdownToggle>\r\n                                    <DropdownMenu className=\"py-0 shadow\">\r\n                                        <DropdownItem header className=\"mb-0 position-sticky start-0 top-0 end-0 p-2 bg-white\"><Input type=\"text\" className=\"p-2\" onChange={(e)=> findTimeZone(e)} placeholder=\"Search Timezone\" /></DropdownItem>\r\n                                        {timezone?.filter(item => {\r\n                                            return item.toLowerCase().indexOf(searchTimeZone.toLowerCase()) !== -1;\r\n                                        }).map((item, index) => {\r\n                                            return <DropdownItem  name=\"timezone\" className=\"px-2 fw-normal\" key={index} value={item} onClick={(e)=>handleImageInput(e)}>{item}</DropdownItem>\r\n                                        })}\r\n                                    </DropdownMenu>\r\n                                </Dropdown>\r\n                                {error && errorData?.map((item, index) => {\r\n                                    if (step?.selected_image_index === index) {\r\n                                        return(\r\n                                            <span key={index} className=\"text-danger small\">{item?.timezone}</span>\r\n                                        )\r\n                                    }\r\n                                    return true;\r\n                                })}\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    <div  className=\"border same-data_row\">\r\n                        <Row>\r\n                            <Col lg={6}>\r\n                                <Row className=\"flex-nowrap\">\r\n                                    <div className=\"border-end w-auto\">\r\n                                        <FormGroup className=\"form-group d-flex align-items-center\">\r\n                                            <Label className=\"form-label text-uppercase mb-0 me-2\" htmlFor=\"Date\">Date</Label>\r\n                                            <span className=\"fw-bold text-truncate data-value\">{(observationImages?.data) ? (observationImages?.data[observationImages?.selected_image_index]?.obs_date === null ? 'dd/mm/yyyy' : observationImages?.data[observationImages?.selected_image_index]?.obs_date) : 'dd/mm/yyyy'}</span>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <div className=\"w-auto\">\r\n                                        <FormGroup className=\"form-group d-flex align-items-center\">\r\n                                            <Label className=\"form-label text-uppercase mb-0 me-2\" htmlFor=\"Time\">Time</Label>\r\n                                            <span className=\"fw-bold text-truncate data-value\">{observationImages?.data ? (observationImages?.data[observationImages?.selected_image_index]?.obs_time === null ? '--:--' : observationImages?.data[observationImages?.selected_image_index]?.obs_time) : ''}</span>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col lg={6}>\r\n                                <div className=\"selected-address mt-2 mt-lg-0 text-end d-block\">\r\n                                    <span className=\"opacity-75\">{(observationImages?.data) ? `${observationImages?.data[observationImages?.selected_image_index]?.timezone}` : ''}</span>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                }\r\n            </Col>\r\n            <Col md={12} className=\"mb-5\">\r\n                <h6>How accurate is your timing?</h6>\r\n                <FormGroup>\r\n                    <Label className=\"text-uppercase\" htmlFor=\"Date\">Uncertainty in Time</Label>\r\n                    <Input\r\n                        id=\"Date\"\r\n                        type=\"text\"\r\n                        name=\"time_accuracy\"\r\n                        value={(observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.time_accuracy:''}\r\n                        placeholder=\"e.g. +/- 3 sec  or  +/- 1 min\"\r\n                        className=\"w-100\"\r\n                        onChange={(e)=>handleImageInput(e)}\r\n                    />\r\n                    <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b> +/- 3 sec  or  +/- 1 min</span>\r\n                </FormGroup>\r\n            </Col>\r\n            <Col md={12} className=\"mb-5\">\r\n\r\n                {error && errorData?.map((item, index) => {\r\n                    if (step?.selected_image_index === index) {\r\n                        return(\r\n                            <span key={index} className=\"text-danger small\">{item?.azimuth}</span>\r\n                        )\r\n                    }\r\n                    return true;\r\n                })}\r\n                <FormGroup className=\"d-flex align-items-center position-relative mb-4 pb-3\">\r\n                    <div className=\"custom-switch\">\r\n                        <input\r\n                            id=\"checkbox2\"\r\n                            type=\"checkbox\"\r\n                            name=\"is_precise_azimuth\"\r\n                            // checked={(observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.is_precise_azimuth :''}\r\n                            checked={angleDegree}\r\n                            className=\"hidden\"\r\n                            onChange={(e)=>handleImageInput(e)}\r\n                            onClick={()=> setAngleDegree(!angleDegree)}\r\n                        />\r\n                        <label\r\n                            className=\"switchbox\"\r\n                            htmlFor=\"checkbox2\"\r\n                        />\r\n                        <span>I know the precise azimuth angle in degrees</span>\r\n                    </div>\r\n                </FormGroup>\r\n                \r\n                {(angleDegree === false && (observationImages?.data && observationImages?.data[observationImages?.selected_image_index]?.is_precise_azimuth === 0 ||  observationImages?.data && observationImages?.data[observationImages?.selected_image_index]?.is_precise_azimuth === false)) ?\r\n                    <FormGroup>\r\n                        <Label className=\"justify-content-center mb-3 text-uppercase\">Look Direction</Label>\r\n                        \r\n                        <div className=\"compass-wrapper\">\r\n                            {\r\n                                directionValue?.map((direction, index)=>{\r\n                                    return(\r\n                                       \r\n                                        <Button\r\n                                            className={`${direction.name}-direction ${getdirectionAngle(Number(observationArray.data[observationImages?.selected_image_index]['azimuth'])) === direction.name ? 'active_direction' : ''}`}\r\n                                            onClick={()=> selectDirection(index)}\r\n                                            key={index}\r\n                                            id= {`directionValue${index}`}\r\n                                            data-angle={direction.angle}\r\n                                            data-name={direction.name}\r\n                                        >\r\n                                            <span className=\"d-block\">\r\n                                                {direction.name}\r\n                                            </span>\r\n                                            <span className=\"d-block direction-angle\">\r\n                                                {direction.angle}°\r\n                                            </span>\r\n                                        </Button>\r\n                                    )\r\n                                })\r\n                            }\r\n                            <div className=\"center-dot rounded-circle\" />\r\n                            <div className=\"rotate-arrow-wrap\">\r\n                                <div className=\"rotate-arrow-inner\" style={{ \"--directionAngle\": directionValue.filter((item) => item.name === getdirectionAngle(Number(observationArray.data[observationImages?.selected_image_index]['azimuth']))).map((dirData) => {\r\n                                        return dirData.angle;\r\n                                    }) + 'deg' }}>\r\n                                    <div className=\"rotate-arrow main\"><img src={Images.compassArrow} alt=\"Compass Arrow\" /> </div>\r\n                                    <div className=\"rotate-arrow hidden\"><img src={Images.compassArrow} alt=\"Compass Arrow\" /> </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </FormGroup>\r\n                :\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"Azimuth\">Azimuth Angle</Label>\r\n                        <Input\r\n                            id=\"Azimuth\"\r\n                            type=\"number\"\r\n                            min={0}\r\n                            max={360}\r\n                            name=\"azimuth\"\r\n                            value={(observationImages?.data) ? observationImages?.data[observationImages?.selected_image_index]?.azimuth:''}\r\n                            placeholder=\"120°\"\r\n                            className=\"degree-input\"\r\n                            onChange={(e)=>handleImageInput(e)}\r\n                        />\r\n                        <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b> 120°</span>\r\n                    </FormGroup>\r\n                }\r\n                <FormGroup className=\"mt-5\">\r\n                    <Button className=\"gray-outline-btn me-2\" onClick={() => toggleTab(Tabs.ObservationImages)}>Back</Button>\r\n                    <Button className=\"\" onClick={() => toggleTab(Tabs.EquipmentDetails)} disabled ={!disableNext}>Continue</Button>\r\n                </FormGroup>\r\n            </Col>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ObservationLocation;","import { Icon } from '@iconify/react';\r\nimport useObservations from \"../../hooks/useObservations\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ObservationUpdateUploadedImages = (item) => {\r\n\r\n    const {observationImages,setObservationImages} = useObservations();\r\n    const existingObvImageData = {...observationImages};\r\n\r\n    const toBase64 = file => new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n\r\n    const handleUpdateImage = async (e) => {\r\n        const fileList = e.target.files[0];\r\n        const image = await toBase64(fileList).catch(error => console.log(error));\r\n\r\n        existingObvImageData.data[observationImages?.selected_image_index]['item'] = fileList;\r\n        existingObvImageData.data[observationImages?.selected_image_index]['image'] = image;\r\n        existingObvImageData.data[observationImages?.selected_image_index]['name'] = fileList.name;\r\n        existingObvImageData.data[observationImages?.selected_image_index]['lastModified'] = fileList.lastModified;\r\n\r\n        setObservationImages(existingObvImageData);\r\n    }\r\n\r\n    const markTabActive = (item) => {\r\n        setObservationImages(prev => {\r\n            return {\r\n                ...prev,\r\n                selected_image_id: item?.item?.id,\r\n                selected_image_index:item?.index\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"replace-image_wrapper position-absolute rounded-circle bg-white d-flex justify-content-center align-items-center\">\r\n                <input\r\n                    type=\"file\"\r\n                    name=\"file\"\r\n                    id=\"UploadFile1\"\r\n                    accept=\"image/jpg, image/jpeg, image/png\"\r\n                    onChange={(e) => handleUpdateImage(e)}\r\n                    onClick={()=> markTabActive(item)}\r\n                    className=\"position-absolute w-100 h-100 opacity-0 p-0\"\r\n                />\r\n                <Icon icon=\"ion:sync-outline\" />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nObservationUpdateUploadedImages.propTypes = {\r\n    tabActive: PropTypes.func,\r\n};\r\nexport default ObservationUpdateUploadedImages;","import useObservations from \"../../hooks/useObservations\";\r\nimport {useLayoutEffect, useState} from \"react\";\r\nimport LazyLoad from \"../Upload/LazyLoad\";\r\nimport { Icon } from '@iconify/react';\r\nimport { PropTypes } from 'prop-types';\r\nimport ObservationUpdateUploadedImages from \"./ObservationUpdateUploadedImages\";\r\n\r\nconst ObservationUploadedImg = (props) => {\r\n    const { remove, className }=props;\r\n    const {observationImages, setObservationImages, observationSteps} = useObservations();\r\n    const [preview, setPreview] = useState([]);\r\n    const [activeTab, setActiveTab] = useState(observationImages?.selected_image_id ?? null);\r\n    // Toggle Tabs\r\n    const toggleTab = (tab,index=0) => {\r\n        setActiveTab(tab);\r\n        setObservationImages(prev => {\r\n            return {\r\n                ...prev,\r\n                selected_image_id: tab,\r\n                selected_image_index:index,\r\n\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n    useLayoutEffect(()=> {\r\n        setPreview(observationImages?.data);\r\n        setActiveTab(activeTab);\r\n    }, [activeTab, observationImages, preview])\r\n\r\n    return(\r\n        <>\r\n            {preview?.map((item, index) => {\r\n                return(\r\n                    <div className={`selected-image_wrapper d-flex justify-content-end mb-2 ms-2 ms-sm-0 position-relative ${className ? className : ''}`} key={index}>\r\n                        <div className={`selected-image  ${activeTab === item?.id ? 'active-tab' : ''}`}>\r\n                                <button type=\"button\" className='preview-btn position-relative d-flex p-0 shadow-none' onClick={()=> toggleTab(item?.id,index)}>\r\n                                    <LazyLoad converted={observationSteps?.converted} src={item?.image} alt={item?.name} />\r\n                                </button>\r\n                                <ObservationUpdateUploadedImages item={item} index={index} />\r\n                                <button type=\"button\" className=\"remove-btn text-black border-0 position-absolute btn\" onClick={()=> remove(item?.id)}>\r\n                                <span>\r\n                                    <Icon icon=\"ci:close-big\" />\r\n                                </span>\r\n                                </button>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}\r\n        </>\r\n    )\r\n}\r\nObservationUploadedImg.propTypes = {\r\n    remove: PropTypes.func\r\n};\r\nexport default ObservationUploadedImg;","import {FormGroup, Input, Label} from \"reactstrap\";\r\nimport useObservations from \"../../hooks/useObservations\";\r\nimport {Icon} from '@iconify/react';\r\nimport {useEffect, useState} from \"react\";\r\nimport {uploadImageDefaultState} from \"../../helpers/observation\";\r\nimport PropTypes from \"prop-types\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport {cameraSettingFields} from \"../../helpers/url\";\r\nimport UploadImageUI from \"../Shared/UploadImageUI\";\r\n\r\nconst ObservationUploadImg = (props) => {\r\n    const {multiple, maxLimit, imageFormat, detectImage, mode, small} = props;\r\n    const {setObservationImages, observationImages, setCameraDetails} = useObservations();\r\n    const [images, setImages] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const {auth} = useAuth();\r\n    const [userLocation, setUserLocation] = useState({\r\n        latitude: (auth?.user?.location_metadata?.lat) ? auth?.user?.location_metadata?.lat : 18.5204303,\r\n        longitude: (auth?.user?.location_metadata?.lng) ? auth?.user?.location_metadata?.lng : 73.8567437\r\n    });\r\n    const handleUploadImage = (e) => {\r\n        setError(null);\r\n        const fileList = e.target.files;\r\n        Array.from(fileList).forEach((item, id) => {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                const base64String = reader.result.replace('data:', '').replace(/^.+,/, '');\r\n                const baseImage = `data:image/png;base64,${base64String}`;\r\n                const random = (Math.random() + 1).toString(36).substring(7) + (Math.random() + 1).toString(36).substring(20);\r\n                const fileSize = (item.size / (1024 * 1024)).toFixed(2);\r\n                const repeatCheck = images?.map((image, index) => {\r\n                    return image?.lastModified === item?.lastModified && image?.name === item?.name;\r\n                });\r\n                const duplicate = repeatCheck.includes(true);\r\n                if (images?.length <= (mode ? 1 : 2) && fileSize < 5 && !duplicate) {\r\n\r\n                    if (mode) {\r\n                        return setImages([uploadImageDefaultState(random, baseImage, item, userLocation)])\r\n                    } else {\r\n                        setImages(prevState => [\r\n                            ...prevState,\r\n                            uploadImageDefaultState(random, baseImage, item, userLocation)\r\n                        ])\r\n                    }\r\n                }\r\n\r\n\r\n                if (mode) {\r\n                    setError((prev) => {\r\n                        return {\r\n                            ...prev,\r\n                            draft: 'You can not add new image',\r\n                        }\r\n                    })\r\n                }\r\n                if (images?.length > 2) {\r\n                    setError((prev) => {\r\n                        return {\r\n                            ...prev,\r\n                            count: 'You have reached the limit, delete some image, maximum upload allowed is 3',\r\n                        }\r\n                    })\r\n                }\r\n                if (fileSize > 5) {\r\n                    setError((prev) => {\r\n                        return {\r\n                            ...prev,\r\n                            size: 'You have exceeded the max file size limit (5mb)',\r\n                        }\r\n                    })\r\n                }\r\n                if (duplicate) {\r\n                    setError((prev) => {\r\n                        return {\r\n                            ...prev,\r\n                            duplicate: 'You have already added the image, please choose other image',\r\n                        }\r\n                    })\r\n                }\r\n\r\n            };\r\n            reader.readAsDataURL(item)\r\n        })\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        let images = (observationImages?.data) ? [...observationImages?.data] : [];\r\n        observationImages?.data?.map((item, index) => {\r\n            return item.latitude = userLocation?.latitude,\r\n                item.longitude = userLocation?.longitude\r\n        })\r\n        setImages(images)\r\n    }, [detectImage, mode, userLocation])\r\n\r\n\r\n    useEffect(() => {\r\n        if (images.length > 0) {\r\n            setObservationImages({\r\n                data: images,\r\n                observation_count: images.length,\r\n                selected_image_id: images?.[0]?.id,\r\n                selected_image_index: 0\r\n            });\r\n            setCameraDetails(cameraSettingFields)\r\n        }\r\n    }, [images, setObservationImages, userLocation])\r\n\r\n    return (\r\n        <>\r\n            <UploadImageUI\r\n                maxLimit={maxLimit}\r\n                imageFormat={imageFormat}\r\n                multiple={multiple}\r\n                handleUploadImage={handleUploadImage}\r\n                error={error}\r\n                small={small}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nObservationUploadImg.propTypes = {\r\n    userLocation: PropTypes.object,\r\n};\r\n\r\n\r\nexport default ObservationUploadImg;","import \"../../assets/scss/component/uploadObservationImage.scss\";\r\nimport { useState } from \"react\";\r\nimport { Row, Button, Col } from \"reactstrap\";\r\nimport ObservationUploadImg from \"./ObservationUploadImg\";\r\nimport useObservations from \"../../hooks/useObservations\";\r\nimport ObservationUploadedImg from \"./ObservationUploadedImg\";\r\n\r\nconst ObservationImages = (props) =>{\r\n    const {proceedNext, remove, detectImage, mode} = props;\r\n    const [isMultiple] = useState(false);\r\n    const { observationImages } = useObservations();\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col sm={observationImages?.data?.length ? 9 : 12} className=\"order-2 order-sm-1\">\r\n                    <ObservationUploadImg mode={mode} detectImage={detectImage} imageFormat={true} maxLimit={true} multiple={isMultiple}/>\r\n                </Col>\r\n                {observationImages?.data?.length && <Col sm={3}  className=\"order-1 order-sm-2 d-flex d-sm-block justify-content-start justify-content-sm-end overflow-hidden w-auto\">\r\n                    <ObservationUploadedImg className=\"sm-selected_image\" remove={remove} />\r\n                </Col>}\r\n            </Row>\r\n            <Row>\r\n                <Col sm={12}>\r\n                    <div className=\"mt-5\">\r\n                        <Button disabled={!observationImages?.data?.length} onClick={proceedNext}>Continue</Button>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ObservationImages;","import {useEffect, useState} from \"react\";\r\nimport \"../../assets/scss/component/ObservationProgress.scss\";\r\n\r\nconst ObservationProgress = (props) => {\r\n    const {step} = props;\r\n    const [progress, setProgress] = useState(100);\r\n\r\n\r\n    useEffect(()=> {\r\n        setProgress(\r\n            step?.active * 100 / step?.total\r\n        )\r\n    }, [step])\r\n\r\n    return(\r\n        <>\r\n            <div className=\"progress_bar text-black\">\r\n                {step?.active} of {step?.total} steps\r\n                <p className=\"progress_line\" style={{ \"--progressPercentage\": progress + '%' }} ></p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default ObservationProgress;","import { Icon } from \"@iconify/react\";\r\nimport useObservations from \"../../hooks/useObservations\";\r\nimport LazyLoad from \"../Upload/LazyLoad\";\r\nimport {useRef} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst ImagePreview = (props) =>{\r\n    const {remove}=props;\r\n    const imageDelete = useRef(null);\r\n    const {observationImages, observationSteps} = useObservations();\r\n\r\n    return (\r\n        <>\r\n            {observationImages?.data?.filter(item => item?.id === observationSteps?.selected_image_id).map((item, index) => {\r\n                return(\r\n                    <div key={index} className=\"upload-multiple-observation\">\r\n                        <div className=\"observation-image position-relative\">\r\n                            {/* {observationImages?.observation_count > 1 && */}\r\n                                <button type=\"button\" className=\"text-black border-0 rounded-0 shadow-none p-0 position-absolute btn\" ref={imageDelete} onClick={()=> remove(item?.id)}>\r\n                                <span>\r\n                                    <Icon icon=\"ci:close-big\" />\r\n                                </span>\r\n                                </button>\r\n                            {/* } */}\r\n                            <LazyLoad src={item?.image} alt={item?.name} />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}\r\n        </>\r\n    )\r\n}\r\nImagePreview.propTypes = {\r\n    remove: PropTypes.func,\r\n};\r\nexport default ImagePreview;","import {Modal, ModalBody} from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport {cdn} from \"../../helpers/url\";\r\n\r\nconst DeleteItemConfirmationPopup = (props) => {\r\n    const {open, handleClose, handleConfirmation} = props;\r\n    return (\r\n        <>\r\n            <Modal\r\n                isOpen={open}\r\n                centered\r\n                backdrop={true}\r\n                keyboard={false}\r\n                size=\"lg\"\r\n                className=\"delete-confirm_modal\"\r\n            >\r\n                <ModalBody className=\"text-center\">\r\n                    <div className=\"content\">\r\n                        <h2 className=\"mb-3\">Are you sure ?</h2>\r\n                        <div className=\"d-inline-block mx-auto remove-img w-100\">\r\n                            <img src={`${cdn.url}/remove-data.svg`} alt=\"Remove data\"/>\r\n                        </div>\r\n                        <p className=\"mb-5 opacity-75\">If you perform this action, we will only keep your first\r\n                            observation. If you wish to add more observation, you will need to enable this again & then\r\n                            you can add more.</p>\r\n                        <button type=\"button\" className=\"me-2 btn btn-dark px-5\"\r\n                                onClick={() => handleConfirmation()}>Yes\r\n                        </button>\r\n                        <button type=\"button\" className=\"px-5 btn btn-primary\"\r\n                                onClick={() => handleClose()}>No\r\n                        </button>\r\n                    </div>\r\n                </ModalBody>\r\n            </Modal>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nDeleteItemConfirmationPopup.propTypes = {\r\n    open: PropTypes.bool,\r\n    handleClose: PropTypes.func\r\n};\r\n\r\nexport default DeleteItemConfirmationPopup;","import {MultiImageTabs, Tabs} from \"../../helpers/observation\";\r\nimport {Icon} from \"@iconify/react/dist/iconify\";\r\nimport {\r\n    Button,\r\n    Col,\r\n    FormGroup,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Row,\r\n    TabContent,\r\n    TabPane\r\n} from \"reactstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport ObservationUploadImg from \"./ObservationUploadImg\";\r\nimport {useEffect, useState} from \"react\";\r\nimport useObservations from \"../../hooks/useObservations\";\r\nimport ObservationCategory from \"./ObservationCategory\";\r\nimport ImagePreview from \"./ImagePreview\";\r\nimport ObservationUploadedImg from './ObservationUploadedImg';\r\nimport DeleteItemConfirmationPopup from \"../Popup/DeleteItemConfirmationPopup\";\r\n\r\n\r\nconst ObservationAfterImageUpload = (props) => {\r\n    const {\r\n        toggleTab,\r\n        handleImageInput,\r\n        error,\r\n        disableNext,\r\n        obvType,\r\n        remove,\r\n        detectImage,\r\n        step,\r\n        showUploadedPreview,\r\n        mode\r\n    } = props;\r\n    const {\r\n        observationImages,\r\n        setObservationImages,\r\n        observationType,\r\n        setObservationCategory,\r\n        setObservationType,\r\n    } = useObservations();\r\n    const [isMultiple, setIsMultiple] = useState(false);\r\n    const [activeTab, setActiveImageTab] = useState(MultiImageTabs.MultipleImages);\r\n    const [isOther] = useState(false);\r\n    const [isConfirmPopUp, setIsConfirmPopUp] = useState(true);\r\n    const [shouldShowConfirmation, setShouldShowConfirmation] = useState(false);\r\n\r\n\r\n    // Toggle Tabs\r\n    const toggleImageTab = (tab) => {\r\n        if (activeTab !== tab) {\r\n            setActiveImageTab(tab);\r\n        }\r\n    };\r\n\r\n    const handleMultipleCheck = (e) => {\r\n        if (isMultiple) {\r\n            handleConfirmationPopUp();\r\n        }\r\n    }\r\n\r\n    const handleConfirmation = () => {\r\n        if (observationImages?.data?.length === 1) {\r\n            setIsConfirmPopUp(true);\r\n            setIsMultiple(false);\r\n            setShouldShowConfirmation(false);\r\n        } else {\r\n            const selectedObvIndex = step?.selected_image_index;\r\n            const filteredData = observationImages?.data?.filter((item, index) => {\r\n                return index === selectedObvIndex;\r\n            });\r\n            setObservationImages((prev) => {\r\n                return {\r\n                    ...prev,\r\n                    data: filteredData,\r\n                    observation_count: 1,\r\n                    selected_image_id: step?.selected_image_id,\r\n                    selected_image_index: 0\r\n                }\r\n            });\r\n            setObservationType((prev) => {\r\n                return {\r\n                    ...prev,\r\n                    image_type: 1\r\n                }\r\n            })\r\n            setActiveImageTab(MultiImageTabs.MultipleImages)\r\n            setIsConfirmPopUp(true);\r\n            setIsMultiple(false);\r\n            setShouldShowConfirmation(false);\r\n        }\r\n    }\r\n\r\n    const handleConfirmationPopUp = () => {\r\n        setShouldShowConfirmation(!isConfirmPopUp);\r\n        setIsConfirmPopUp(!isConfirmPopUp);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isMultiple) {\r\n            handleConfirmationPopUp();\r\n        }\r\n    }, [isMultiple])\r\n\r\n\r\n    useEffect(() => {\r\n        setIsMultiple(observationImages?.data?.length > 1)\r\n    }, [observationImages?.data?.length])\r\n\r\n\r\n    useEffect(() => {\r\n        setObservationCategory((prev) => {\r\n            return {\r\n                ...prev,\r\n                is_other: isOther\r\n            }\r\n        })\r\n\r\n        if (!mode) {\r\n            if (isMultiple && activeTab === MultiImageTabs.MultipleImages) {\r\n                setObservationType((prev) => {\r\n                    return {\r\n                        ...prev,\r\n                        image_type: 2\r\n                    }\r\n                })\r\n            } else if (!isMultiple) {\r\n                setObservationType((prev) => {\r\n                    return {\r\n                        ...prev,\r\n                        image_type: 1\r\n                    }\r\n                })\r\n            } else {\r\n                setObservationType((prev) => {\r\n                    return {\r\n                        ...prev,\r\n                        image_type: 3\r\n                    }\r\n                })\r\n            }\r\n        } else {\r\n            setObservationType((prev) => {\r\n                return {\r\n                    ...prev,\r\n                    image_type: observationType?.image_type === 3 ? 3 : 2\r\n                }\r\n            });\r\n            setActiveImageTab(observationType?.image_type === 3 ? MultiImageTabs.ImageSequence : MultiImageTabs.MultipleImages);\r\n        }\r\n    }, [activeTab, isMultiple, isOther, setObservationCategory, setObservationType])\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                {!mode &&\r\n                    <Col sm={12}>\r\n                        <FormGroup className=\"d-flex align-items-center position-relative\">\r\n                            <div className=\"custom-switch\">\r\n                                <input\r\n                                    id=\"toggleMultiple\"\r\n                                    type=\"checkbox\"\r\n                                    className=\"hidden\"\r\n                                    checked={isMultiple}\r\n                                    onClick={(e) => handleMultipleCheck(e)}\r\n                                    onChange={(e) => setIsMultiple(true)}\r\n                                />\r\n                                <label className=\"switchbox\" htmlFor=\"toggleMultiple\"/>\r\n                                <span>Multiple Observations (limit to 3)</span>\r\n                            </div>\r\n                        </FormGroup>\r\n                    </Col>\r\n                }\r\n                {isMultiple && !mode &&\r\n                    <Col sm={12}>\r\n                        <Nav tabs>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    className={activeTab === MultiImageTabs.MultipleImages ? 'active' : ''}\r\n                                    onClick={() => {\r\n                                        toggleImageTab(MultiImageTabs.MultipleImages);\r\n                                    }}\r\n                                >\r\n                                    <Icon icon=\"fluent:square-multiple-20-regular\" color=\"black\" width={24}\r\n                                          className=\"me-3\"/>\r\n                                    Multiple images\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink\r\n                                    className={activeTab === MultiImageTabs.ImageSequence ? 'active' : ''}\r\n                                    onClick={() => {\r\n                                        toggleImageTab(MultiImageTabs.ImageSequence);\r\n                                    }}\r\n                                >\r\n                                    <Icon icon=\"codicon:list-filter\" color=\"black\" width={24} className=\"me-3\"/>\r\n                                    <div>\r\n                                        Image Sequence\r\n                                        <p className=\"mb-0\">Images sequence extracted from a video</p>\r\n                                    </div>\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Col>\r\n                }\r\n                <Col sm={12}>\r\n                    <TabContent activeTab={activeTab}>\r\n                        <TabPane tabId={MultiImageTabs.MultipleImages}>\r\n                            <Row>\r\n                                {isMultiple &&\r\n                                    <Col sm={12}>\r\n                                        <ObservationUploadImg small={true} detectImage={detectImage} imageFormat={false}\r\n                                                              maxLimit={false} multiple={false}/>\r\n                                    </Col>\r\n                                }\r\n                                {showUploadedPreview &&\r\n                                    <Col sm={12}>\r\n                                        <div className=\"d-flex justify-content-start justify-content-sm-end d-sm-none\">\r\n                                            <ObservationUploadedImg obvType={obvType} step={step} error={error}\r\n                                                                    remove={remove}/></div>\r\n                                    </Col>\r\n                                }\r\n                                <Col sm={12}>\r\n                                    <ImagePreview remove={remove}/>\r\n                                </Col>\r\n\r\n                                <Col sm={12}>\r\n                                    <ObservationCategory obvType={obvType} error={error}/>\r\n                                </Col>\r\n                                <Col sm={12}>\r\n                                    <Button type=\"button\" className=\"mt-3\" disabled={!disableNext}\r\n                                            onClick={() => toggleTab(Tabs.DateTimeLocation)}>Continue</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </TabPane>\r\n                        <TabPane tabId={MultiImageTabs.ImageSequence}>\r\n                            <Row>\r\n                                {isMultiple &&\r\n                                    <Col sm={12}>\r\n                                        <div className=\"small-upload_box mb-3\">\r\n                                            <ObservationUploadImg detectImage={detectImage} imageFormat={false}\r\n                                                                  maxLimit={false} multiple={false}/>\r\n                                        </div>\r\n                                    </Col>\r\n                                }\r\n                                {showUploadedPreview &&\r\n                                    <Col sm={12}>\r\n                                        <div className=\"d-flex justify-content-end d-sm-none\"><ObservationUploadedImg\r\n                                            obvType={obvType} step={step} error={error} remove={remove}/></div>\r\n                                    </Col>\r\n                                }\r\n                                <Col sm={12}>\r\n                                    <ImagePreview remove={remove}/>\r\n                                </Col>\r\n                                <Col sm={12}>\r\n                                    <Button type=\"button\"\r\n                                            onClick={() => toggleTab(Tabs.DateTimeLocation)}>Continue</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </TabPane>\r\n                    </TabContent>\r\n                </Col>\r\n            </Row>\r\n\r\n            {isConfirmPopUp && shouldShowConfirmation &&\r\n                <DeleteItemConfirmationPopup\r\n                    open={isConfirmPopUp && shouldShowConfirmation}\r\n                    handleClose={handleConfirmationPopUp}\r\n                    handleConfirmation={handleConfirmation}\r\n                />\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nObservationAfterImageUpload.propTypes = {\r\n    remove: PropTypes.func,\r\n};\r\nexport default ObservationAfterImageUpload;\r\n","import { Row, Col, FormGroup, Input, Button } from \"reactstrap\"\r\nimport {Tabs} from \"../../helpers/observation\";\r\n\r\nimport \"../../assets/scss/component/observationEquipment.scss\";\r\nimport EquipmentForm from '../Shared/EquipmentForm';\r\nimport useObservations from \"../../hooks/useObservations\";\r\n\r\nconst EquipmentDetailsForm = (props) =>{\r\n    const {toggleTab,handleInput,handleOtherCamera,cameraDetails, error, step, isSwitchOn } = props;\r\n    const {\r\n        observationData\r\n    } = useObservations();\r\n    return (\r\n        <>\r\n        <Row>\r\n            <EquipmentForm step={step} handleInput1={handleInput} updateSetting={cameraDetails} error={error} isSwitchOn={isSwitchOn}/>\r\n\r\n            <Col md=\"12\">\r\n                <div className=\"border-line\"/>\r\n                <FormGroup>\r\n                    <h6>Elevation angle of your camera in degrees</h6>\r\n                    <Input\r\n                    type=\"number\"\r\n                    name=\"elevation_angle\"\r\n                    value={observationData?.elevation_angle ?? ''}\r\n                    placeholder=\"e.g. 20\"\r\n                    onChange={(e)=>handleOtherCamera(e)}\r\n                    />\r\n                    <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b>20</span>\r\n                </FormGroup>\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormGroup>\r\n                    <h6>Link to the video of this event</h6>\r\n                    <Input\r\n                    type=\"url\"\r\n                    name=\"video_url\"\r\n                    value={observationData?.video_url ?? ''}\r\n                    onChange={(e)=>handleOtherCamera(e)}\r\n                    placeholder=\"e.g. https://www.youtube.com/watch?v=PjZ2Y2nn000\"\r\n                    />\r\n                    <span className=\"d-block mt-1 opacity-75 ex-text\"><b className=\"me-1\">Example:</b>https://www.youtube.com/watch?v=PjZ2Y2nn000</span>\r\n                </FormGroup>\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormGroup>\r\n                    <h6>Please share the story of your capture</h6>\r\n                    <div className=\"border-line my-2\"/>\r\n                    <Input\r\n                        type=\"textarea\"\r\n                        name=\"story\"\r\n                        value={observationData?.story ?? ''}\r\n                        onChange={(e)=>handleOtherCamera(e)}\r\n                        placeholder=\"We would love to hear more about your experience.\"\r\n                    />\r\n                </FormGroup>\r\n            </Col>\r\n            <Col md={12}>\r\n                <Button className=\"gray-outline-btn me-2\"  onClick={() =>toggleTab(Tabs.DateTimeLocation)}>Back</Button>\r\n                <Button type=\"submit\" disabled={(!(cameraDetails?.camera_type && cameraDetails?.focal_length && cameraDetails?.aperture)) }>Submit</Button>\r\n            </Col>\r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EquipmentDetailsForm;","import {\r\n    Button,\r\n    Col,\r\n    Container,\r\n    Form,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Row,\r\n    TabContent,\r\n    TabPane,\r\n    UncontrolledAlert,\r\n} from \"reactstrap\";\r\nimport \"../../assets/scss/component/uploadObservationImage.scss\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {useLocation, useNavigate} from \"react-router-dom\";\r\nimport useObservations from \"../../hooks/useObservations\";\r\nimport useAuth from \"../../hooks/useAuth\";\r\nimport axios from \"../../api/axios\";\r\nimport {baseURL, cameraSettingFields, routeUrls} from \"../../helpers/url\";\r\nimport {Tabs} from \"../../helpers/observation\";\r\n\r\nimport ObservationLocation from \"../../components/Observation/ObservationLocation\";\r\nimport ObservationUploadedImg from \"../../components/Observation/ObservationUploadedImg\";\r\nimport ObservationImages from \"../../components/Observation/ObservationImages\";\r\nimport ObservationProgress from \"../../components/Observation/ObservationProgress\";\r\nimport ObservationAfterImageUpload from \"../../components/Observation/ObservationAfterImageUpload\";\r\nimport EquipmentDetailsForm from \"../../components/Observation/EquipmentDetailsForm\";\r\nimport Loader from \"../../components/Shared/Loader\";\r\n\r\nconst AddObservation = () => {\r\n    const {auth} = useAuth();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const {\r\n        observationSteps,\r\n        setObservationSteps,\r\n        observationImages,\r\n        setObservationImages,\r\n        observationData,\r\n        setObservationData,\r\n        observationType,\r\n        setObservationType,\r\n        cameraDetails,\r\n        setCameraDetails,\r\n    } = useObservations();\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const [activeTab, setActiveTab] = useState(Tabs.ObservationImages);\r\n    const [next, setNext] = useState(false);\r\n    const [isSwitchOn, setSwitchOn] = useState(false);\r\n    const [updateMode, setUpdateMode] = useState(false);\r\n    const [reset, setReset] = useState(false);\r\n    const [success, setSuccess] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [deletedImage, setDeletedImage] = useState(null);\r\n    const [draft, setDraft] = useState(true);\r\n    const [draftData, setDraftData] = useState();\r\n\r\n    let disabledLocation = false;\r\n    for (let index = 0; index < observationData?.map_data?.length; index++) {\r\n        if (\r\n            observationData?.map_data?.[index] &&\r\n            observationData?.map_data?.[index]?.category_map?.category.length > 0\r\n        ) {\r\n            disabledLocation = true;\r\n        } else {\r\n            disabledLocation = false;\r\n            break;\r\n        }\r\n    }\r\n\r\n    let disabledEquipment = false;\r\n    for (let index = 0; index < observationData?.map_data?.length; index++) {\r\n        if (\r\n            observationData?.map_data?.[index] &&\r\n            observationData?.map_data?.[index]?.azimuth &&\r\n            observationData?.map_data?.[index]?.obs_time &&\r\n            observationData?.map_data?.[index]?.obs_date &&\r\n            observationData?.map_data?.[index]?.timezone\r\n        ) {\r\n            disabledEquipment = true;\r\n        } else {\r\n            disabledEquipment = false;\r\n            break;\r\n        }\r\n    }\r\n\r\n    const disabledLocationTab =\r\n        observationData?.image_type !== 3 ? disabledLocation && next : next;\r\n    const disabledEquipmentTab = disabledLocation && next && disabledEquipment;\r\n\r\n    // Toggle Tabs\r\n    const toggleTab = (tab) => {\r\n        if (activeTab !== tab) {\r\n            setActiveTab(tab);\r\n        }\r\n        window.scrollTo(0, 0);\r\n    };\r\n\r\n    const handleInput = (e) => {\r\n        let name = e.target.name,\r\n            value = e.target.value;\r\n        setCameraDetails({\r\n            ...cameraDetails,\r\n            [name]: value,\r\n        });\r\n\r\n        setObservationData((prev) => {\r\n            return {\r\n                ...prev,\r\n                camera: cameraDetails,\r\n            };\r\n        });\r\n    };\r\n\r\n    const handleOtherCamera = (e) => {\r\n        let name = e.target.name,\r\n            value = e.target.value;\r\n\r\n        setObservationData((prev) => {\r\n            return {\r\n                ...prev,\r\n                [name]: value,\r\n            };\r\n        });\r\n    };\r\n\r\n    const handleImageInput = (e, address = null) => {\r\n        let observationArray = {...observationImages};\r\n        if (e === \"address\") {\r\n            observationArray.data[observationImages?.selected_image_index][\r\n                \"location\"\r\n                ] = address;\r\n            if (observationArray.data[1]) {\r\n                observationArray.data[1].category_map[\"location\"] = address;\r\n            }\r\n            if (observationArray.data[2]) {\r\n                observationArray.data[2].category_map[\"location\"] = address;\r\n            }\r\n        } else {\r\n            let name = e.target.name,\r\n                value = e.target.value;\r\n\r\n            if (name === \"is_other\") {\r\n                observationArray.data[\r\n                    observationImages?.selected_image_index\r\n                    ].category_map[name] = e.target.checked;\r\n                if (observationData?.image_type === 3) {\r\n                    if (observationArray.data[1]) {\r\n                        observationArray.data[1].category_map[name] = e.target.checked;\r\n                    }\r\n                    if (observationArray.data[2]) {\r\n                        observationArray.data[2].category_map[name] = e.target.checked;\r\n                    }\r\n                }\r\n            } else {\r\n                if (name === \"is_precise_azimuth\") {\r\n                    observationArray.data[observationImages?.selected_image_index][name] =\r\n                        e.target.checked === true ? 1 : 0;\r\n                    if (observationData?.image_type === 3) {\r\n                        if (observationArray.data[1]) {\r\n                            observationArray.data[1][\"is_precise_azimuth\"] =\r\n                                e.target.checked === true ? 1 : 0;\r\n                        }\r\n                        if (observationArray.data[2]) {\r\n                            observationArray.data[2][\"is_precise_azimuth\"] =\r\n                                e.target.checked === true ? 1 : 0;\r\n                        }\r\n                    }\r\n                    if (e.target.checked === false) {\r\n                        observationArray.data[observationImages?.selected_image_index][\r\n                            \"azimuth\"\r\n                            ] =\r\n                            observationArray && observationArray.data\r\n                                ? observationArray.data[\r\n                                    observationImages?.selected_image_index\r\n                                    ][\"azimuth\"]\r\n                                : undefined;\r\n                        if (observationData?.image_type === 3) {\r\n                            if (observationArray.data[1]) {\r\n                                observationArray.data[1][\"azimuth\"] =\r\n                                    observationArray?.data?.[0][\"azimuth\"];\r\n                            }\r\n                            if (observationArray.data[2]) {\r\n                                observationArray.data[2][\"azimuth\"] =\r\n                                    observationArray?.data?.[0][\"azimuth\"];\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    observationArray.data[observationImages?.selected_image_index][name] =\r\n                        value;\r\n                    if (observationData?.image_type === 3) {\r\n                        if (observationArray.data[1]) {\r\n                            observationArray.data[1][name] = value;\r\n                        }\r\n                        if (observationArray.data[2]) {\r\n                            observationArray.data[2][name] = value;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        setObservationImages(observationArray);\r\n    };\r\n\r\n    const handlesetDraft = () => {\r\n        setIsLoading(true);\r\n        sendData(1).then((r) => r);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setIsLoading(true);\r\n        setDraft(0);\r\n        sendData(0).then((r) => r);\r\n    };\r\n\r\n    const sendData = async (draft) => {\r\n        const cloneDeep = require(\"lodash.clonedeep\");\r\n        const formData = new FormData();\r\n        const finalData = cloneDeep(observationData);\r\n        finalData?.map_data?.map((item, index) => {\r\n            delete item[\"image\"];\r\n            formData.append(\"image_\" + index, item.item);\r\n            return true;\r\n        });\r\n        if (draft === 1) {\r\n            finalData.is_draft = draft;\r\n        }\r\n        finalData.camera = cameraDetails\r\n            ? cameraDetails\r\n            : auth?.camera\r\n                ? auth?.camera?.id\r\n                : null;\r\n        formData.append(\"data\", JSON.stringify(finalData));\r\n\r\n        if (!updateMode) {\r\n            await axios\r\n                .post(baseURL.api + \"/observation/upload_observation/\", formData, {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${auth?.token?.access}`,\r\n                    },\r\n                })\r\n                .then((response) => {\r\n                    setError(null);\r\n                    setSuccess({\r\n                        data: response?.data,\r\n                        status: response?.status,\r\n                        message: response?.message,\r\n                    });\r\n                    setIsLoading(false);\r\n                    window.scrollTo(0, 0);\r\n                    setTimeout(function () {\r\n                        handleReset();\r\n                    }, 500);\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error.response);\r\n                    setIsLoading(false);\r\n                    setError({\r\n                        data: error?.response?.data,\r\n                        status: error?.response?.status,\r\n                        message: error?.message,\r\n                    });\r\n                });\r\n        } else {\r\n            await axios\r\n                .put(\r\n                    baseURL.api +\r\n                    `/observation/update_observation/${observationSteps?.mode?.id}/`,\r\n                    formData,\r\n                    {\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${auth?.token?.access}`,\r\n                        },\r\n                    }\r\n                )\r\n                .then((response) => {\r\n                    setError(null);\r\n                    setSuccess({\r\n                        data: response?.data,\r\n                        status: response?.status,\r\n                        message: response?.message,\r\n                    });\r\n                    setIsLoading(false);\r\n                    window.scrollTo(0, 0);\r\n                    setTimeout(function () {\r\n                        handleReset();\r\n                    }, 500);\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error.response);\r\n                    setIsLoading(false);\r\n                    setError({\r\n                        data: error?.response?.data,\r\n                        status: error?.response?.status,\r\n                        message: error?.message,\r\n                    });\r\n                });\r\n        }\r\n    };\r\n\r\n    const getCameraDetail = async (e) => {\r\n        if (e.target.checked === true) {\r\n            await axios\r\n                .get(baseURL.api + \"/users/camera_setting/\", {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${auth?.token?.access}`,\r\n                    },\r\n                })\r\n                .then((response) => {\r\n                    setCameraDetails(response?.data);\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error.response);\r\n                });\r\n        } else {\r\n            setCameraDetails(cameraSettingFields);\r\n        }\r\n    };\r\n\r\n    const handleContinue = () => {\r\n        setNext(!next);\r\n    };\r\n\r\n    const handleReset = (e) => {\r\n        navigate(\"/observations\");\r\n        setReset(true);\r\n        setObservationSteps({\r\n            total: 3,\r\n            active: 1,\r\n            mode: {\r\n                update: true,\r\n                id: false,\r\n            },\r\n        });\r\n        setObservationImages([]);\r\n        setObservationData(null);\r\n        console.clear();\r\n    };\r\n\r\n    const removeItem = (id) => {\r\n        let newImage = [];\r\n        observationData?.map_data\r\n            ?.filter((item) => item.id !== id)\r\n            .map((item, index) => {\r\n                return newImage.push(item);\r\n            });\r\n        if (newImage.length > 0) {\r\n            setObservationSteps((prev) => {\r\n                return {\r\n                    ...prev,\r\n                    selected_image_id: newImage?.[0].id,\r\n                    selected_image_index: 0,\r\n                    observation_count: newImage.length,\r\n                };\r\n            });\r\n            setObservationImages((prev) => {\r\n                return {\r\n                    ...prev,\r\n                    observation_count: newImage.length,\r\n                    selected_image_id: newImage?.[0].id,\r\n                    selected_image_index: 0,\r\n                    data: newImage,\r\n                };\r\n            });\r\n            setObservationData((prev) => {\r\n                return {\r\n                    ...prev,\r\n                    map_data: newImage,\r\n                };\r\n            });\r\n            setDeletedImage(id);\r\n        } else {\r\n            window.location.reload();\r\n        }\r\n    };\r\n\r\n    const showUploadedPreview = () => {\r\n        return !(\r\n            !(\r\n                observationImages?.data &&\r\n                next &&\r\n                activeTab === Tabs.ObservationImages\r\n            ) &&\r\n            !(\r\n                activeTab === Tabs.DateTimeLocation &&\r\n                !(observationType?.image_type === 3) &&\r\n                !(observationType?.image_type === 1)\r\n            )\r\n        );\r\n    };\r\n\r\n    const getFileName = (url) => {\r\n        return url.split(/[#?]/)[0].split(\"/\").pop().trim();\r\n    };\r\n\r\n    const getObservationDataForUpdate = async (obvId) => {\r\n        await axios\r\n            .get(baseURL.api + `/observation/get_draft_data/${obvId}/`, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${auth?.token?.access}`,\r\n                },\r\n            })\r\n            .then((response) => {\r\n                let data = response?.data?.data;\r\n                setDraftData({\r\n                    image_type: data.image_type,\r\n                    elevation_angle: data.elevation_angle,\r\n                    video_url: data.video_url,\r\n                    camera: data.camera_data,\r\n                    question_field_one: data.question_field_one,\r\n                    question_field_two: data.question_field_two,\r\n                    story: data.story,\r\n                    map_data: data.images,\r\n                });\r\n                setCameraDetails(data?.camera_data);\r\n                setUpdateMode(true);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    const toBase64 = (file) =>\r\n        new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = (error) => reject(error);\r\n        });\r\n\r\n    useEffect(() => {\r\n        draftData?.map_data?.map((item, index) => {\r\n            let imageUrl = item.image,\r\n                fileName = getFileName(imageUrl);\r\n            return fetch(imageUrl)\r\n                .then(async (response) => {\r\n                    const contentType = response.headers.get(\"content-type\");\r\n                    const blob = await response\r\n                        .blob()\r\n                        .catch((error) => console.log(\"blob error\", error));\r\n                    const file = new File([blob], fileName, {contentType});\r\n                    const image = await toBase64(file).catch((error) =>\r\n                        console.log(\"base64 Error\", error)\r\n                    );\r\n                    item.compressed_image = null;\r\n                    setTimeout(function () {\r\n                        item.item = file;\r\n                        item.image = image;\r\n                        item.name = file.name;\r\n                        item.lastModified = file.lastModified;\r\n                    }, 500);\r\n                    return file;\r\n                })\r\n                .catch((error) =>\r\n                    console.log(\r\n                        `Error converting the CDN image to file object at index [${index}] [${error}]`\r\n                    )\r\n                );\r\n        });\r\n    }, [draftData, setObservationImages]);\r\n\r\n    useEffect(() => {\r\n        let id = observationSteps?.mode?.id,\r\n            updateUrl = location.pathname === `/${routeUrls.observationsUpdate}`,\r\n            obvType = observationSteps?.mode?.type;\r\n\r\n        if (updateUrl && obvType === \"draft\") {\r\n            getObservationDataForUpdate(id).then((r) => r);\r\n            setObservationSteps((prev) => {\r\n                return {\r\n                    ...prev,\r\n                    converted: true,\r\n                };\r\n            });\r\n        }\r\n\r\n        if (updateUrl && obvType !== \"draft\") {\r\n            return navigate(\"/observations\");\r\n        }\r\n    }, [location?.pathname, updateMode, observationSteps?.converted]);\r\n\r\n    useEffect(() => {\r\n        let existingObvImageData = {...observationImages},\r\n            obvType = {...observationType};\r\n\r\n        setObservationType({\r\n            ...obvType,\r\n            image_type: draftData?.image_type === 2 ? 1 : draftData?.image_type,\r\n        });\r\n        setObservationImages({\r\n            ...existingObvImageData,\r\n            data: draftData?.map_data,\r\n            selected_image_id: draftData?.map_data[0].id,\r\n            selected_image_index: 0,\r\n            observation_count: draftData?.map_data.length,\r\n        });\r\n    }, [draftData, setObservationImages]);\r\n\r\n    // Set Progress Bar\r\n    useEffect(() => {\r\n        function setActiveTabForProgressBar() {\r\n            if (activeTab === Tabs.ObservationImages) {\r\n                return 1;\r\n            } else if (activeTab === Tabs.DateTimeLocation) {\r\n                return 2;\r\n            } else {\r\n                return 3;\r\n            }\r\n        }\r\n\r\n        setObservationSteps((prev) => {\r\n            return {\r\n                ...prev,\r\n                active: setActiveTabForProgressBar(),\r\n                selected_image_id: observationImages?.selected_image_id,\r\n                selected_image_index: observationImages?.selected_image_index,\r\n                is_draft: draft,\r\n            };\r\n        });\r\n    }, [activeTab, draft, observationImages, setObservationSteps]);\r\n\r\n    return (\r\n        <div className=\"position-relative\">\r\n            {isLoading && <Loader fixContent={true}/>}\r\n            {success && (\r\n                <UncontrolledAlert\r\n                    color=\"success\"\r\n                    data-dismiss=\"alert\"\r\n                    dismissible=\"true\"\r\n                    className=\"text-center mt-3 d-inline-block w-100\"\r\n                >\r\n                    {success?.data?.success}\r\n                </UncontrolledAlert>\r\n            )}\r\n            <Form\r\n                className=\"observation-form upload-observation-form-main\"\r\n                onSubmit={handleSubmit}\r\n            >\r\n                <div className=\"common-top-button-wrapper\">\r\n                    <Container>\r\n                        <div className=\"common-top-button-wrapper-inner\">\r\n                            <Button\r\n                                className=\"gray-outline-btn\"\r\n                                onClick={handleReset}\r\n                                disabled={!observationImages?.data}\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n                            <div className=\"top-right-btn\">\r\n                                <Button\r\n                                    className=\"gray-outline-btn me-2 me-sm-3\"\r\n                                    onClick={handlesetDraft}\r\n                                    disabled={!next}\r\n                                >\r\n                                    Save as draft\r\n                                </Button>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    disabled={\r\n                                        !(\r\n                                            cameraDetails?.camera_type &&\r\n                                            cameraDetails?.focal_length &&\r\n                                            cameraDetails?.aperture\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    Submit\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </Container>\r\n                </div>\r\n                <section className=\"upload-observation-form-inner\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col md={3} sm={12}>\r\n                                <div className=\"observation-form-left-tab\">\r\n                                    <ObservationProgress step={observationSteps}/>\r\n                                    <Nav tabs className=\"flex-column\">\r\n                                        <NavItem>\r\n                                            <NavLink\r\n                                                className={\r\n                                                    activeTab === Tabs.ObservationImages ? \"active\" : \"\"\r\n                                                }\r\n                                                onClick={() => {\r\n                                                    if (\r\n                                                        observationData?.map_data?.[0]?.category_map\r\n                                                            ?.category &&\r\n                                                        next\r\n                                                    ) {\r\n                                                        toggleTab(Tabs.ObservationImages);\r\n                                                    }\r\n                                                }}\r\n                                            >\r\n                                                Observation Images\r\n                                            </NavLink>\r\n                                        </NavItem>\r\n                                        <NavItem>\r\n                                            <NavLink\r\n                                                className={`${\r\n                                                    activeTab === Tabs.DateTimeLocation ? \"active\" : \"\"\r\n                                                } ${disabledLocationTab ? \"\" : \"disabled\"}`}\r\n                                                onClick={() => {\r\n                                                    if (disabledLocationTab) {\r\n                                                        toggleTab(Tabs.DateTimeLocation);\r\n                                                    }\r\n                                                }}\r\n                                            >\r\n                                                Date, Time & Location\r\n                                            </NavLink>\r\n                                        </NavItem>\r\n                                        <NavItem>\r\n                                            <NavLink\r\n                                                className={`${\r\n                                                    activeTab === Tabs.EquipmentDetails ? \"active\" : \"\"\r\n                                                } ${disabledEquipmentTab ? \"\" : \"disabled\"}`}\r\n                                                onClick={() => {\r\n                                                    if (disabledEquipmentTab) {\r\n                                                        toggleTab(Tabs.EquipmentDetails);\r\n                                                    }\r\n                                                }}\r\n                                            >\r\n                                                Equipment Details\r\n                                            </NavLink>\r\n                                        </NavItem>\r\n                                    </Nav>\r\n                                </div>\r\n                            </Col>\r\n\r\n                            <Col\r\n                                md={\r\n                                    observationImages?.data?.length > 0 &&\r\n                                    next &&\r\n                                    !(activeTab === Tabs.EquipmentDetails)\r\n                                        ? 7\r\n                                        : 9\r\n                                }\r\n                                sm={\r\n                                    observationImages?.data?.length > 0 &&\r\n                                    next &&\r\n                                    !(activeTab === Tabs.EquipmentDetails)\r\n                                        ? 9\r\n                                        : 12\r\n                                }\r\n                            >\r\n                                <div className=\"observation-form-middle-tab\">\r\n                                    <TabContent activeTab={activeTab}>\r\n                                        <TabPane tabId={Tabs.ObservationImages}>\r\n                                            {next ? (\r\n                                                <ObservationAfterImageUpload\r\n                                                    mode={updateMode}\r\n                                                    showUploadedPreview={showUploadedPreview}\r\n                                                    obvType={observationType}\r\n                                                    step={observationSteps}\r\n                                                    error={error}\r\n                                                    detectImage={deletedImage}\r\n                                                    remove={removeItem}\r\n                                                    toggleTab={toggleTab}\r\n                                                    disableNext={disabledLocationTab}\r\n                                                    handleImageInput={handleImageInput}\r\n                                                />\r\n                                            ) : (\r\n                                                <ObservationImages\r\n                                                    mode={updateMode}\r\n                                                    detectImage={deletedImage}\r\n                                                    remove={removeItem}\r\n                                                    proceedNext={() => handleContinue()}\r\n                                                />\r\n                                            )}\r\n                                        </TabPane>\r\n                                        <TabPane\r\n                                            tabId={Tabs.DateTimeLocation}\r\n                                            className=\"observation_location\"\r\n                                        >\r\n                                            {showUploadedPreview() && (\r\n                                                <div\r\n                                                    className=\"observation-form-right-tab d-flex justify-content-start justify-content-sm-end d-sm-none position-relative position-sm-sticky\">\r\n                                                    <ObservationUploadedImg\r\n                                                        obvType={observationType}\r\n                                                        step={observationSteps}\r\n                                                        error={error}\r\n                                                        remove={removeItem}\r\n                                                    />\r\n                                                </div>\r\n                                            )}\r\n                                            {observationImages?.data && (\r\n                                                <ObservationLocation\r\n                                                    mode={updateMode}\r\n                                                    obvType={observationType}\r\n                                                    step={observationSteps}\r\n                                                    error={error}\r\n                                                    toggleTab={toggleTab}\r\n                                                    handleImageInput={handleImageInput}\r\n                                                    disableNext={disabledEquipmentTab}\r\n                                                />\r\n                                            )}\r\n                                        </TabPane>\r\n                                        <TabPane\r\n                                            tabId={Tabs.EquipmentDetails}\r\n                                            className=\"observation_equipment\"\r\n                                        >\r\n                                            {auth?.user?.camera && (\r\n                                                <FormGroup\r\n                                                    check\r\n                                                    className=\"d-flex align-items-center position-relative mb-3\"\r\n                                                >\r\n                                                    <Label check>\r\n                                                        <Input\r\n                                                            type=\"checkbox\"\r\n                                                            name=\"profileData\"\r\n                                                            checked={isSwitchOn}\r\n                                                            disabled={!auth?.user?.camera}\r\n                                                            onChange={(e) => {\r\n                                                                setSwitchOn(!isSwitchOn);\r\n                                                                getCameraDetail(e).then((r) => r);\r\n                                                            }}\r\n                                                        />\r\n                                                        Pull data from my profile\r\n                                                    </Label>\r\n                                                </FormGroup>\r\n                                            )}\r\n                                            <EquipmentDetailsForm\r\n                                                step={observationSteps}\r\n                                                isSwitchOn={isSwitchOn}\r\n                                                error={error}\r\n                                                handleInput={handleInput}\r\n                                                toggleTab={toggleTab}\r\n                                                cameraDetails={cameraDetails}\r\n                                                handleOtherCamera={handleOtherCamera}\r\n                                                getCameraDetail={getCameraDetail}\r\n                                            />\r\n                                        </TabPane>\r\n                                    </TabContent>\r\n                                </div>\r\n                            </Col>\r\n\r\n                            {showUploadedPreview() && (\r\n                                <Col\r\n                                    md={2}\r\n                                    sm={3}\r\n                                    className=\"d-none d-sm-block overflow-hidden\"\r\n                                >\r\n                                    <div className=\"observation-form-right-tab\">\r\n                                        <ObservationUploadedImg\r\n                                            obvType={observationType}\r\n                                            step={observationSteps}\r\n                                            error={error}\r\n                                            remove={removeItem}\r\n                                        />\r\n                                    </div>\r\n                                </Col>\r\n                            )}\r\n                        </Row>\r\n                    </Container>\r\n                </section>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddObservation;\r\n","import { Outlet } from \"react-router-dom\";\r\nimport {createContext, useEffect, useState} from \"react\";\r\nimport { cameraSettingFields } from \"../../helpers/url\";\r\n\r\nexport const ObservationContext = createContext({});\r\n\r\nconst Observations = () => {\r\n    const [observationType, setObservationType] = useState({\r\n        image_type: 1\r\n    });\r\n\r\n    const [observationSteps, setObservationSteps] = useState({\r\n        total: 3,\r\n        active: 1,\r\n        mode: {\r\n            update: false\r\n        }\r\n    });\r\n    const [observationImages, setObservationImages] = useState([]);\r\n    const [cameraDetails, setCameraDetails] = useState(cameraSettingFields);\r\n    const [observationCategory, setObservationCategory] = useState([]);\r\n    const [observationData, setObservationData] = useState({});\r\n\r\n    useEffect(()=> {\r\n        let data = (observationImages?.data) ? [...observationImages?.data] : []\r\n        setObservationData({\r\n            // is_draft: observationSteps?.is_draft ? 1 : 0,\r\n            image_type: observationType?.image_type,\r\n            map_data: data,\r\n            elevation_angle: null,\r\n            video_url : ''\r\n        })\r\n    }, [observationImages?.data, observationSteps?.is_draft, observationType?.image_type])\r\n\r\n    return(\r\n        <ObservationContext.Provider value={\r\n            {\r\n                observationType,\r\n                setObservationType,\r\n                observationSteps,\r\n                setObservationSteps,\r\n                observationImages,\r\n                setObservationImages,\r\n                observationCategory,\r\n                setObservationCategory,\r\n                observationData,\r\n                setObservationData,\r\n                cameraDetails, \r\n                setCameraDetails\r\n            }\r\n        }>\r\n            <Outlet />\r\n        </ObservationContext.Provider>\r\n    )\r\n}\r\n\r\nexport default Observations;"],"names":["props","handleInput1","updateSetting","error","md","className","type","name","placeholder","value","camera_type","onChange","e","data","maxLength","focal_length","aperture","iso","shutter_speed","fps","question_field_one","question_field_two","maxLimit","imageFormat","multiple","handleUploadImage","small","handleObvAdd","defaultUploadBox","blogUpload","htmlFor","icon","color","width","height","id","accept","count","size","duplicate","onClick","src","alt","imageClass","converted","useState","imageSrc","setImageSrc","imageRef","setImageRef","useEffect","observer","didCancel","IntersectionObserver","entries","forEach","entry","intersectionRatio","isIntersecting","unobserve","threshold","rootMargin","observe","ref","onLoad","event","target","classList","add","onError","observationImages","useContext","ObservationContext","useDebugValue","GoogleMapsAPI","process","Geocode","Map","getCity","addressArray","i","length","types","long_name","getCountry","country","short_name","getArea","j","getState","setState","onInfoWindowClose","onMarkerDragEnd","newLat","latLng","lat","newLng","lng","then","response","address","results","formatted_address","address_components","city","area","state","short_address","filter","x","undefined","toString","markerPosition","mapPosition","handleState","console","onPlaceSelected","place","latValue","geometry","location","lngValue","countryCode","center","this","log","Number","nextProps","nextState","AsyncMap","withGoogleMap","google","defaultZoom","zoom","defaultCenter","defaultOptions","disableDefaultUI","draggable","onDragEnd","position","style","searchInputClass","onClose","padding","margin","googleMapURL","loadingElement","containerElement","containerPosition","mapElement","mapContainer","borderRadius","mapRadius","Component","obvType","auth","useAuth","useObservations","setObservationImages","observationSteps","observationCategory","setObservationCategory","setCategory","oldCategory","setOldCategory","isChecked","setIsChecked","selectedCategory","setSelectedCategory","ObservationData","errorData","Object","values","isPopoverContentOpen","setIsPopoverContentOpen","tippyRef","useRef","ImageCarousel","carouselContent","Images","map","item","index","navigation","modules","Navigation","PopoverContent","isOpen","categoryList","newCategory","image","toLowerCase","replaceAll","push","prev","updatedCategory","prevCategory","selected_image_index","category_map","category","image_type","selected_image_id","imagItem","sm","checked","find","list","hidden","parseFloat","includes","filterValue","onCategoryChange","content","interactive","appendTo","document","body","animation","theme","reference","showCategory","toggleTab","handleImageInput","step","disableNext","fref","address1","setAddress","initialAddress","setInitialAddress","isLoaded","setIsLoaded","observationData","isActiveDire","setActiveDire","angleDegree","setAngleDegree","isTimezoneOpen","setIsTimezoneOpen","searchTimeZone","setSearchTimeZone","setSameAsMap","sameAsDateTime","setSameAsDateTime","sameAsFirstMap","current","handleChangeLatLng","latitude","longitude","handleCopyData","sameAsFirstDate","observationArray","observationAddress","keys","observationMap","copyImages","k","active","xxl","check","MapWrapper","flag","country_code","lg","ReactCountryFlag","addressState","handleChangeLat","handleChangeLng","max","moment","Date","format","obs_date","obs_time","toggle","timezone","header","findTimeZone","indexOf","time_accuracy","azimuth","is_precise_azimuth","directionValue","direction","getdirectionAngle","directionWrapper","querySelector","getAngleName","getElementById","getAttribute","remove","getdirectionDegree","selectDirection","angle","dirData","min","Tabs","disabled","existingObvImageData","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","handleUpdateImage","fileList","files","catch","lastModified","markTabActive","preview","setPreview","activeTab","setActiveTab","useLayoutEffect","tab","LazyLoad","detectImage","mode","setCameraDetails","images","setImages","setError","user","location_metadata","userLocation","observation_count","cameraSettingFields","UploadImageUI","Array","from","onloadend","base64String","replace","baseImage","random","Math","substring","fileSize","toFixed","uploadImageDefaultState","prevState","draft","proceedNext","isMultiple","progress","setProgress","total","imageDelete","open","handleClose","handleConfirmation","centered","backdrop","keyboard","cdn","showUploadedPreview","observationType","setObservationType","setIsMultiple","MultiImageTabs","setActiveImageTab","isOther","isConfirmPopUp","setIsConfirmPopUp","shouldShowConfirmation","setShouldShowConfirmation","toggleImageTab","handleConfirmationPopUp","is_other","tabs","tabId","selectedObvIndex","filteredData","handleInput","handleOtherCamera","cameraDetails","isSwitchOn","EquipmentForm","elevation_angle","video_url","story","isLoading","setIsLoading","setObservationSteps","setObservationData","useLocation","navigate","useNavigate","next","setNext","setSwitchOn","updateMode","setUpdateMode","setReset","success","setSuccess","deletedImage","setDeletedImage","setDraft","draftData","setDraftData","disabledLocation","map_data","disabledEquipment","disabledLocationTab","disabledEquipmentTab","window","scrollTo","sendData","cloneDeep","require","formData","FormData","finalData","append","is_draft","camera","JSON","stringify","axios","baseURL","headers","Authorization","token","access","status","message","setTimeout","handleReset","getCameraDetail","update","clear","removeItem","newImage","reload","getObservationDataForUpdate","obvId","camera_data","imageUrl","fileName","url","split","pop","trim","getFileName","fetch","contentType","get","blob","File","compressed_image","updateUrl","pathname","routeUrls","r","Loader","fixContent","dismissible","onSubmit","preventDefault","createContext","Provider"],"sourceRoot":""}